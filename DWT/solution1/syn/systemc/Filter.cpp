// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> Filter::ap_ST_fsm_state1 = "1";
const sc_lv<23> Filter::ap_ST_fsm_state2 = "10";
const sc_lv<23> Filter::ap_ST_fsm_state3 = "100";
const sc_lv<23> Filter::ap_ST_fsm_state4 = "1000";
const sc_lv<23> Filter::ap_ST_fsm_state5 = "10000";
const sc_lv<23> Filter::ap_ST_fsm_state6 = "100000";
const sc_lv<23> Filter::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> Filter::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> Filter::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> Filter::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> Filter::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> Filter::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> Filter::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> Filter::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> Filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Filter::ap_const_lv32_1 = "1";
const sc_lv<1> Filter::ap_const_lv1_0 = "0";
const sc_lv<32> Filter::ap_const_lv32_2 = "10";
const sc_lv<32> Filter::ap_const_lv32_3 = "11";
const sc_lv<32> Filter::ap_const_lv32_4 = "100";
const sc_lv<32> Filter::ap_const_lv32_9 = "1001";
const sc_lv<32> Filter::ap_const_lv32_F = "1111";
const sc_lv<32> Filter::ap_const_lv32_14 = "10100";
const sc_lv<32> Filter::ap_const_lv32_15 = "10101";
const sc_lv<8> Filter::ap_const_lv8_0 = "00000000";
const sc_lv<1> Filter::ap_const_lv1_1 = "1";
const sc_lv<32> Filter::ap_const_lv32_16 = "10110";
const sc_lv<7> Filter::ap_const_lv7_0 = "0000000";
const sc_lv<3> Filter::ap_const_lv3_6 = "110";
const sc_lv<3> Filter::ap_const_lv3_5 = "101";
const sc_lv<3> Filter::ap_const_lv3_4 = "100";
const sc_lv<3> Filter::ap_const_lv3_3 = "11";
const sc_lv<3> Filter::ap_const_lv3_2 = "10";
const sc_lv<3> Filter::ap_const_lv3_1 = "1";
const sc_lv<3> Filter::ap_const_lv3_0 = "000";
const sc_lv<3> Filter::ap_const_lv3_7 = "111";
const sc_lv<32> Filter::ap_const_lv32_10 = "10000";
const sc_lv<64> Filter::ap_const_lv64_3FE0000000000000 = "11111111100000000000000000000000000000000000000000000000000000";
const sc_lv<32> Filter::ap_const_lv32_A = "1010";
const sc_lv<8> Filter::ap_const_lv8_A0 = "10100000";
const sc_lv<8> Filter::ap_const_lv8_1 = "1";
const sc_lv<7> Filter::ap_const_lv7_78 = "1111000";
const sc_lv<7> Filter::ap_const_lv7_1 = "1";
const sc_lv<32> Filter::ap_const_lv32_6 = "110";
const sc_lv<5> Filter::ap_const_lv5_0 = "00000";
const sc_lv<32> Filter::ap_const_lv32_34 = "110100";
const sc_lv<32> Filter::ap_const_lv32_3E = "111110";
const sc_lv<12> Filter::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> Filter::ap_const_lv32_B = "1011";
const sc_lv<11> Filter::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> Filter::ap_const_lv32_35 = "110101";
const sc_lv<32> Filter::ap_const_lv32_44 = "1000100";
const bool Filter::ap_const_boolean_1 = true;

Filter::Filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    DWT_Accel_dadd_64jbC_U65 = new DWT_Accel_dadd_64jbC<1,5,64,64,64>("DWT_Accel_dadd_64jbC_U65");
    DWT_Accel_dadd_64jbC_U65->clk(ap_clk);
    DWT_Accel_dadd_64jbC_U65->reset(ap_rst);
    DWT_Accel_dadd_64jbC_U65->din0(tmp_23_reg_891);
    DWT_Accel_dadd_64jbC_U65->din1(tmp_25_reg_896);
    DWT_Accel_dadd_64jbC_U65->ce(ap_var_for_const0);
    DWT_Accel_dadd_64jbC_U65->dout(grp_fu_452_p2);
    DWT_Accel_dmul_64fYi_U66 = new DWT_Accel_dmul_64fYi<1,6,64,64,64>("DWT_Accel_dmul_64fYi_U66");
    DWT_Accel_dmul_64fYi_U66->clk(ap_clk);
    DWT_Accel_dmul_64fYi_U66->reset(ap_rst);
    DWT_Accel_dmul_64fYi_U66->din0(tmp_s_reg_881);
    DWT_Accel_dmul_64fYi_U66->din1(ap_var_for_const1);
    DWT_Accel_dmul_64fYi_U66->ce(ap_var_for_const0);
    DWT_Accel_dmul_64fYi_U66->dout(grp_fu_456_p2);
    DWT_Accel_dmul_64fYi_U67 = new DWT_Accel_dmul_64fYi<1,6,64,64,64>("DWT_Accel_dmul_64fYi_U67");
    DWT_Accel_dmul_64fYi_U67->clk(ap_clk);
    DWT_Accel_dmul_64fYi_U67->reset(ap_rst);
    DWT_Accel_dmul_64fYi_U67->din0(tmp_24_reg_886);
    DWT_Accel_dmul_64fYi_U67->din1(ap_var_for_const1);
    DWT_Accel_dmul_64fYi_U67->ce(ap_var_for_const0);
    DWT_Accel_dmul_64fYi_U67->dout(grp_fu_461_p2);
    DWT_Accel_sitodp_hbi_U68 = new DWT_Accel_sitodp_hbi<1,6,32,64>("DWT_Accel_sitodp_hbi_U68");
    DWT_Accel_sitodp_hbi_U68->clk(ap_clk);
    DWT_Accel_sitodp_hbi_U68->reset(ap_rst);
    DWT_Accel_sitodp_hbi_U68->din0(grp_fu_466_p0);
    DWT_Accel_sitodp_hbi_U68->ce(ap_var_for_const0);
    DWT_Accel_sitodp_hbi_U68->dout(grp_fu_466_p1);
    DWT_Accel_sitodp_hbi_U69 = new DWT_Accel_sitodp_hbi<1,6,32,64>("DWT_Accel_sitodp_hbi_U69");
    DWT_Accel_sitodp_hbi_U69->clk(ap_clk);
    DWT_Accel_sitodp_hbi_U69->reset(ap_rst);
    DWT_Accel_sitodp_hbi_U69->din0(grp_fu_469_p0);
    DWT_Accel_sitodp_hbi_U69->ce(ap_var_for_const0);
    DWT_Accel_sitodp_hbi_U69->dout(grp_fu_469_p1);
    DWT_Accel_mux_832ibs_U70 = new DWT_Accel_mux_832ibs<1,1,16,16,16,16,16,16,16,16,32,16>("DWT_Accel_mux_832ibs_U70");
    DWT_Accel_mux_832ibs_U70->din0(A_0_q0);
    DWT_Accel_mux_832ibs_U70->din1(A_1_q0);
    DWT_Accel_mux_832ibs_U70->din2(A_2_q0);
    DWT_Accel_mux_832ibs_U70->din3(A_3_q0);
    DWT_Accel_mux_832ibs_U70->din4(A_4_q0);
    DWT_Accel_mux_832ibs_U70->din5(A_5_q0);
    DWT_Accel_mux_832ibs_U70->din6(A_6_q0);
    DWT_Accel_mux_832ibs_U70->din7(A_7_q0);
    DWT_Accel_mux_832ibs_U70->din8(zext_ln186_fu_569_p1);
    DWT_Accel_mux_832ibs_U70->dout(tmp_fu_572_p10);
    DWT_Accel_mux_832ibs_U71 = new DWT_Accel_mux_832ibs<1,1,16,16,16,16,16,16,16,16,32,16>("DWT_Accel_mux_832ibs_U71");
    DWT_Accel_mux_832ibs_U71->din0(B_0_q0);
    DWT_Accel_mux_832ibs_U71->din1(B_1_q0);
    DWT_Accel_mux_832ibs_U71->din2(B_2_q0);
    DWT_Accel_mux_832ibs_U71->din3(B_3_q0);
    DWT_Accel_mux_832ibs_U71->din4(B_4_q0);
    DWT_Accel_mux_832ibs_U71->din5(B_5_q0);
    DWT_Accel_mux_832ibs_U71->din6(B_6_q0);
    DWT_Accel_mux_832ibs_U71->din7(B_7_q0);
    DWT_Accel_mux_832ibs_U71->din8(zext_ln186_fu_569_p1);
    DWT_Accel_mux_832ibs_U71->dout(tmp_3_fu_594_p10);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_4_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_4_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_5_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_5_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_6_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_6_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_7_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_A_7_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_4_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_4_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_5_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_5_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_6_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_6_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_7_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln186_3_fu_549_p1 );

    SC_METHOD(thread_B_7_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_C_0_address0);
    sensitive << ( C_0_addr_reg_912 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_0_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_0_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_0_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_1_address0);
    sensitive << ( C_1_addr_reg_917 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_1_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_1_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_1_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_2_address0);
    sensitive << ( C_2_addr_reg_922 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_2_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_2_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_2_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_3_address0);
    sensitive << ( C_3_addr_reg_927 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_3_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_3_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_3_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_4_address0);
    sensitive << ( C_4_addr_reg_932 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_4_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_4_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_4_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_5_address0);
    sensitive << ( C_5_addr_reg_937 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_5_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_5_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_5_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_6_address0);
    sensitive << ( C_6_addr_reg_942 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_6_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_6_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_6_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_7_address0);
    sensitive << ( C_7_addr_reg_947 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_7_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_7_d0);
    sensitive << ( val_V_reg_952 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_C_7_we0);
    sensitive << ( trunc_ln186_reg_764 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_add_ln186_1_fu_544_p2);
    sensitive << ( zext_ln182_reg_751 );
    sensitive << ( add_ln186_fu_538_p2 );

    SC_METHOD(thread_add_ln186_fu_538_p2);
    sensitive << ( zext_ln186_1_fu_522_p1 );
    sensitive << ( zext_ln186_2_fu_534_p1 );

    SC_METHOD(thread_add_ln502_fu_658_p2);
    sensitive << ( zext_ln502_fu_655_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln180_fu_472_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln180_fu_472_p2 );

    SC_METHOD(thread_grp_fu_466_p0);
    sensitive << ( tmp_reg_861 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_469_p0);
    sensitive << ( tmp_3_reg_866 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_fu_478_p2);
    sensitive << ( i_0_reg_430 );

    SC_METHOD(thread_icmp_ln180_fu_472_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_430 );

    SC_METHOD(thread_icmp_ln182_fu_488_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_441 );

    SC_METHOD(thread_isNeg_fu_664_p3);
    sensitive << ( add_ln502_fu_658_p2 );

    SC_METHOD(thread_j_fu_494_p2);
    sensitive << ( j_0_reg_441 );

    SC_METHOD(thread_lshr_ln_fu_504_p4);
    sensitive << ( j_0_reg_441 );

    SC_METHOD(thread_mantissa_V_fu_642_p4);
    sensitive << ( tmp_V_4_reg_907 );

    SC_METHOD(thread_p_Val2_s_fu_624_p1);
    sensitive << ( grp_fu_452_p2 );

    SC_METHOD(thread_r_V_4_fu_707_p2);
    sensitive << ( zext_ln682_fu_651_p1 );
    sensitive << ( zext_ln1287_fu_693_p1 );

    SC_METHOD(thread_r_V_fu_701_p2);
    sensitive << ( mantissa_V_fu_642_p4 );
    sensitive << ( zext_ln1285_fu_697_p1 );

    SC_METHOD(thread_sext_ln1311_4_fu_689_p1);
    sensitive << ( ush_fu_681_p3 );

    SC_METHOD(thread_sext_ln1311_fu_677_p1);
    sensitive << ( sub_ln1311_fu_672_p2 );

    SC_METHOD(thread_sub_ln1311_fu_672_p2);
    sensitive << ( tmp_V_reg_901 );

    SC_METHOD(thread_tmp_34_fu_514_p3);
    sensitive << ( lshr_ln_fu_504_p4 );

    SC_METHOD(thread_tmp_35_fu_526_p3);
    sensitive << ( lshr_ln_fu_504_p4 );

    SC_METHOD(thread_tmp_36_fu_725_p4);
    sensitive << ( r_V_4_fu_707_p2 );

    SC_METHOD(thread_tmp_39_fu_713_p3);
    sensitive << ( r_V_fu_701_p2 );

    SC_METHOD(thread_tmp_V_4_fu_638_p1);
    sensitive << ( p_Val2_s_fu_624_p1 );

    SC_METHOD(thread_trunc_ln186_fu_500_p1);
    sensitive << ( j_0_reg_441 );

    SC_METHOD(thread_ush_fu_681_p3);
    sensitive << ( add_ln502_fu_658_p2 );
    sensitive << ( isNeg_fu_664_p3 );
    sensitive << ( sext_ln1311_fu_677_p1 );

    SC_METHOD(thread_val_V_fu_735_p3);
    sensitive << ( isNeg_fu_664_p3 );
    sensitive << ( zext_ln662_fu_721_p1 );
    sensitive << ( tmp_36_fu_725_p4 );

    SC_METHOD(thread_zext_ln1285_fu_697_p1);
    sensitive << ( sext_ln1311_4_fu_689_p1 );

    SC_METHOD(thread_zext_ln1287_fu_693_p1);
    sensitive << ( sext_ln1311_4_fu_689_p1 );

    SC_METHOD(thread_zext_ln182_fu_484_p1);
    sensitive << ( i_0_reg_430 );

    SC_METHOD(thread_zext_ln186_1_fu_522_p1);
    sensitive << ( tmp_34_fu_514_p3 );

    SC_METHOD(thread_zext_ln186_2_fu_534_p1);
    sensitive << ( tmp_35_fu_526_p3 );

    SC_METHOD(thread_zext_ln186_3_fu_549_p1);
    sensitive << ( add_ln186_1_fu_544_p2 );

    SC_METHOD(thread_zext_ln186_fu_569_p1);
    sensitive << ( trunc_ln186_reg_764 );

    SC_METHOD(thread_zext_ln502_fu_655_p1);
    sensitive << ( tmp_V_reg_901 );

    SC_METHOD(thread_zext_ln662_fu_721_p1);
    sensitive << ( tmp_39_fu_713_p3 );

    SC_METHOD(thread_zext_ln682_fu_651_p1);
    sensitive << ( mantissa_V_fu_642_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln180_fu_472_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln182_fu_488_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_0_address0, "(port)A_0_address0");
    sc_trace(mVcdFile, A_0_ce0, "(port)A_0_ce0");
    sc_trace(mVcdFile, A_0_q0, "(port)A_0_q0");
    sc_trace(mVcdFile, A_1_address0, "(port)A_1_address0");
    sc_trace(mVcdFile, A_1_ce0, "(port)A_1_ce0");
    sc_trace(mVcdFile, A_1_q0, "(port)A_1_q0");
    sc_trace(mVcdFile, A_2_address0, "(port)A_2_address0");
    sc_trace(mVcdFile, A_2_ce0, "(port)A_2_ce0");
    sc_trace(mVcdFile, A_2_q0, "(port)A_2_q0");
    sc_trace(mVcdFile, A_3_address0, "(port)A_3_address0");
    sc_trace(mVcdFile, A_3_ce0, "(port)A_3_ce0");
    sc_trace(mVcdFile, A_3_q0, "(port)A_3_q0");
    sc_trace(mVcdFile, A_4_address0, "(port)A_4_address0");
    sc_trace(mVcdFile, A_4_ce0, "(port)A_4_ce0");
    sc_trace(mVcdFile, A_4_q0, "(port)A_4_q0");
    sc_trace(mVcdFile, A_5_address0, "(port)A_5_address0");
    sc_trace(mVcdFile, A_5_ce0, "(port)A_5_ce0");
    sc_trace(mVcdFile, A_5_q0, "(port)A_5_q0");
    sc_trace(mVcdFile, A_6_address0, "(port)A_6_address0");
    sc_trace(mVcdFile, A_6_ce0, "(port)A_6_ce0");
    sc_trace(mVcdFile, A_6_q0, "(port)A_6_q0");
    sc_trace(mVcdFile, A_7_address0, "(port)A_7_address0");
    sc_trace(mVcdFile, A_7_ce0, "(port)A_7_ce0");
    sc_trace(mVcdFile, A_7_q0, "(port)A_7_q0");
    sc_trace(mVcdFile, B_0_address0, "(port)B_0_address0");
    sc_trace(mVcdFile, B_0_ce0, "(port)B_0_ce0");
    sc_trace(mVcdFile, B_0_q0, "(port)B_0_q0");
    sc_trace(mVcdFile, B_1_address0, "(port)B_1_address0");
    sc_trace(mVcdFile, B_1_ce0, "(port)B_1_ce0");
    sc_trace(mVcdFile, B_1_q0, "(port)B_1_q0");
    sc_trace(mVcdFile, B_2_address0, "(port)B_2_address0");
    sc_trace(mVcdFile, B_2_ce0, "(port)B_2_ce0");
    sc_trace(mVcdFile, B_2_q0, "(port)B_2_q0");
    sc_trace(mVcdFile, B_3_address0, "(port)B_3_address0");
    sc_trace(mVcdFile, B_3_ce0, "(port)B_3_ce0");
    sc_trace(mVcdFile, B_3_q0, "(port)B_3_q0");
    sc_trace(mVcdFile, B_4_address0, "(port)B_4_address0");
    sc_trace(mVcdFile, B_4_ce0, "(port)B_4_ce0");
    sc_trace(mVcdFile, B_4_q0, "(port)B_4_q0");
    sc_trace(mVcdFile, B_5_address0, "(port)B_5_address0");
    sc_trace(mVcdFile, B_5_ce0, "(port)B_5_ce0");
    sc_trace(mVcdFile, B_5_q0, "(port)B_5_q0");
    sc_trace(mVcdFile, B_6_address0, "(port)B_6_address0");
    sc_trace(mVcdFile, B_6_ce0, "(port)B_6_ce0");
    sc_trace(mVcdFile, B_6_q0, "(port)B_6_q0");
    sc_trace(mVcdFile, B_7_address0, "(port)B_7_address0");
    sc_trace(mVcdFile, B_7_ce0, "(port)B_7_ce0");
    sc_trace(mVcdFile, B_7_q0, "(port)B_7_q0");
    sc_trace(mVcdFile, C_0_address0, "(port)C_0_address0");
    sc_trace(mVcdFile, C_0_ce0, "(port)C_0_ce0");
    sc_trace(mVcdFile, C_0_we0, "(port)C_0_we0");
    sc_trace(mVcdFile, C_0_d0, "(port)C_0_d0");
    sc_trace(mVcdFile, C_1_address0, "(port)C_1_address0");
    sc_trace(mVcdFile, C_1_ce0, "(port)C_1_ce0");
    sc_trace(mVcdFile, C_1_we0, "(port)C_1_we0");
    sc_trace(mVcdFile, C_1_d0, "(port)C_1_d0");
    sc_trace(mVcdFile, C_2_address0, "(port)C_2_address0");
    sc_trace(mVcdFile, C_2_ce0, "(port)C_2_ce0");
    sc_trace(mVcdFile, C_2_we0, "(port)C_2_we0");
    sc_trace(mVcdFile, C_2_d0, "(port)C_2_d0");
    sc_trace(mVcdFile, C_3_address0, "(port)C_3_address0");
    sc_trace(mVcdFile, C_3_ce0, "(port)C_3_ce0");
    sc_trace(mVcdFile, C_3_we0, "(port)C_3_we0");
    sc_trace(mVcdFile, C_3_d0, "(port)C_3_d0");
    sc_trace(mVcdFile, C_4_address0, "(port)C_4_address0");
    sc_trace(mVcdFile, C_4_ce0, "(port)C_4_ce0");
    sc_trace(mVcdFile, C_4_we0, "(port)C_4_we0");
    sc_trace(mVcdFile, C_4_d0, "(port)C_4_d0");
    sc_trace(mVcdFile, C_5_address0, "(port)C_5_address0");
    sc_trace(mVcdFile, C_5_ce0, "(port)C_5_ce0");
    sc_trace(mVcdFile, C_5_we0, "(port)C_5_we0");
    sc_trace(mVcdFile, C_5_d0, "(port)C_5_d0");
    sc_trace(mVcdFile, C_6_address0, "(port)C_6_address0");
    sc_trace(mVcdFile, C_6_ce0, "(port)C_6_ce0");
    sc_trace(mVcdFile, C_6_we0, "(port)C_6_we0");
    sc_trace(mVcdFile, C_6_d0, "(port)C_6_d0");
    sc_trace(mVcdFile, C_7_address0, "(port)C_7_address0");
    sc_trace(mVcdFile, C_7_ce0, "(port)C_7_ce0");
    sc_trace(mVcdFile, C_7_we0, "(port)C_7_we0");
    sc_trace(mVcdFile, C_7_d0, "(port)C_7_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_478_p2, "i_fu_478_p2");
    sc_trace(mVcdFile, i_reg_746, "i_reg_746");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln182_fu_484_p1, "zext_ln182_fu_484_p1");
    sc_trace(mVcdFile, zext_ln182_reg_751, "zext_ln182_reg_751");
    sc_trace(mVcdFile, icmp_ln180_fu_472_p2, "icmp_ln180_fu_472_p2");
    sc_trace(mVcdFile, j_fu_494_p2, "j_fu_494_p2");
    sc_trace(mVcdFile, j_reg_759, "j_reg_759");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, trunc_ln186_fu_500_p1, "trunc_ln186_fu_500_p1");
    sc_trace(mVcdFile, trunc_ln186_reg_764, "trunc_ln186_reg_764");
    sc_trace(mVcdFile, icmp_ln182_fu_488_p2, "icmp_ln182_fu_488_p2");
    sc_trace(mVcdFile, zext_ln186_3_fu_549_p1, "zext_ln186_3_fu_549_p1");
    sc_trace(mVcdFile, zext_ln186_3_reg_769, "zext_ln186_3_reg_769");
    sc_trace(mVcdFile, tmp_fu_572_p10, "tmp_fu_572_p10");
    sc_trace(mVcdFile, tmp_reg_861, "tmp_reg_861");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_3_fu_594_p10, "tmp_3_fu_594_p10");
    sc_trace(mVcdFile, tmp_3_reg_866, "tmp_3_reg_866");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_466_p1, "grp_fu_466_p1");
    sc_trace(mVcdFile, tmp_s_reg_881, "tmp_s_reg_881");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_469_p1, "grp_fu_469_p1");
    sc_trace(mVcdFile, tmp_24_reg_886, "tmp_24_reg_886");
    sc_trace(mVcdFile, grp_fu_456_p2, "grp_fu_456_p2");
    sc_trace(mVcdFile, tmp_23_reg_891, "tmp_23_reg_891");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_461_p2, "grp_fu_461_p2");
    sc_trace(mVcdFile, tmp_25_reg_896, "tmp_25_reg_896");
    sc_trace(mVcdFile, tmp_V_reg_901, "tmp_V_reg_901");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_V_4_fu_638_p1, "tmp_V_4_fu_638_p1");
    sc_trace(mVcdFile, tmp_V_4_reg_907, "tmp_V_4_reg_907");
    sc_trace(mVcdFile, C_0_addr_reg_912, "C_0_addr_reg_912");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, C_1_addr_reg_917, "C_1_addr_reg_917");
    sc_trace(mVcdFile, C_2_addr_reg_922, "C_2_addr_reg_922");
    sc_trace(mVcdFile, C_3_addr_reg_927, "C_3_addr_reg_927");
    sc_trace(mVcdFile, C_4_addr_reg_932, "C_4_addr_reg_932");
    sc_trace(mVcdFile, C_5_addr_reg_937, "C_5_addr_reg_937");
    sc_trace(mVcdFile, C_6_addr_reg_942, "C_6_addr_reg_942");
    sc_trace(mVcdFile, C_7_addr_reg_947, "C_7_addr_reg_947");
    sc_trace(mVcdFile, val_V_fu_735_p3, "val_V_fu_735_p3");
    sc_trace(mVcdFile, val_V_reg_952, "val_V_reg_952");
    sc_trace(mVcdFile, i_0_reg_430, "i_0_reg_430");
    sc_trace(mVcdFile, j_0_reg_441, "j_0_reg_441");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_466_p0, "grp_fu_466_p0");
    sc_trace(mVcdFile, grp_fu_469_p0, "grp_fu_469_p0");
    sc_trace(mVcdFile, lshr_ln_fu_504_p4, "lshr_ln_fu_504_p4");
    sc_trace(mVcdFile, tmp_34_fu_514_p3, "tmp_34_fu_514_p3");
    sc_trace(mVcdFile, tmp_35_fu_526_p3, "tmp_35_fu_526_p3");
    sc_trace(mVcdFile, zext_ln186_1_fu_522_p1, "zext_ln186_1_fu_522_p1");
    sc_trace(mVcdFile, zext_ln186_2_fu_534_p1, "zext_ln186_2_fu_534_p1");
    sc_trace(mVcdFile, add_ln186_fu_538_p2, "add_ln186_fu_538_p2");
    sc_trace(mVcdFile, add_ln186_1_fu_544_p2, "add_ln186_1_fu_544_p2");
    sc_trace(mVcdFile, zext_ln186_fu_569_p1, "zext_ln186_fu_569_p1");
    sc_trace(mVcdFile, grp_fu_452_p2, "grp_fu_452_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_624_p1, "p_Val2_s_fu_624_p1");
    sc_trace(mVcdFile, mantissa_V_fu_642_p4, "mantissa_V_fu_642_p4");
    sc_trace(mVcdFile, zext_ln502_fu_655_p1, "zext_ln502_fu_655_p1");
    sc_trace(mVcdFile, add_ln502_fu_658_p2, "add_ln502_fu_658_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_672_p2, "sub_ln1311_fu_672_p2");
    sc_trace(mVcdFile, isNeg_fu_664_p3, "isNeg_fu_664_p3");
    sc_trace(mVcdFile, sext_ln1311_fu_677_p1, "sext_ln1311_fu_677_p1");
    sc_trace(mVcdFile, ush_fu_681_p3, "ush_fu_681_p3");
    sc_trace(mVcdFile, sext_ln1311_4_fu_689_p1, "sext_ln1311_4_fu_689_p1");
    sc_trace(mVcdFile, zext_ln1285_fu_697_p1, "zext_ln1285_fu_697_p1");
    sc_trace(mVcdFile, zext_ln682_fu_651_p1, "zext_ln682_fu_651_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_693_p1, "zext_ln1287_fu_693_p1");
    sc_trace(mVcdFile, r_V_fu_701_p2, "r_V_fu_701_p2");
    sc_trace(mVcdFile, tmp_39_fu_713_p3, "tmp_39_fu_713_p3");
    sc_trace(mVcdFile, r_V_4_fu_707_p2, "r_V_4_fu_707_p2");
    sc_trace(mVcdFile, zext_ln662_fu_721_p1, "zext_ln662_fu_721_p1");
    sc_trace(mVcdFile, tmp_36_fu_725_p4, "tmp_36_fu_725_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Filter::~Filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete DWT_Accel_dadd_64jbC_U65;
    delete DWT_Accel_dmul_64fYi_U66;
    delete DWT_Accel_dmul_64fYi_U67;
    delete DWT_Accel_sitodp_hbi_U68;
    delete DWT_Accel_sitodp_hbi_U69;
    delete DWT_Accel_mux_832ibs_U70;
    delete DWT_Accel_mux_832ibs_U71;
}

void Filter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Filter::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FE0000000000000;
}

void Filter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln182_fu_488_p2.read(), ap_const_lv1_1))) {
        i_0_reg_430 = i_reg_746.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_430 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln180_fu_472_p2.read(), ap_const_lv1_0))) {
        j_0_reg_441 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        j_0_reg_441 = j_reg_759.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        C_0_addr_reg_912 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        C_1_addr_reg_917 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        C_2_addr_reg_922 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        C_3_addr_reg_927 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        C_4_addr_reg_932 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        C_5_addr_reg_937 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        C_6_addr_reg_942 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        C_7_addr_reg_947 =  (sc_lv<12>) (zext_ln186_3_reg_769.read());
        val_V_reg_952 = val_V_fu_735_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_746 = i_fu_478_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_759 = j_fu_494_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_23_reg_891 = grp_fu_456_p2.read();
        tmp_25_reg_896 = grp_fu_461_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_24_reg_886 = grp_fu_469_p1.read();
        tmp_s_reg_881 = grp_fu_466_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_3_reg_866 = tmp_3_fu_594_p10.read();
        tmp_reg_861 = tmp_fu_572_p10.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_V_4_reg_907 = tmp_V_4_fu_638_p1.read();
        tmp_V_reg_901 = p_Val2_s_fu_624_p1.read().range(62, 52);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln182_fu_488_p2.read()))) {
        trunc_ln186_reg_764 = trunc_ln186_fu_500_p1.read();
        zext_ln186_3_reg_769 = zext_ln186_3_fu_549_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln180_fu_472_p2.read(), ap_const_lv1_0))) {
        zext_ln182_reg_751 = zext_ln182_fu_484_p1.read();
    }
}

void Filter::thread_A_0_address0() {
    A_0_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_0_ce0 = ap_const_logic_1;
    } else {
        A_0_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_A_1_address0() {
    A_1_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_1_ce0 = ap_const_logic_1;
    } else {
        A_1_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_A_2_address0() {
    A_2_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_2_ce0 = ap_const_logic_1;
    } else {
        A_2_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_A_3_address0() {
    A_3_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_3_ce0 = ap_const_logic_1;
    } else {
        A_3_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_A_4_address0() {
    A_4_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_4_ce0 = ap_const_logic_1;
    } else {
        A_4_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_A_5_address0() {
    A_5_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_5_ce0 = ap_const_logic_1;
    } else {
        A_5_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_A_6_address0() {
    A_6_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_6_ce0 = ap_const_logic_1;
    } else {
        A_6_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_A_7_address0() {
    A_7_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_A_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_7_ce0 = ap_const_logic_1;
    } else {
        A_7_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_0_address0() {
    B_0_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_0_ce0 = ap_const_logic_1;
    } else {
        B_0_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_1_address0() {
    B_1_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_1_ce0 = ap_const_logic_1;
    } else {
        B_1_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_2_address0() {
    B_2_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_2_ce0 = ap_const_logic_1;
    } else {
        B_2_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_3_address0() {
    B_3_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_3_ce0 = ap_const_logic_1;
    } else {
        B_3_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_4_address0() {
    B_4_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_4_ce0 = ap_const_logic_1;
    } else {
        B_4_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_5_address0() {
    B_5_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_5_ce0 = ap_const_logic_1;
    } else {
        B_5_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_6_address0() {
    B_6_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_6_ce0 = ap_const_logic_1;
    } else {
        B_6_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_B_7_address0() {
    B_7_address0 =  (sc_lv<12>) (zext_ln186_3_fu_549_p1.read());
}

void Filter::thread_B_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_7_ce0 = ap_const_logic_1;
    } else {
        B_7_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_0_address0() {
    C_0_address0 = C_0_addr_reg_912.read();
}

void Filter::thread_C_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_0_ce0 = ap_const_logic_1;
    } else {
        C_0_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_0_d0() {
    C_0_d0 = val_V_reg_952.read();
}

void Filter::thread_C_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_0))) {
        C_0_we0 = ap_const_logic_1;
    } else {
        C_0_we0 = ap_const_logic_0;
    }
}

void Filter::thread_C_1_address0() {
    C_1_address0 = C_1_addr_reg_917.read();
}

void Filter::thread_C_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_1_ce0 = ap_const_logic_1;
    } else {
        C_1_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_1_d0() {
    C_1_d0 = val_V_reg_952.read();
}

void Filter::thread_C_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_1))) {
        C_1_we0 = ap_const_logic_1;
    } else {
        C_1_we0 = ap_const_logic_0;
    }
}

void Filter::thread_C_2_address0() {
    C_2_address0 = C_2_addr_reg_922.read();
}

void Filter::thread_C_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_2_ce0 = ap_const_logic_1;
    } else {
        C_2_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_2_d0() {
    C_2_d0 = val_V_reg_952.read();
}

void Filter::thread_C_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_2))) {
        C_2_we0 = ap_const_logic_1;
    } else {
        C_2_we0 = ap_const_logic_0;
    }
}

void Filter::thread_C_3_address0() {
    C_3_address0 = C_3_addr_reg_927.read();
}

void Filter::thread_C_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_3_ce0 = ap_const_logic_1;
    } else {
        C_3_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_3_d0() {
    C_3_d0 = val_V_reg_952.read();
}

void Filter::thread_C_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_3))) {
        C_3_we0 = ap_const_logic_1;
    } else {
        C_3_we0 = ap_const_logic_0;
    }
}

void Filter::thread_C_4_address0() {
    C_4_address0 = C_4_addr_reg_932.read();
}

void Filter::thread_C_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_4_ce0 = ap_const_logic_1;
    } else {
        C_4_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_4_d0() {
    C_4_d0 = val_V_reg_952.read();
}

void Filter::thread_C_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_4))) {
        C_4_we0 = ap_const_logic_1;
    } else {
        C_4_we0 = ap_const_logic_0;
    }
}

void Filter::thread_C_5_address0() {
    C_5_address0 = C_5_addr_reg_937.read();
}

void Filter::thread_C_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_5_ce0 = ap_const_logic_1;
    } else {
        C_5_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_5_d0() {
    C_5_d0 = val_V_reg_952.read();
}

void Filter::thread_C_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_5))) {
        C_5_we0 = ap_const_logic_1;
    } else {
        C_5_we0 = ap_const_logic_0;
    }
}

void Filter::thread_C_6_address0() {
    C_6_address0 = C_6_addr_reg_942.read();
}

void Filter::thread_C_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_6_ce0 = ap_const_logic_1;
    } else {
        C_6_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_6_d0() {
    C_6_d0 = val_V_reg_952.read();
}

void Filter::thread_C_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_6))) {
        C_6_we0 = ap_const_logic_1;
    } else {
        C_6_we0 = ap_const_logic_0;
    }
}

void Filter::thread_C_7_address0() {
    C_7_address0 = C_7_addr_reg_947.read();
}

void Filter::thread_C_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        C_7_ce0 = ap_const_logic_1;
    } else {
        C_7_ce0 = ap_const_logic_0;
    }
}

void Filter::thread_C_7_d0() {
    C_7_d0 = val_V_reg_952.read();
}

void Filter::thread_C_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,3,3>(trunc_ln186_reg_764.read(), ap_const_lv3_7))) {
        C_7_we0 = ap_const_logic_1;
    } else {
        C_7_we0 = ap_const_logic_0;
    }
}

void Filter::thread_add_ln186_1_fu_544_p2() {
    add_ln186_1_fu_544_p2 = (!zext_ln182_reg_751.read().is_01() || !add_ln186_fu_538_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln182_reg_751.read()) + sc_biguint<12>(add_ln186_fu_538_p2.read()));
}

void Filter::thread_add_ln186_fu_538_p2() {
    add_ln186_fu_538_p2 = (!zext_ln186_1_fu_522_p1.read().is_01() || !zext_ln186_2_fu_534_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln186_1_fu_522_p1.read()) + sc_biguint<12>(zext_ln186_2_fu_534_p1.read()));
}

void Filter::thread_add_ln502_fu_658_p2() {
    add_ln502_fu_658_p2 = (!ap_const_lv12_C01.is_01() || !zext_ln502_fu_655_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(zext_ln502_fu_655_p1.read()));
}

void Filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Filter::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Filter::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Filter::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void Filter::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Filter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Filter::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void Filter::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void Filter::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void Filter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Filter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Filter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Filter::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln180_fu_472_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Filter::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln180_fu_472_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Filter::thread_grp_fu_466_p0() {
    grp_fu_466_p0 = esl_zext<32,16>(tmp_reg_861.read());
}

void Filter::thread_grp_fu_469_p0() {
    grp_fu_469_p0 = esl_zext<32,16>(tmp_3_reg_866.read());
}

void Filter::thread_i_fu_478_p2() {
    i_fu_478_p2 = (!i_0_reg_430.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_0_reg_430.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void Filter::thread_icmp_ln180_fu_472_p2() {
    icmp_ln180_fu_472_p2 = (!i_0_reg_430.read().is_01() || !ap_const_lv8_A0.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_430.read() == ap_const_lv8_A0);
}

void Filter::thread_icmp_ln182_fu_488_p2() {
    icmp_ln182_fu_488_p2 = (!j_0_reg_441.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_441.read() == ap_const_lv7_78);
}

void Filter::thread_isNeg_fu_664_p3() {
    isNeg_fu_664_p3 = add_ln502_fu_658_p2.read().range(11, 11);
}

void Filter::thread_j_fu_494_p2() {
    j_fu_494_p2 = (!j_0_reg_441.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_441.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Filter::thread_lshr_ln_fu_504_p4() {
    lshr_ln_fu_504_p4 = j_0_reg_441.read().range(6, 3);
}

void Filter::thread_mantissa_V_fu_642_p4() {
    mantissa_V_fu_642_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, tmp_V_4_reg_907.read()), ap_const_lv1_0);
}

void Filter::thread_p_Val2_s_fu_624_p1() {
    p_Val2_s_fu_624_p1 = grp_fu_452_p2.read();
}

void Filter::thread_r_V_4_fu_707_p2() {
    r_V_4_fu_707_p2 = (!zext_ln1287_fu_693_p1.read().is_01())? sc_lv<121>(): zext_ln682_fu_651_p1.read() << (unsigned short)zext_ln1287_fu_693_p1.read().to_uint();
}

void Filter::thread_r_V_fu_701_p2() {
    r_V_fu_701_p2 = (!zext_ln1285_fu_697_p1.read().is_01())? sc_lv<54>(): mantissa_V_fu_642_p4.read() >> (unsigned short)zext_ln1285_fu_697_p1.read().to_uint();
}

void Filter::thread_sext_ln1311_4_fu_689_p1() {
    sext_ln1311_4_fu_689_p1 = esl_sext<32,12>(ush_fu_681_p3.read());
}

void Filter::thread_sext_ln1311_fu_677_p1() {
    sext_ln1311_fu_677_p1 = esl_sext<12,11>(sub_ln1311_fu_672_p2.read());
}

void Filter::thread_sub_ln1311_fu_672_p2() {
    sub_ln1311_fu_672_p2 = (!ap_const_lv11_3FF.is_01() || !tmp_V_reg_901.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(tmp_V_reg_901.read()));
}

void Filter::thread_tmp_34_fu_514_p3() {
    tmp_34_fu_514_p3 = esl_concat<4,7>(lshr_ln_fu_504_p4.read(), ap_const_lv7_0);
}

void Filter::thread_tmp_35_fu_526_p3() {
    tmp_35_fu_526_p3 = esl_concat<4,5>(lshr_ln_fu_504_p4.read(), ap_const_lv5_0);
}

void Filter::thread_tmp_36_fu_725_p4() {
    tmp_36_fu_725_p4 = r_V_4_fu_707_p2.read().range(68, 53);
}

void Filter::thread_tmp_39_fu_713_p3() {
    tmp_39_fu_713_p3 = r_V_fu_701_p2.read().range(53, 53);
}

void Filter::thread_tmp_V_4_fu_638_p1() {
    tmp_V_4_fu_638_p1 = p_Val2_s_fu_624_p1.read().range(52-1, 0);
}

void Filter::thread_trunc_ln186_fu_500_p1() {
    trunc_ln186_fu_500_p1 = j_0_reg_441.read().range(3-1, 0);
}

void Filter::thread_ush_fu_681_p3() {
    ush_fu_681_p3 = (!isNeg_fu_664_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_664_p3.read()[0].to_bool())? sext_ln1311_fu_677_p1.read(): add_ln502_fu_658_p2.read());
}

void Filter::thread_val_V_fu_735_p3() {
    val_V_fu_735_p3 = (!isNeg_fu_664_p3.read()[0].is_01())? sc_lv<16>(): ((isNeg_fu_664_p3.read()[0].to_bool())? zext_ln662_fu_721_p1.read(): tmp_36_fu_725_p4.read());
}

void Filter::thread_zext_ln1285_fu_697_p1() {
    zext_ln1285_fu_697_p1 = esl_zext<54,32>(sext_ln1311_4_fu_689_p1.read());
}

void Filter::thread_zext_ln1287_fu_693_p1() {
    zext_ln1287_fu_693_p1 = esl_zext<121,32>(sext_ln1311_4_fu_689_p1.read());
}

void Filter::thread_zext_ln182_fu_484_p1() {
    zext_ln182_fu_484_p1 = esl_zext<12,8>(i_0_reg_430.read());
}

void Filter::thread_zext_ln186_1_fu_522_p1() {
    zext_ln186_1_fu_522_p1 = esl_zext<12,11>(tmp_34_fu_514_p3.read());
}

void Filter::thread_zext_ln186_2_fu_534_p1() {
    zext_ln186_2_fu_534_p1 = esl_zext<12,9>(tmp_35_fu_526_p3.read());
}

void Filter::thread_zext_ln186_3_fu_549_p1() {
    zext_ln186_3_fu_549_p1 = esl_zext<64,12>(add_ln186_1_fu_544_p2.read());
}

void Filter::thread_zext_ln186_fu_569_p1() {
    zext_ln186_fu_569_p1 = esl_zext<32,3>(trunc_ln186_reg_764.read());
}

void Filter::thread_zext_ln502_fu_655_p1() {
    zext_ln502_fu_655_p1 = esl_zext<12,11>(tmp_V_reg_901.read());
}

void Filter::thread_zext_ln662_fu_721_p1() {
    zext_ln662_fu_721_p1 = esl_zext<16,1>(tmp_39_fu_713_p3.read());
}

void Filter::thread_zext_ln682_fu_651_p1() {
    zext_ln682_fu_651_p1 = esl_zext<121,54>(mantissa_V_fu_642_p4.read());
}

void Filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln180_fu_472_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln182_fu_488_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

