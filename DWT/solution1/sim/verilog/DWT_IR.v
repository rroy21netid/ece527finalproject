// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DWT_IR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_B_0_AWVALID,
        m_axi_B_0_AWREADY,
        m_axi_B_0_AWADDR,
        m_axi_B_0_AWID,
        m_axi_B_0_AWLEN,
        m_axi_B_0_AWSIZE,
        m_axi_B_0_AWBURST,
        m_axi_B_0_AWLOCK,
        m_axi_B_0_AWCACHE,
        m_axi_B_0_AWPROT,
        m_axi_B_0_AWQOS,
        m_axi_B_0_AWREGION,
        m_axi_B_0_AWUSER,
        m_axi_B_0_WVALID,
        m_axi_B_0_WREADY,
        m_axi_B_0_WDATA,
        m_axi_B_0_WSTRB,
        m_axi_B_0_WLAST,
        m_axi_B_0_WID,
        m_axi_B_0_WUSER,
        m_axi_B_0_ARVALID,
        m_axi_B_0_ARREADY,
        m_axi_B_0_ARADDR,
        m_axi_B_0_ARID,
        m_axi_B_0_ARLEN,
        m_axi_B_0_ARSIZE,
        m_axi_B_0_ARBURST,
        m_axi_B_0_ARLOCK,
        m_axi_B_0_ARCACHE,
        m_axi_B_0_ARPROT,
        m_axi_B_0_ARQOS,
        m_axi_B_0_ARREGION,
        m_axi_B_0_ARUSER,
        m_axi_B_0_RVALID,
        m_axi_B_0_RREADY,
        m_axi_B_0_RDATA,
        m_axi_B_0_RLAST,
        m_axi_B_0_RID,
        m_axi_B_0_RUSER,
        m_axi_B_0_RRESP,
        m_axi_B_0_BVALID,
        m_axi_B_0_BREADY,
        m_axi_B_0_BRESP,
        m_axi_B_0_BID,
        m_axi_B_0_BUSER,
        B_0_offset,
        B_1_offset,
        B_2_offset,
        B_3_offset,
        B_4_offset,
        B_5_offset,
        B_6_offset,
        B_7_offset
);

parameter    ap_ST_fsm_state1 = 43'd1;
parameter    ap_ST_fsm_state2 = 43'd2;
parameter    ap_ST_fsm_state3 = 43'd4;
parameter    ap_ST_fsm_state4 = 43'd8;
parameter    ap_ST_fsm_state5 = 43'd16;
parameter    ap_ST_fsm_state6 = 43'd32;
parameter    ap_ST_fsm_state7 = 43'd64;
parameter    ap_ST_fsm_state8 = 43'd128;
parameter    ap_ST_fsm_state9 = 43'd256;
parameter    ap_ST_fsm_state10 = 43'd512;
parameter    ap_ST_fsm_state11 = 43'd1024;
parameter    ap_ST_fsm_state12 = 43'd2048;
parameter    ap_ST_fsm_state13 = 43'd4096;
parameter    ap_ST_fsm_state14 = 43'd8192;
parameter    ap_ST_fsm_state15 = 43'd16384;
parameter    ap_ST_fsm_state16 = 43'd32768;
parameter    ap_ST_fsm_state17 = 43'd65536;
parameter    ap_ST_fsm_state18 = 43'd131072;
parameter    ap_ST_fsm_state19 = 43'd262144;
parameter    ap_ST_fsm_state20 = 43'd524288;
parameter    ap_ST_fsm_state21 = 43'd1048576;
parameter    ap_ST_fsm_state22 = 43'd2097152;
parameter    ap_ST_fsm_state23 = 43'd4194304;
parameter    ap_ST_fsm_state24 = 43'd8388608;
parameter    ap_ST_fsm_state25 = 43'd16777216;
parameter    ap_ST_fsm_state26 = 43'd33554432;
parameter    ap_ST_fsm_state27 = 43'd67108864;
parameter    ap_ST_fsm_state28 = 43'd134217728;
parameter    ap_ST_fsm_state29 = 43'd268435456;
parameter    ap_ST_fsm_state30 = 43'd536870912;
parameter    ap_ST_fsm_state31 = 43'd1073741824;
parameter    ap_ST_fsm_state32 = 43'd2147483648;
parameter    ap_ST_fsm_state33 = 43'd4294967296;
parameter    ap_ST_fsm_state34 = 43'd8589934592;
parameter    ap_ST_fsm_state35 = 43'd17179869184;
parameter    ap_ST_fsm_state36 = 43'd34359738368;
parameter    ap_ST_fsm_state37 = 43'd68719476736;
parameter    ap_ST_fsm_state38 = 43'd137438953472;
parameter    ap_ST_fsm_state39 = 43'd274877906944;
parameter    ap_ST_fsm_state40 = 43'd549755813888;
parameter    ap_ST_fsm_state41 = 43'd1099511627776;
parameter    ap_ST_fsm_state42 = 43'd2199023255552;
parameter    ap_ST_fsm_state43 = 43'd4398046511104;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_B_0_AWVALID;
input   m_axi_B_0_AWREADY;
output  [31:0] m_axi_B_0_AWADDR;
output  [0:0] m_axi_B_0_AWID;
output  [31:0] m_axi_B_0_AWLEN;
output  [2:0] m_axi_B_0_AWSIZE;
output  [1:0] m_axi_B_0_AWBURST;
output  [1:0] m_axi_B_0_AWLOCK;
output  [3:0] m_axi_B_0_AWCACHE;
output  [2:0] m_axi_B_0_AWPROT;
output  [3:0] m_axi_B_0_AWQOS;
output  [3:0] m_axi_B_0_AWREGION;
output  [0:0] m_axi_B_0_AWUSER;
output   m_axi_B_0_WVALID;
input   m_axi_B_0_WREADY;
output  [7:0] m_axi_B_0_WDATA;
output  [0:0] m_axi_B_0_WSTRB;
output   m_axi_B_0_WLAST;
output  [0:0] m_axi_B_0_WID;
output  [0:0] m_axi_B_0_WUSER;
output   m_axi_B_0_ARVALID;
input   m_axi_B_0_ARREADY;
output  [31:0] m_axi_B_0_ARADDR;
output  [0:0] m_axi_B_0_ARID;
output  [31:0] m_axi_B_0_ARLEN;
output  [2:0] m_axi_B_0_ARSIZE;
output  [1:0] m_axi_B_0_ARBURST;
output  [1:0] m_axi_B_0_ARLOCK;
output  [3:0] m_axi_B_0_ARCACHE;
output  [2:0] m_axi_B_0_ARPROT;
output  [3:0] m_axi_B_0_ARQOS;
output  [3:0] m_axi_B_0_ARREGION;
output  [0:0] m_axi_B_0_ARUSER;
input   m_axi_B_0_RVALID;
output   m_axi_B_0_RREADY;
input  [7:0] m_axi_B_0_RDATA;
input   m_axi_B_0_RLAST;
input  [0:0] m_axi_B_0_RID;
input  [0:0] m_axi_B_0_RUSER;
input  [1:0] m_axi_B_0_RRESP;
input   m_axi_B_0_BVALID;
output   m_axi_B_0_BREADY;
input  [1:0] m_axi_B_0_BRESP;
input  [0:0] m_axi_B_0_BID;
input  [0:0] m_axi_B_0_BUSER;
input  [31:0] B_0_offset;
input  [31:0] B_1_offset;
input  [31:0] B_2_offset;
input  [31:0] B_3_offset;
input  [31:0] B_4_offset;
input  [31:0] B_5_offset;
input  [31:0] B_6_offset;
input  [31:0] B_7_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_B_0_AWVALID;
reg[31:0] m_axi_B_0_AWADDR;
reg m_axi_B_0_WVALID;
reg[7:0] m_axi_B_0_WDATA;
reg m_axi_B_0_ARVALID;
reg m_axi_B_0_RREADY;
reg m_axi_B_0_BREADY;

(* fsm_encoding = "none" *) reg   [42:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    B_0_blk_n_AW;
wire    ap_CS_fsm_state9;
reg   [3:0] tmp_41_reg_1506;
reg    B_0_blk_n_W;
wire    ap_CS_fsm_state10;
reg    B_0_blk_n_B;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state36;
reg   [3:0] tmp_42_reg_1740;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state42;
wire  signed [32:0] sext_ln147_fu_636_p1;
reg  signed [32:0] sext_ln147_reg_1410;
wire  signed [32:0] sext_ln147_1_fu_640_p1;
reg  signed [32:0] sext_ln147_1_reg_1416;
wire  signed [32:0] sext_ln147_2_fu_644_p1;
reg  signed [32:0] sext_ln147_2_reg_1422;
wire  signed [32:0] sext_ln147_3_fu_648_p1;
reg  signed [32:0] sext_ln147_3_reg_1428;
wire  signed [32:0] sext_ln147_4_fu_652_p1;
reg  signed [32:0] sext_ln147_4_reg_1434;
wire  signed [32:0] sext_ln147_5_fu_656_p1;
reg  signed [32:0] sext_ln147_5_reg_1440;
wire  signed [32:0] sext_ln147_6_fu_660_p1;
reg  signed [32:0] sext_ln147_6_reg_1446;
wire  signed [32:0] sext_ln119_fu_664_p1;
reg  signed [32:0] sext_ln119_reg_1452;
wire   [1:0] k_fu_682_p2;
reg   [1:0] k_reg_1461;
wire    ap_CS_fsm_state2;
wire   [8:0] levCols_fu_688_p2;
reg   [8:0] levCols_reg_1466;
wire   [0:0] icmp_ln119_fu_676_p2;
wire   [9:0] levRows_fu_694_p2;
reg   [9:0] levRows_reg_1473;
wire   [8:0] trunc_ln_fu_700_p4;
reg   [8:0] trunc_ln_reg_1478;
wire   [9:0] zext_ln124_fu_710_p1;
reg   [9:0] zext_ln124_reg_1484;
wire   [18:0] add_ln124_fu_714_p2;
reg   [18:0] add_ln124_reg_1489;
wire    ap_CS_fsm_state3;
wire   [8:0] i_fu_726_p2;
reg   [8:0] i_reg_1497;
wire   [0:0] icmp_ln126_fu_732_p2;
reg   [0:0] icmp_ln126_reg_1502;
wire   [0:0] icmp_ln124_fu_720_p2;
wire   [18:0] add_ln147_fu_771_p2;
reg   [18:0] add_ln147_reg_1511;
wire   [5:0] trunc_ln139_fu_777_p1;
reg   [5:0] trunc_ln139_reg_1516;
wire   [8:0] zext_ln152_fu_790_p1;
reg   [8:0] zext_ln152_reg_1521;
wire   [8:0] l_fu_804_p2;
reg   [8:0] l_reg_1530;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln136_fu_810_p2;
reg   [0:0] icmp_ln136_reg_1535;
wire   [0:0] icmp_ln134_fu_798_p2;
wire   [9:0] m_fu_815_p3;
reg   [9:0] m_reg_1539;
wire   [9:0] add_ln140_fu_829_p2;
reg   [9:0] add_ln140_reg_1545;
wire   [9:0] or_ln139_fu_838_p2;
reg   [9:0] or_ln139_reg_1550;
wire    ap_CS_fsm_state6;
wire   [9:0] o_fu_850_p2;
reg   [9:0] o_reg_1558;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln145_fu_856_p2;
wire   [0:0] icmp_ln143_fu_844_p2;
reg   [31:0] B_7_addr_reg_1567;
reg   [31:0] B_7_addr_12_reg_1573;
reg   [31:0] B_7_addr_13_reg_1579;
reg   [31:0] B_7_addr_14_reg_1585;
reg   [31:0] B_7_addr_15_reg_1591;
reg   [31:0] B_7_addr_16_reg_1597;
reg   [31:0] B_7_addr_17_reg_1603;
reg   [31:0] B_7_addr_18_reg_1609;
wire   [8:0] select_ln124_fu_1011_p3;
wire   [7:0] zext_ln147_1_fu_1019_p1;
reg   [7:0] zext_ln147_1_reg_1625;
reg    ap_predicate_op174_writereq_state9;
reg    ap_block_state9_io;
wire   [8:0] n_fu_1029_p2;
reg   [8:0] n_reg_1640;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln154_fu_1035_p2;
reg   [0:0] icmp_ln154_reg_1645;
wire   [0:0] icmp_ln152_fu_1023_p2;
wire   [18:0] zext_ln165_fu_1040_p1;
reg   [18:0] zext_ln165_reg_1649;
wire   [9:0] zext_ln165_1_fu_1044_p1;
reg   [9:0] zext_ln165_1_reg_1654;
wire   [8:0] l_2_fu_1054_p2;
reg   [8:0] l_2_reg_1662;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln162_fu_1060_p2;
reg   [0:0] icmp_ln162_reg_1667;
wire   [0:0] icmp_ln160_fu_1048_p2;
wire   [8:0] m_1_fu_1065_p2;
reg   [8:0] m_1_reg_1671;
wire   [8:0] add_ln166_fu_1082_p2;
reg   [8:0] add_ln166_reg_1678;
reg   [3:0] trunc_ln5_reg_1683;
wire    ap_CS_fsm_state20;
wire   [8:0] or_ln165_fu_1103_p2;
reg   [3:0] trunc_ln165_2_reg_1693;
wire   [5:0] grp_fu_1071_p2;
reg   [5:0] urem_ln165_reg_1698;
wire    ap_CS_fsm_state30;
wire   [5:0] trunc_ln165_fu_1127_p1;
reg   [5:0] trunc_ln165_reg_1703;
wire    ap_CS_fsm_state31;
wire   [5:0] grp_fu_1112_p2;
reg   [5:0] urem_ln165_1_reg_1708;
wire    ap_CS_fsm_state32;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_ap_ready;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_ap_done;
wire   [5:0] trunc_ln165_1_fu_1131_p1;
reg   [5:0] trunc_ln165_1_reg_1713;
wire    ap_CS_fsm_state33;
wire   [8:0] o_3_fu_1141_p2;
reg   [8:0] o_3_reg_1721;
wire    ap_CS_fsm_state35;
wire   [0:0] icmp_ln171_fu_1147_p2;
wire   [0:0] icmp_ln169_fu_1135_p2;
wire   [18:0] add_ln171_fu_1152_p2;
reg   [18:0] add_ln171_reg_1730;
reg   [31:0] B_7_addr_19_reg_1744;
reg   [31:0] B_7_addr_20_reg_1750;
reg   [31:0] B_7_addr_21_reg_1756;
reg   [31:0] B_7_addr_22_reg_1762;
reg   [31:0] B_7_addr_23_reg_1768;
reg   [31:0] B_7_addr_24_reg_1774;
reg   [31:0] B_7_addr_25_reg_1780;
reg   [31:0] B_7_addr_26_reg_1786;
wire   [7:0] zext_ln173_1_fu_1332_p1;
reg   [7:0] zext_ln173_1_reg_1792;
reg    ap_predicate_op358_writereq_state36;
reg    ap_block_state36_io;
wire   [8:0] select_ln169_fu_1348_p3;
wire    ap_CS_fsm_state43;
reg   [9:0] tempr_address0;
reg    tempr_ce0;
reg    tempr_we0;
wire   [0:0] tempr_q0;
reg   [8:0] tempc_address0;
reg    tempc_ce0;
reg    tempc_we0;
wire   [0:0] tempc_q0;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_ap_start;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_ap_idle;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWVALID;
wire   [31:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWADDR;
wire   [0:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWID;
wire   [31:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWLEN;
wire   [2:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWSIZE;
wire   [1:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWBURST;
wire   [1:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWLOCK;
wire   [3:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWCACHE;
wire   [2:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWPROT;
wire   [3:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWQOS;
wire   [3:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWREGION;
wire   [0:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWUSER;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WVALID;
wire   [7:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WDATA;
wire   [0:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WSTRB;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WLAST;
wire   [0:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WID;
wire   [0:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WUSER;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARVALID;
wire   [31:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARADDR;
wire   [0:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARID;
wire   [31:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARLEN;
wire   [2:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARSIZE;
wire   [1:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARBURST;
wire   [1:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARLOCK;
wire   [3:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARCACHE;
wire   [2:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARPROT;
wire   [3:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARQOS;
wire   [3:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARREGION;
wire   [0:0] grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARUSER;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_RREADY;
wire    grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_BREADY;
reg   [3:0] grp_aesl_mux_load_8_1_x_s_fu_619_empty_16;
reg   [5:0] grp_aesl_mux_load_8_1_x_s_fu_619_empty_17;
reg   [9:0] grp_aesl_mux_load_8_1_x_s_fu_619_empty;
wire   [7:0] grp_aesl_mux_load_8_1_x_s_fu_619_ap_return;
reg   [1:0] k_0_reg_496;
reg   [8:0] i_0_reg_507;
reg   [18:0] phi_mul_reg_518;
reg   [8:0] phi_urem_reg_529;
reg   [8:0] l_0_reg_541;
wire    ap_CS_fsm_state7;
reg    ap_block_state7_on_subcall_done;
reg   [9:0] o_0_reg_552;
wire    ap_CS_fsm_state16;
reg   [8:0] n_0_reg_563;
reg   [8:0] l1_0_reg_574;
wire    ap_CS_fsm_state34;
reg    ap_block_state34_on_subcall_done;
reg   [8:0] o3_0_reg_585;
reg   [18:0] phi_mul128_reg_596;
reg   [8:0] phi_urem130_reg_607;
reg    grp_aesl_mux_load_8_1_x_s_fu_619_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [63:0] zext_ln139_fu_824_p1;
wire   [63:0] zext_ln140_fu_834_p1;
wire   [63:0] zext_ln147_fu_861_p1;
wire   [63:0] zext_ln165_3_fu_1077_p1;
wire   [63:0] zext_ln166_fu_1087_p1;
wire    ap_CS_fsm_state19;
wire   [63:0] zext_ln173_fu_1158_p1;
wire  signed [63:0] sext_ln147_7_fu_884_p1;
wire  signed [63:0] sext_ln147_8_fu_899_p1;
wire  signed [63:0] sext_ln147_9_fu_914_p1;
wire  signed [63:0] sext_ln147_10_fu_929_p1;
wire  signed [63:0] sext_ln147_11_fu_944_p1;
wire  signed [63:0] sext_ln147_12_fu_959_p1;
wire  signed [63:0] sext_ln147_13_fu_974_p1;
wire  signed [63:0] sext_ln147_14_fu_989_p1;
wire  signed [63:0] sext_ln173_fu_1217_p1;
wire  signed [63:0] sext_ln173_1_fu_1232_p1;
wire  signed [63:0] sext_ln173_2_fu_1247_p1;
wire  signed [63:0] sext_ln173_3_fu_1262_p1;
wire  signed [63:0] sext_ln173_4_fu_1277_p1;
wire  signed [63:0] sext_ln173_5_fu_1292_p1;
wire  signed [63:0] sext_ln173_6_fu_1307_p1;
wire  signed [63:0] sext_ln173_7_fu_1322_p1;
reg    ap_predicate_op229_writeresp_state15;
reg    ap_block_state15;
reg    ap_predicate_op182_write_state10;
reg    ap_block_state10_io;
reg    ap_predicate_op413_writeresp_state42;
reg    ap_block_state42;
reg    ap_predicate_op366_write_state37;
reg    ap_block_state37_io;
wire  signed [31:0] sext_ln147_fu_636_p0;
wire  signed [31:0] sext_ln147_1_fu_640_p0;
wire  signed [31:0] sext_ln147_2_fu_644_p0;
wire  signed [31:0] sext_ln147_3_fu_648_p0;
wire  signed [31:0] sext_ln147_4_fu_652_p0;
wire  signed [31:0] sext_ln147_5_fu_656_p0;
wire  signed [31:0] sext_ln147_6_fu_660_p0;
wire  signed [31:0] sext_ln119_fu_664_p0;
wire   [8:0] zext_ln119_1_fu_672_p1;
wire   [9:0] zext_ln119_fu_668_p1;
wire   [17:0] tmp_fu_747_p3;
wire   [15:0] tmp_s_fu_759_p3;
wire   [18:0] zext_ln147_2_fu_755_p1;
wire   [18:0] zext_ln147_3_fu_767_p1;
wire   [7:0] trunc_ln3_fu_781_p4;
wire   [9:0] zext_ln134_fu_794_p1;
wire   [18:0] zext_ln147_4_fu_866_p1;
wire   [18:0] add_ln147_1_fu_870_p2;
wire   [32:0] zext_ln147_5_fu_875_p1;
wire   [32:0] add_ln147_2_fu_879_p2;
wire   [32:0] add_ln147_3_fu_894_p2;
wire   [32:0] add_ln147_4_fu_909_p2;
wire   [32:0] add_ln147_5_fu_924_p2;
wire   [32:0] add_ln147_6_fu_939_p2;
wire   [32:0] add_ln147_7_fu_954_p2;
wire   [32:0] add_ln147_8_fu_969_p2;
wire   [32:0] add_ln147_9_fu_984_p2;
wire   [8:0] add_ln124_2_fu_999_p2;
wire   [0:0] icmp_ln124_1_fu_1005_p2;
wire   [8:0] grp_fu_1071_p0;
wire   [6:0] grp_fu_1071_p1;
wire   [19:0] mul_ln165_fu_1356_p2;
wire   [6:0] grp_fu_1112_p1;
wire   [19:0] mul_ln165_1_fu_1363_p2;
wire   [17:0] tmp_33_fu_1173_p3;
wire   [15:0] tmp_34_fu_1185_p3;
wire   [18:0] zext_ln173_3_fu_1193_p1;
wire   [18:0] zext_ln173_2_fu_1181_p1;
wire   [18:0] add_ln173_fu_1197_p2;
wire   [18:0] add_ln173_1_fu_1203_p2;
wire   [32:0] zext_ln173_4_fu_1208_p1;
wire   [32:0] add_ln173_2_fu_1212_p2;
wire   [32:0] add_ln173_3_fu_1227_p2;
wire   [32:0] add_ln173_4_fu_1242_p2;
wire   [32:0] add_ln173_5_fu_1257_p2;
wire   [32:0] add_ln173_6_fu_1272_p2;
wire   [32:0] add_ln173_7_fu_1287_p2;
wire   [32:0] add_ln173_8_fu_1302_p2;
wire   [32:0] add_ln173_9_fu_1317_p2;
wire   [8:0] add_ln169_1_fu_1336_p2;
wire   [0:0] icmp_ln169_1_fu_1342_p2;
wire   [10:0] mul_ln165_fu_1356_p0;
wire   [8:0] mul_ln165_fu_1356_p1;
wire   [10:0] mul_ln165_1_fu_1363_p0;
wire   [8:0] mul_ln165_1_fu_1363_p1;
reg    grp_fu_1071_ap_start;
wire    grp_fu_1071_ap_done;
reg    grp_fu_1112_ap_start;
wire    grp_fu_1112_ap_done;
reg    grp_fu_1112_ce;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
reg   [42:0] ap_NS_fsm;
wire   [19:0] mul_ln165_1_fu_1363_p10;
wire   [19:0] mul_ln165_fu_1356_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 43'd1;
#0 grp_aesl_mux_load_8_1_x_s_fu_619_ap_start_reg = 1'b0;
end

DWT_color_tempr #(
    .DataWidth( 1 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
tempr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tempr_address0),
    .ce0(tempr_ce0),
    .we0(tempr_we0),
    .d0(1'd0),
    .q0(tempr_q0)
);

DWT_color_tempc #(
    .DataWidth( 1 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
tempc_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tempc_address0),
    .ce0(tempc_ce0),
    .we0(tempc_we0),
    .d0(1'd0),
    .q0(tempc_q0)
);

aesl_mux_load_8_1_x_s grp_aesl_mux_load_8_1_x_s_fu_619(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aesl_mux_load_8_1_x_s_fu_619_ap_start),
    .ap_done(grp_aesl_mux_load_8_1_x_s_fu_619_ap_done),
    .ap_idle(grp_aesl_mux_load_8_1_x_s_fu_619_ap_idle),
    .ap_ready(grp_aesl_mux_load_8_1_x_s_fu_619_ap_ready),
    .m_axi_empty_15_AWVALID(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWVALID),
    .m_axi_empty_15_AWREADY(1'b0),
    .m_axi_empty_15_AWADDR(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWADDR),
    .m_axi_empty_15_AWID(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWID),
    .m_axi_empty_15_AWLEN(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWLEN),
    .m_axi_empty_15_AWSIZE(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWSIZE),
    .m_axi_empty_15_AWBURST(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWBURST),
    .m_axi_empty_15_AWLOCK(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWLOCK),
    .m_axi_empty_15_AWCACHE(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWCACHE),
    .m_axi_empty_15_AWPROT(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWPROT),
    .m_axi_empty_15_AWQOS(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWQOS),
    .m_axi_empty_15_AWREGION(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWREGION),
    .m_axi_empty_15_AWUSER(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_AWUSER),
    .m_axi_empty_15_WVALID(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WVALID),
    .m_axi_empty_15_WREADY(1'b0),
    .m_axi_empty_15_WDATA(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WDATA),
    .m_axi_empty_15_WSTRB(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WSTRB),
    .m_axi_empty_15_WLAST(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WLAST),
    .m_axi_empty_15_WID(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WID),
    .m_axi_empty_15_WUSER(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_WUSER),
    .m_axi_empty_15_ARVALID(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARVALID),
    .m_axi_empty_15_ARREADY(m_axi_B_0_ARREADY),
    .m_axi_empty_15_ARADDR(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARADDR),
    .m_axi_empty_15_ARID(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARID),
    .m_axi_empty_15_ARLEN(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARLEN),
    .m_axi_empty_15_ARSIZE(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARSIZE),
    .m_axi_empty_15_ARBURST(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARBURST),
    .m_axi_empty_15_ARLOCK(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARLOCK),
    .m_axi_empty_15_ARCACHE(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARCACHE),
    .m_axi_empty_15_ARPROT(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARPROT),
    .m_axi_empty_15_ARQOS(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARQOS),
    .m_axi_empty_15_ARREGION(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARREGION),
    .m_axi_empty_15_ARUSER(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARUSER),
    .m_axi_empty_15_RVALID(m_axi_B_0_RVALID),
    .m_axi_empty_15_RREADY(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_RREADY),
    .m_axi_empty_15_RDATA(m_axi_B_0_RDATA),
    .m_axi_empty_15_RLAST(m_axi_B_0_RLAST),
    .m_axi_empty_15_RID(m_axi_B_0_RID),
    .m_axi_empty_15_RUSER(m_axi_B_0_RUSER),
    .m_axi_empty_15_RRESP(m_axi_B_0_RRESP),
    .m_axi_empty_15_BVALID(1'b0),
    .m_axi_empty_15_BREADY(grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_BREADY),
    .m_axi_empty_15_BRESP(2'd0),
    .m_axi_empty_15_BID(1'd0),
    .m_axi_empty_15_BUSER(1'd0),
    .p_offset(B_0_offset),
    .p_offset1(B_1_offset),
    .p_offset2(B_2_offset),
    .p_offset3(B_3_offset),
    .p_offset4(B_4_offset),
    .p_offset5(B_5_offset),
    .p_offset6(B_6_offset),
    .p_offset7(B_7_offset),
    .empty_16(grp_aesl_mux_load_8_1_x_s_fu_619_empty_16),
    .empty_17(grp_aesl_mux_load_8_1_x_s_fu_619_empty_17),
    .empty(grp_aesl_mux_load_8_1_x_s_fu_619_empty),
    .ap_return(grp_aesl_mux_load_8_1_x_s_fu_619_ap_return)
);

DWT_Accel_urem_9nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 6 ))
DWT_Accel_urem_9nbkb_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1071_ap_start),
    .done(grp_fu_1071_ap_done),
    .din0(grp_fu_1071_p0),
    .din1(grp_fu_1071_p1),
    .ce(1'b1),
    .dout(grp_fu_1071_p2)
);

DWT_Accel_urem_9nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 6 ))
DWT_Accel_urem_9nbkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1112_ap_start),
    .done(grp_fu_1112_ap_done),
    .din0(or_ln165_fu_1103_p2),
    .din1(grp_fu_1112_p1),
    .ce(grp_fu_1112_ce),
    .dout(grp_fu_1112_p2)
);

DWT_Accel_mul_mulcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 20 ))
DWT_Accel_mul_mulcud_U26(
    .din0(mul_ln165_fu_1356_p0),
    .din1(mul_ln165_fu_1356_p1),
    .dout(mul_ln165_fu_1356_p2)
);

DWT_Accel_mul_mulcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 20 ))
DWT_Accel_mul_mulcud_U27(
    .din0(mul_ln165_1_fu_1363_p0),
    .din1(mul_ln165_1_fu_1363_p1),
    .dout(mul_ln165_1_fu_1363_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state6) | ((icmp_ln136_fu_810_p2 == 1'd1) & (icmp_ln134_fu_798_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_aesl_mux_load_8_1_x_s_fu_619_ap_start_reg <= 1'b1;
        end else if ((grp_aesl_mux_load_8_1_x_s_fu_619_ap_ready == 1'b1)) begin
            grp_aesl_mux_load_8_1_x_s_fu_619_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((icmp_ln143_fu_844_p2 == 1'd1) | (icmp_ln126_reg_1502 == 1'd0)))) begin
        i_0_reg_507 <= i_reg_1497;
    end else if (((icmp_ln119_fu_676_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_507 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln152_fu_1023_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        k_0_reg_496 <= k_reg_1461;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_0_reg_496 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_fu_1035_p2 == 1'd1) & (icmp_ln152_fu_1023_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        l1_0_reg_574 <= 9'd0;
    end else if (((1'b0 == ap_block_state34_on_subcall_done) & (1'b1 == ap_CS_fsm_state34))) begin
        l1_0_reg_574 <= l_2_reg_1662;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln126_fu_732_p2 == 1'd1) & (icmp_ln124_fu_720_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        l_0_reg_541 <= 9'd0;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        l_0_reg_541 <= l_reg_1530;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_720_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        n_0_reg_563 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state35) & ((icmp_ln169_fu_1135_p2 == 1'd1) | (icmp_ln154_reg_1645 == 1'd0)))) begin
        n_0_reg_563 <= n_reg_1640;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_1048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        o3_0_reg_585 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        o3_0_reg_585 <= o_3_reg_1721;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln134_fu_798_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        o_0_reg_552 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        o_0_reg_552 <= o_reg_1558;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_1048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        phi_mul128_reg_596 <= 19'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        phi_mul128_reg_596 <= add_ln171_reg_1730;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((icmp_ln143_fu_844_p2 == 1'd1) | (icmp_ln126_reg_1502 == 1'd0)))) begin
        phi_mul_reg_518 <= add_ln124_reg_1489;
    end else if (((icmp_ln119_fu_676_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_518 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_1048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        phi_urem130_reg_607 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        phi_urem130_reg_607 <= select_ln169_fu_1348_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((icmp_ln143_fu_844_p2 == 1'd1) | (icmp_ln126_reg_1502 == 1'd0)))) begin
        phi_urem_reg_529 <= select_ln124_fu_1011_p3;
    end else if (((icmp_ln119_fu_676_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_urem_reg_529 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_856_p2 == 1'd1) & (icmp_ln126_reg_1502 == 1'd1) & (icmp_ln143_fu_844_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        B_7_addr_12_reg_1573 <= sext_ln147_8_fu_899_p1;
        B_7_addr_13_reg_1579 <= sext_ln147_9_fu_914_p1;
        B_7_addr_14_reg_1585 <= sext_ln147_10_fu_929_p1;
        B_7_addr_15_reg_1591 <= sext_ln147_11_fu_944_p1;
        B_7_addr_16_reg_1597 <= sext_ln147_12_fu_959_p1;
        B_7_addr_17_reg_1603 <= sext_ln147_13_fu_974_p1;
        B_7_addr_18_reg_1609 <= sext_ln147_14_fu_989_p1;
        B_7_addr_reg_1567 <= sext_ln147_7_fu_884_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln171_fu_1147_p2 == 1'd1) & (icmp_ln154_reg_1645 == 1'd1) & (icmp_ln169_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        B_7_addr_19_reg_1744 <= sext_ln173_fu_1217_p1;
        B_7_addr_20_reg_1750 <= sext_ln173_1_fu_1232_p1;
        B_7_addr_21_reg_1756 <= sext_ln173_2_fu_1247_p1;
        B_7_addr_22_reg_1762 <= sext_ln173_3_fu_1262_p1;
        B_7_addr_23_reg_1768 <= sext_ln173_4_fu_1277_p1;
        B_7_addr_24_reg_1774 <= sext_ln173_5_fu_1292_p1;
        B_7_addr_25_reg_1780 <= sext_ln173_6_fu_1307_p1;
        B_7_addr_26_reg_1786 <= sext_ln173_7_fu_1322_p1;
        tmp_42_reg_1740 <= {{phi_mul128_reg_596[18:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln124_reg_1489 <= add_ln124_fu_714_p2;
        i_reg_1497 <= i_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln136_fu_810_p2 == 1'd1) & (icmp_ln134_fu_798_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln140_reg_1545 <= add_ln140_fu_829_p2;
        m_reg_1539[9 : 1] <= m_fu_815_p3[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln126_fu_732_p2 == 1'd1) & (icmp_ln124_fu_720_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln147_reg_1511[18 : 7] <= add_ln147_fu_771_p2[18 : 7];
        tmp_41_reg_1506 <= {{phi_mul_reg_518[18:15]}};
        trunc_ln139_reg_1516 <= trunc_ln139_fu_777_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln162_fu_1060_p2 == 1'd1) & (icmp_ln160_fu_1048_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        add_ln166_reg_1678 <= add_ln166_fu_1082_p2;
        m_1_reg_1671[8 : 1] <= m_1_fu_1065_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_reg_1645 == 1'd1) & (icmp_ln169_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        add_ln171_reg_1730 <= add_ln171_fu_1152_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_720_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln126_reg_1502 <= icmp_ln126_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln134_fu_798_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        icmp_ln136_reg_1535 <= icmp_ln136_fu_810_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln152_fu_1023_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        icmp_ln154_reg_1645 <= icmp_ln154_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_1048_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        icmp_ln162_reg_1667 <= icmp_ln162_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_reg_1461 <= k_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        l_2_reg_1662 <= l_2_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_reg_1530 <= l_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_fu_676_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        levCols_reg_1466 <= levCols_fu_688_p2;
        levRows_reg_1473 <= levRows_fu_694_p2;
        trunc_ln_reg_1478 <= {{levRows_fu_694_p2[9:1]}};
        zext_ln124_reg_1484[8 : 0] <= zext_ln124_fu_710_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        n_reg_1640 <= n_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_reg_1645 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        o_3_reg_1721 <= o_3_fu_1141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln126_reg_1502 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        o_reg_1558 <= o_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        or_ln139_reg_1550[9 : 1] <= or_ln139_fu_838_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln119_reg_1452 <= sext_ln119_fu_664_p1;
        sext_ln147_1_reg_1416 <= sext_ln147_1_fu_640_p1;
        sext_ln147_2_reg_1422 <= sext_ln147_2_fu_644_p1;
        sext_ln147_3_reg_1428 <= sext_ln147_3_fu_648_p1;
        sext_ln147_4_reg_1434 <= sext_ln147_4_fu_652_p1;
        sext_ln147_5_reg_1440 <= sext_ln147_5_fu_656_p1;
        sext_ln147_6_reg_1446 <= sext_ln147_6_fu_660_p1;
        sext_ln147_reg_1410 <= sext_ln147_fu_636_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        trunc_ln165_1_reg_1713 <= trunc_ln165_1_fu_1131_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        trunc_ln165_2_reg_1693 <= {{mul_ln165_1_fu_1363_p2[18:15]}};
        trunc_ln5_reg_1683 <= {{mul_ln165_fu_1356_p2[18:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        trunc_ln165_reg_1703 <= trunc_ln165_fu_1127_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_aesl_mux_load_8_1_x_s_fu_619_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        urem_ln165_1_reg_1708 <= grp_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        urem_ln165_reg_1698 <= grp_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9))) begin
        zext_ln147_1_reg_1625[0] <= zext_ln147_1_fu_1019_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_720_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln152_reg_1521[7 : 0] <= zext_ln152_fu_790_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_fu_1035_p2 == 1'd1) & (icmp_ln152_fu_1023_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        zext_ln165_1_reg_1654[8 : 0] <= zext_ln165_1_fu_1044_p1[8 : 0];
        zext_ln165_reg_1649[8 : 0] <= zext_ln165_fu_1040_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36))) begin
        zext_ln173_1_reg_1792[0] <= zext_ln173_1_fu_1332_p1[0];
    end
end

always @ (*) begin
    if (((~(tmp_42_reg_1740 == 4'd6) & ~(tmp_42_reg_1740 == 4'd5) & ~(tmp_42_reg_1740 == 4'd4) & ~(tmp_42_reg_1740 == 4'd3) & ~(tmp_42_reg_1740 == 4'd2) & ~(tmp_42_reg_1740 == 4'd1) & ~(tmp_42_reg_1740 == 4'd0) & (1'b1 == ap_CS_fsm_state36)) | ((1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd6)) | ((1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd5)) | ((1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd4)) | ((1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd3)) | ((1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd2)) | ((1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd1)) | ((1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd0)) | (~(tmp_41_reg_1506 == 4'd6) & ~(tmp_41_reg_1506 == 4'd5) & ~(tmp_41_reg_1506 == 4'd4) & ~(tmp_41_reg_1506 == 4'd3) & ~(tmp_41_reg_1506 == 4'd2) & ~(tmp_41_reg_1506 == 4'd1) & ~(tmp_41_reg_1506 == 4'd0) & (1'b1 == ap_CS_fsm_state9)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd6)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd5)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd4)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd3)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd2)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd0)))) begin
        B_0_blk_n_AW = m_axi_B_0_AWREADY;
    end else begin
        B_0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((~(tmp_42_reg_1740 == 4'd6) & ~(tmp_42_reg_1740 == 4'd5) & ~(tmp_42_reg_1740 == 4'd4) & ~(tmp_42_reg_1740 == 4'd3) & ~(tmp_42_reg_1740 == 4'd2) & ~(tmp_42_reg_1740 == 4'd1) & ~(tmp_42_reg_1740 == 4'd0) & (1'b1 == ap_CS_fsm_state42)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd6)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd5)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd4)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd3)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd2)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd1)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd0)) | (~(tmp_41_reg_1506 == 4'd6) & ~(tmp_41_reg_1506 == 4'd5) & ~(tmp_41_reg_1506 == 4'd4) & ~(tmp_41_reg_1506 == 4'd3) & ~(tmp_41_reg_1506 == 4'd2) & ~(tmp_41_reg_1506 == 4'd1) & ~(tmp_41_reg_1506 == 4'd0) & (1'b1 == ap_CS_fsm_state15)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd6)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd5)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd4)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd3)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd2)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd1)) | ((1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd0)))) begin
        B_0_blk_n_B = m_axi_B_0_BVALID;
    end else begin
        B_0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((~(tmp_42_reg_1740 == 4'd6) & ~(tmp_42_reg_1740 == 4'd5) & ~(tmp_42_reg_1740 == 4'd4) & ~(tmp_42_reg_1740 == 4'd3) & ~(tmp_42_reg_1740 == 4'd2) & ~(tmp_42_reg_1740 == 4'd1) & ~(tmp_42_reg_1740 == 4'd0) & (1'b1 == ap_CS_fsm_state37)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd6)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd5)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd4)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd3)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd2)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd1)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd0)) | (~(tmp_41_reg_1506 == 4'd6) & ~(tmp_41_reg_1506 == 4'd5) & ~(tmp_41_reg_1506 == 4'd4) & ~(tmp_41_reg_1506 == 4'd3) & ~(tmp_41_reg_1506 == 4'd2) & ~(tmp_41_reg_1506 == 4'd1) & ~(tmp_41_reg_1506 == 4'd0) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd6)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd5)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd4)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd3)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd2)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd0)))) begin
        B_0_blk_n_W = m_axi_B_0_WREADY;
    end else begin
        B_0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln119_fu_676_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln119_fu_676_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((icmp_ln162_reg_1667 == 1'd1) & (1'b1 == ap_CS_fsm_state34)))) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty = zext_ln165_1_reg_1654;
    end else if (((icmp_ln136_reg_1535 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty = or_ln139_reg_1550;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty = m_reg_1539;
    end else begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln162_reg_1667 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_16 = trunc_ln165_2_reg_1693;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_16 = trunc_ln5_reg_1683;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((icmp_ln136_reg_1535 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_16 = tmp_41_reg_1506;
    end else begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_16 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln162_reg_1667 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_17 = trunc_ln165_1_reg_1713;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_17 = trunc_ln165_reg_1703;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((icmp_ln136_reg_1535 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_17 = trunc_ln139_reg_1516;
    end else begin
        grp_aesl_mux_load_8_1_x_s_fu_619_empty_17 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln162_fu_1060_p2 == 1'd1) & (icmp_ln160_fu_1048_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_1071_ap_start = 1'b1;
    end else begin
        grp_fu_1071_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1112_ap_start = 1'b1;
    end else begin
        grp_fu_1112_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_1112_ce = 1'b1;
    end else begin
        grp_fu_1112_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state6) | ((icmp_ln162_reg_1667 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((icmp_ln136_reg_1535 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln136_fu_810_p2 == 1'd1) & (icmp_ln134_fu_798_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        m_axi_B_0_ARVALID = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARVALID;
    end else begin
        m_axi_B_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state36_io) & (ap_predicate_op358_writereq_state36 == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
        m_axi_B_0_AWADDR = B_7_addr_26_reg_1786;
    end else if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd0))) begin
        m_axi_B_0_AWADDR = B_7_addr_19_reg_1744;
    end else if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd1))) begin
        m_axi_B_0_AWADDR = B_7_addr_20_reg_1750;
    end else if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd2))) begin
        m_axi_B_0_AWADDR = B_7_addr_21_reg_1756;
    end else if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd3))) begin
        m_axi_B_0_AWADDR = B_7_addr_22_reg_1762;
    end else if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd4))) begin
        m_axi_B_0_AWADDR = B_7_addr_23_reg_1768;
    end else if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd5))) begin
        m_axi_B_0_AWADDR = B_7_addr_24_reg_1774;
    end else if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd6))) begin
        m_axi_B_0_AWADDR = B_7_addr_25_reg_1780;
    end else if (((ap_predicate_op174_writereq_state9 == 1'b1) & (1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_B_0_AWADDR = B_7_addr_18_reg_1609;
    end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd0))) begin
        m_axi_B_0_AWADDR = B_7_addr_reg_1567;
    end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd1))) begin
        m_axi_B_0_AWADDR = B_7_addr_12_reg_1573;
    end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd2))) begin
        m_axi_B_0_AWADDR = B_7_addr_13_reg_1579;
    end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd3))) begin
        m_axi_B_0_AWADDR = B_7_addr_14_reg_1585;
    end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd4))) begin
        m_axi_B_0_AWADDR = B_7_addr_15_reg_1591;
    end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd5))) begin
        m_axi_B_0_AWADDR = B_7_addr_16_reg_1597;
    end else if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd6))) begin
        m_axi_B_0_AWADDR = B_7_addr_17_reg_1603;
    end else begin
        m_axi_B_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state36_io) & (ap_predicate_op358_writereq_state36 == 1'b1) & (1'b1 == ap_CS_fsm_state36)) | ((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd6)) | ((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd5)) | ((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd4)) | ((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd3)) | ((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd2)) | ((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd1)) | ((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36) & (tmp_42_reg_1740 == 4'd0)) | ((ap_predicate_op174_writereq_state9 == 1'b1) & (1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd6)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd5)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd4)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd3)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd2)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd1)) | ((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9) & (tmp_41_reg_1506 == 4'd0)))) begin
        m_axi_B_0_AWVALID = 1'b1;
    end else begin
        m_axi_B_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (ap_predicate_op413_writeresp_state42 == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | (~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd6)) | (~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd5)) | (~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd4)) | (~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd3)) | (~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd2)) | (~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd1)) | (~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42) & (tmp_42_reg_1740 == 4'd0)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (ap_predicate_op229_writeresp_state15 == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd6)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd5)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd4)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd3)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd2)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd1)) | (~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_41_reg_1506 == 4'd0)))) begin
        m_axi_B_0_BREADY = 1'b1;
    end else begin
        m_axi_B_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state6) | ((icmp_ln162_reg_1667 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((icmp_ln136_reg_1535 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln136_fu_810_p2 == 1'd1) & (icmp_ln134_fu_798_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        m_axi_B_0_RREADY = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_RREADY;
    end else begin
        m_axi_B_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op366_write_state37 == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd6)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd5)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd4)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd3)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd2)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd1)) | ((1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd0)))) begin
        m_axi_B_0_WDATA = zext_ln173_1_reg_1792;
    end else if ((((ap_predicate_op182_write_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd6)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd5)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd4)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd3)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd2)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd1)) | ((1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd0)))) begin
        m_axi_B_0_WDATA = zext_ln147_1_reg_1625;
    end else begin
        m_axi_B_0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state37_io) & (ap_predicate_op366_write_state37 == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd6)) | ((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd5)) | ((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd4)) | ((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd3)) | ((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd2)) | ((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd1)) | ((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37) & (tmp_42_reg_1740 == 4'd0)) | ((1'b0 == ap_block_state10_io) & (ap_predicate_op182_write_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd6)) | ((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd5)) | ((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd4)) | ((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd3)) | ((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd2)) | ((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd1)) | ((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (tmp_41_reg_1506 == 4'd0)))) begin
        m_axi_B_0_WVALID = 1'b1;
    end else begin
        m_axi_B_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tempc_address0 = zext_ln173_fu_1158_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        tempc_address0 = zext_ln166_fu_1087_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        tempc_address0 = zext_ln165_3_fu_1077_p1;
    end else begin
        tempc_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state18))) begin
        tempc_ce0 = 1'b1;
    end else begin
        tempc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((icmp_ln162_fu_1060_p2 == 1'd1) & (icmp_ln160_fu_1048_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        tempc_we0 = 1'b1;
    end else begin
        tempc_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tempr_address0 = zext_ln147_fu_861_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tempr_address0 = zext_ln140_fu_834_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tempr_address0 = zext_ln139_fu_824_p1;
    end else begin
        tempr_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | ((grp_aesl_mux_load_8_1_x_s_fu_619_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        tempr_ce0 = 1'b1;
    end else begin
        tempr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_aesl_mux_load_8_1_x_s_fu_619_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln136_fu_810_p2 == 1'd1) & (icmp_ln134_fu_798_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        tempr_we0 = 1'b1;
    end else begin
        tempr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln119_fu_676_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln124_fu_720_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((icmp_ln126_fu_732_p2 == 1'd1) & (icmp_ln124_fu_720_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln134_fu_798_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((icmp_ln134_fu_798_p2 == 1'd0) & (icmp_ln136_fu_810_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_aesl_mux_load_8_1_x_s_fu_619_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & ((icmp_ln143_fu_844_p2 == 1'd1) | (icmp_ln126_reg_1502 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((icmp_ln126_reg_1502 == 1'd1) & (icmp_ln143_fu_844_p2 == 1'd0) & (icmp_ln145_fu_856_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_io) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if ((~(((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0))) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln152_fu_1023_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln154_fu_1035_p2 == 1'd1) & (icmp_ln152_fu_1023_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln160_fu_1048_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((icmp_ln160_fu_1048_p2 == 1'd0) & (icmp_ln162_fu_1060_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_aesl_mux_load_8_1_x_s_fu_619_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b0 == ap_block_state34_on_subcall_done) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & ((icmp_ln169_fu_1135_p2 == 1'd1) | (icmp_ln154_reg_1645 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((icmp_ln154_reg_1645 == 1'd1) & (icmp_ln169_fu_1135_p2 == 1'd0) & (icmp_ln171_fu_1147_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b0 == ap_block_state36_io) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b0 == ap_block_state37_io) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if ((~(((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0))) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln124_2_fu_999_p2 = (phi_urem_reg_529 + 9'd1);

assign add_ln124_fu_714_p2 = (phi_mul_reg_518 + 19'd547);

assign add_ln140_fu_829_p2 = (zext_ln124_reg_1484 + zext_ln134_fu_794_p1);

assign add_ln147_1_fu_870_p2 = (add_ln147_reg_1511 + zext_ln147_4_fu_866_p1);

assign add_ln147_2_fu_879_p2 = ($signed(sext_ln147_reg_1410) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_3_fu_894_p2 = ($signed(sext_ln147_1_reg_1416) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_4_fu_909_p2 = ($signed(sext_ln147_2_reg_1422) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_5_fu_924_p2 = ($signed(sext_ln147_3_reg_1428) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_6_fu_939_p2 = ($signed(sext_ln147_4_reg_1434) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_7_fu_954_p2 = ($signed(sext_ln147_5_reg_1440) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_8_fu_969_p2 = ($signed(sext_ln147_6_reg_1446) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_9_fu_984_p2 = ($signed(sext_ln119_reg_1452) + $signed(zext_ln147_5_fu_875_p1));

assign add_ln147_fu_771_p2 = (zext_ln147_2_fu_755_p1 + zext_ln147_3_fu_767_p1);

assign add_ln166_fu_1082_p2 = (zext_ln152_reg_1521 + l1_0_reg_574);

assign add_ln169_1_fu_1336_p2 = (phi_urem130_reg_607 + 9'd1);

assign add_ln171_fu_1152_p2 = (phi_mul128_reg_596 + 19'd547);

assign add_ln173_1_fu_1203_p2 = (add_ln173_fu_1197_p2 + zext_ln165_reg_1649);

assign add_ln173_2_fu_1212_p2 = ($signed(sext_ln147_reg_1410) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_3_fu_1227_p2 = ($signed(sext_ln147_1_reg_1416) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_4_fu_1242_p2 = ($signed(sext_ln147_2_reg_1422) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_5_fu_1257_p2 = ($signed(sext_ln147_3_reg_1428) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_6_fu_1272_p2 = ($signed(sext_ln147_4_reg_1434) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_7_fu_1287_p2 = ($signed(sext_ln147_5_reg_1440) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_8_fu_1302_p2 = ($signed(sext_ln147_6_reg_1446) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_9_fu_1317_p2 = ($signed(sext_ln119_reg_1452) + $signed(zext_ln173_4_fu_1208_p1));

assign add_ln173_fu_1197_p2 = (zext_ln173_3_fu_1193_p1 + zext_ln173_2_fu_1181_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_io = (((ap_predicate_op182_write_state10 == 1'b1) & (m_axi_B_0_WREADY == 1'b0)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_41_reg_1506 == 4'd0)));
end

always @ (*) begin
    ap_block_state15 = (((ap_predicate_op229_writeresp_state15 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_41_reg_1506 == 4'd0)));
end

always @ (*) begin
    ap_block_state34_on_subcall_done = ((icmp_ln162_reg_1667 == 1'd1) & (grp_aesl_mux_load_8_1_x_s_fu_619_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state36_io = (((ap_predicate_op358_writereq_state36 == 1'b1) & (m_axi_B_0_AWREADY == 1'b0)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_42_reg_1740 == 4'd0)));
end

always @ (*) begin
    ap_block_state37_io = (((ap_predicate_op366_write_state37 == 1'b1) & (m_axi_B_0_WREADY == 1'b0)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_WREADY == 1'b0) & (tmp_42_reg_1740 == 4'd0)));
end

always @ (*) begin
    ap_block_state42 = (((ap_predicate_op413_writeresp_state42 == 1'b1) & (m_axi_B_0_BVALID == 1'b0)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd6)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd5)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd4)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd3)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd2)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd1)) | ((m_axi_B_0_BVALID == 1'b0) & (tmp_42_reg_1740 == 4'd0)));
end

always @ (*) begin
    ap_block_state7_on_subcall_done = ((icmp_ln136_reg_1535 == 1'd1) & (grp_aesl_mux_load_8_1_x_s_fu_619_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state9_io = (((ap_predicate_op174_writereq_state9 == 1'b1) & (m_axi_B_0_AWREADY == 1'b0)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_41_reg_1506 == 4'd6)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_41_reg_1506 == 4'd5)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_41_reg_1506 == 4'd4)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_41_reg_1506 == 4'd3)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_41_reg_1506 == 4'd2)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_41_reg_1506 == 4'd1)) | ((m_axi_B_0_AWREADY == 1'b0) & (tmp_41_reg_1506 == 4'd0)));
end

always @ (*) begin
    ap_predicate_op174_writereq_state9 = (~(tmp_41_reg_1506 == 4'd6) & ~(tmp_41_reg_1506 == 4'd5) & ~(tmp_41_reg_1506 == 4'd4) & ~(tmp_41_reg_1506 == 4'd3) & ~(tmp_41_reg_1506 == 4'd2) & ~(tmp_41_reg_1506 == 4'd1) & ~(tmp_41_reg_1506 == 4'd0));
end

always @ (*) begin
    ap_predicate_op182_write_state10 = (~(tmp_41_reg_1506 == 4'd6) & ~(tmp_41_reg_1506 == 4'd5) & ~(tmp_41_reg_1506 == 4'd4) & ~(tmp_41_reg_1506 == 4'd3) & ~(tmp_41_reg_1506 == 4'd2) & ~(tmp_41_reg_1506 == 4'd1) & ~(tmp_41_reg_1506 == 4'd0));
end

always @ (*) begin
    ap_predicate_op229_writeresp_state15 = (~(tmp_41_reg_1506 == 4'd6) & ~(tmp_41_reg_1506 == 4'd5) & ~(tmp_41_reg_1506 == 4'd4) & ~(tmp_41_reg_1506 == 4'd3) & ~(tmp_41_reg_1506 == 4'd2) & ~(tmp_41_reg_1506 == 4'd1) & ~(tmp_41_reg_1506 == 4'd0));
end

always @ (*) begin
    ap_predicate_op358_writereq_state36 = (~(tmp_42_reg_1740 == 4'd6) & ~(tmp_42_reg_1740 == 4'd5) & ~(tmp_42_reg_1740 == 4'd4) & ~(tmp_42_reg_1740 == 4'd3) & ~(tmp_42_reg_1740 == 4'd2) & ~(tmp_42_reg_1740 == 4'd1) & ~(tmp_42_reg_1740 == 4'd0));
end

always @ (*) begin
    ap_predicate_op366_write_state37 = (~(tmp_42_reg_1740 == 4'd6) & ~(tmp_42_reg_1740 == 4'd5) & ~(tmp_42_reg_1740 == 4'd4) & ~(tmp_42_reg_1740 == 4'd3) & ~(tmp_42_reg_1740 == 4'd2) & ~(tmp_42_reg_1740 == 4'd1) & ~(tmp_42_reg_1740 == 4'd0));
end

always @ (*) begin
    ap_predicate_op413_writeresp_state42 = (~(tmp_42_reg_1740 == 4'd6) & ~(tmp_42_reg_1740 == 4'd5) & ~(tmp_42_reg_1740 == 4'd4) & ~(tmp_42_reg_1740 == 4'd3) & ~(tmp_42_reg_1740 == 4'd2) & ~(tmp_42_reg_1740 == 4'd1) & ~(tmp_42_reg_1740 == 4'd0));
end

assign grp_aesl_mux_load_8_1_x_s_fu_619_ap_start = grp_aesl_mux_load_8_1_x_s_fu_619_ap_start_reg;

assign grp_fu_1071_p0 = l1_0_reg_574 << 9'd1;

assign grp_fu_1071_p1 = 9'd60;

assign grp_fu_1112_p1 = 9'd60;

assign i_fu_726_p2 = (i_0_reg_507 + 9'd1);

assign icmp_ln119_fu_676_p2 = ((k_0_reg_496 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln124_1_fu_1005_p2 = ((add_ln124_2_fu_999_p2 < 9'd60) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_720_p2 = ((i_0_reg_507 == 9'd480) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_732_p2 = ((i_0_reg_507 < levCols_reg_1466) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_798_p2 = ((l_0_reg_541 == 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_810_p2 = ((l_0_reg_541 < trunc_ln_reg_1478) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_844_p2 = ((o_0_reg_552 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_856_p2 = ((o_0_reg_552 < levRows_reg_1473) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_1023_p2 = ((n_0_reg_563 == 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_1035_p2 = ((n_0_reg_563 < trunc_ln_reg_1478) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_1048_p2 = ((l1_0_reg_574 == 9'd480) ? 1'b1 : 1'b0);

assign icmp_ln162_fu_1060_p2 = ((l1_0_reg_574 < zext_ln152_reg_1521) ? 1'b1 : 1'b0);

assign icmp_ln169_1_fu_1342_p2 = ((add_ln169_1_fu_1336_p2 < 9'd60) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_1135_p2 = ((o3_0_reg_585 == 9'd480) ? 1'b1 : 1'b0);

assign icmp_ln171_fu_1147_p2 = ((o3_0_reg_585 < levCols_reg_1466) ? 1'b1 : 1'b0);

assign k_fu_682_p2 = (k_0_reg_496 + 2'd1);

assign l_2_fu_1054_p2 = (l1_0_reg_574 + 9'd1);

assign l_fu_804_p2 = (l_0_reg_541 + 9'd1);

assign levCols_fu_688_p2 = 9'd480 >> zext_ln119_1_fu_672_p1;

assign levRows_fu_694_p2 = 10'd640 >> zext_ln119_fu_668_p1;

assign m_1_fu_1065_p2 = l1_0_reg_574 << 9'd1;

assign m_axi_B_0_ARADDR = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARADDR;

assign m_axi_B_0_ARBURST = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARBURST;

assign m_axi_B_0_ARCACHE = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARCACHE;

assign m_axi_B_0_ARID = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARID;

assign m_axi_B_0_ARLEN = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARLEN;

assign m_axi_B_0_ARLOCK = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARLOCK;

assign m_axi_B_0_ARPROT = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARPROT;

assign m_axi_B_0_ARQOS = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARQOS;

assign m_axi_B_0_ARREGION = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARREGION;

assign m_axi_B_0_ARSIZE = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARSIZE;

assign m_axi_B_0_ARUSER = grp_aesl_mux_load_8_1_x_s_fu_619_m_axi_empty_15_ARUSER;

assign m_axi_B_0_AWBURST = 2'd0;

assign m_axi_B_0_AWCACHE = 4'd0;

assign m_axi_B_0_AWID = 1'd0;

assign m_axi_B_0_AWLEN = 32'd1;

assign m_axi_B_0_AWLOCK = 2'd0;

assign m_axi_B_0_AWPROT = 3'd0;

assign m_axi_B_0_AWQOS = 4'd0;

assign m_axi_B_0_AWREGION = 4'd0;

assign m_axi_B_0_AWSIZE = 3'd0;

assign m_axi_B_0_AWUSER = 1'd0;

assign m_axi_B_0_WID = 1'd0;

assign m_axi_B_0_WLAST = 1'b0;

assign m_axi_B_0_WSTRB = 1'd1;

assign m_axi_B_0_WUSER = 1'd0;

assign m_fu_815_p3 = {{l_0_reg_541}, {1'd0}};

assign mul_ln165_1_fu_1363_p0 = 20'd547;

assign mul_ln165_1_fu_1363_p1 = mul_ln165_1_fu_1363_p10;

assign mul_ln165_1_fu_1363_p10 = or_ln165_fu_1103_p2;

assign mul_ln165_fu_1356_p0 = 20'd547;

assign mul_ln165_fu_1356_p1 = mul_ln165_fu_1356_p10;

assign mul_ln165_fu_1356_p10 = m_1_reg_1671;

assign n_fu_1029_p2 = (n_0_reg_563 + 9'd1);

assign o_3_fu_1141_p2 = (o3_0_reg_585 + 9'd1);

assign o_fu_850_p2 = (o_0_reg_552 + 10'd1);

assign or_ln139_fu_838_p2 = (m_reg_1539 | 10'd1);

assign or_ln165_fu_1103_p2 = (m_1_reg_1671 | 9'd1);

assign select_ln124_fu_1011_p3 = ((icmp_ln124_1_fu_1005_p2[0:0] === 1'b1) ? add_ln124_2_fu_999_p2 : 9'd0);

assign select_ln169_fu_1348_p3 = ((icmp_ln169_1_fu_1342_p2[0:0] === 1'b1) ? add_ln169_1_fu_1336_p2 : 9'd0);

assign sext_ln119_fu_664_p0 = B_7_offset;

assign sext_ln119_fu_664_p1 = sext_ln119_fu_664_p0;

assign sext_ln147_10_fu_929_p1 = $signed(add_ln147_5_fu_924_p2);

assign sext_ln147_11_fu_944_p1 = $signed(add_ln147_6_fu_939_p2);

assign sext_ln147_12_fu_959_p1 = $signed(add_ln147_7_fu_954_p2);

assign sext_ln147_13_fu_974_p1 = $signed(add_ln147_8_fu_969_p2);

assign sext_ln147_14_fu_989_p1 = $signed(add_ln147_9_fu_984_p2);

assign sext_ln147_1_fu_640_p0 = B_1_offset;

assign sext_ln147_1_fu_640_p1 = sext_ln147_1_fu_640_p0;

assign sext_ln147_2_fu_644_p0 = B_2_offset;

assign sext_ln147_2_fu_644_p1 = sext_ln147_2_fu_644_p0;

assign sext_ln147_3_fu_648_p0 = B_3_offset;

assign sext_ln147_3_fu_648_p1 = sext_ln147_3_fu_648_p0;

assign sext_ln147_4_fu_652_p0 = B_4_offset;

assign sext_ln147_4_fu_652_p1 = sext_ln147_4_fu_652_p0;

assign sext_ln147_5_fu_656_p0 = B_5_offset;

assign sext_ln147_5_fu_656_p1 = sext_ln147_5_fu_656_p0;

assign sext_ln147_6_fu_660_p0 = B_6_offset;

assign sext_ln147_6_fu_660_p1 = sext_ln147_6_fu_660_p0;

assign sext_ln147_7_fu_884_p1 = $signed(add_ln147_2_fu_879_p2);

assign sext_ln147_8_fu_899_p1 = $signed(add_ln147_3_fu_894_p2);

assign sext_ln147_9_fu_914_p1 = $signed(add_ln147_4_fu_909_p2);

assign sext_ln147_fu_636_p0 = B_0_offset;

assign sext_ln147_fu_636_p1 = sext_ln147_fu_636_p0;

assign sext_ln173_1_fu_1232_p1 = $signed(add_ln173_3_fu_1227_p2);

assign sext_ln173_2_fu_1247_p1 = $signed(add_ln173_4_fu_1242_p2);

assign sext_ln173_3_fu_1262_p1 = $signed(add_ln173_5_fu_1257_p2);

assign sext_ln173_4_fu_1277_p1 = $signed(add_ln173_6_fu_1272_p2);

assign sext_ln173_5_fu_1292_p1 = $signed(add_ln173_7_fu_1287_p2);

assign sext_ln173_6_fu_1307_p1 = $signed(add_ln173_8_fu_1302_p2);

assign sext_ln173_7_fu_1322_p1 = $signed(add_ln173_9_fu_1317_p2);

assign sext_ln173_fu_1217_p1 = $signed(add_ln173_2_fu_1212_p2);

assign tmp_33_fu_1173_p3 = {{phi_urem130_reg_607}, {9'd0}};

assign tmp_34_fu_1185_p3 = {{phi_urem130_reg_607}, {7'd0}};

assign tmp_fu_747_p3 = {{phi_urem_reg_529}, {9'd0}};

assign tmp_s_fu_759_p3 = {{phi_urem_reg_529}, {7'd0}};

assign trunc_ln139_fu_777_p1 = phi_urem_reg_529[5:0];

assign trunc_ln165_1_fu_1131_p1 = urem_ln165_1_reg_1708[5:0];

assign trunc_ln165_fu_1127_p1 = urem_ln165_reg_1698[5:0];

assign trunc_ln3_fu_781_p4 = {{levCols_reg_1466[8:1]}};

assign trunc_ln_fu_700_p4 = {{levRows_fu_694_p2[9:1]}};

assign zext_ln119_1_fu_672_p1 = k_0_reg_496;

assign zext_ln119_fu_668_p1 = k_0_reg_496;

assign zext_ln124_fu_710_p1 = trunc_ln_fu_700_p4;

assign zext_ln134_fu_794_p1 = l_0_reg_541;

assign zext_ln139_fu_824_p1 = l_0_reg_541;

assign zext_ln140_fu_834_p1 = add_ln140_reg_1545;

assign zext_ln147_1_fu_1019_p1 = tempr_q0;

assign zext_ln147_2_fu_755_p1 = tmp_fu_747_p3;

assign zext_ln147_3_fu_767_p1 = tmp_s_fu_759_p3;

assign zext_ln147_4_fu_866_p1 = o_0_reg_552;

assign zext_ln147_5_fu_875_p1 = add_ln147_1_fu_870_p2;

assign zext_ln147_fu_861_p1 = o_0_reg_552;

assign zext_ln152_fu_790_p1 = trunc_ln3_fu_781_p4;

assign zext_ln165_1_fu_1044_p1 = n_0_reg_563;

assign zext_ln165_3_fu_1077_p1 = l1_0_reg_574;

assign zext_ln165_fu_1040_p1 = n_0_reg_563;

assign zext_ln166_fu_1087_p1 = add_ln166_reg_1678;

assign zext_ln173_1_fu_1332_p1 = tempc_q0;

assign zext_ln173_2_fu_1181_p1 = tmp_33_fu_1173_p3;

assign zext_ln173_3_fu_1193_p1 = tmp_34_fu_1185_p3;

assign zext_ln173_4_fu_1208_p1 = add_ln173_1_fu_1203_p2;

assign zext_ln173_fu_1158_p1 = o3_0_reg_585;

always @ (posedge ap_clk) begin
    zext_ln124_reg_1484[9] <= 1'b0;
    add_ln147_reg_1511[6:0] <= 7'b0000000;
    zext_ln152_reg_1521[8] <= 1'b0;
    m_reg_1539[0] <= 1'b0;
    or_ln139_reg_1550[0] <= 1'b1;
    zext_ln147_1_reg_1625[7:1] <= 7'b0000000;
    zext_ln165_reg_1649[18:9] <= 10'b0000000000;
    zext_ln165_1_reg_1654[9] <= 1'b0;
    m_1_reg_1671[0] <= 1'b0;
    zext_ln173_1_reg_1792[7:1] <= 7'b0000000;
end

endmodule //DWT_IR
