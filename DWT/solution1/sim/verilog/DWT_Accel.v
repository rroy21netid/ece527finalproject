// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="DWT_Accel,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.975020,HLS_SYN_LAT=23202900,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=27,HLS_SYN_FF=12842,HLS_SYN_LUT=21016,HLS_VERSION=2019_1}" *)

module DWT_Accel (
        ap_clk,
        ap_rst_n,
        m_axi_DATA_A_AWVALID,
        m_axi_DATA_A_AWREADY,
        m_axi_DATA_A_AWADDR,
        m_axi_DATA_A_AWID,
        m_axi_DATA_A_AWLEN,
        m_axi_DATA_A_AWSIZE,
        m_axi_DATA_A_AWBURST,
        m_axi_DATA_A_AWLOCK,
        m_axi_DATA_A_AWCACHE,
        m_axi_DATA_A_AWPROT,
        m_axi_DATA_A_AWQOS,
        m_axi_DATA_A_AWREGION,
        m_axi_DATA_A_AWUSER,
        m_axi_DATA_A_WVALID,
        m_axi_DATA_A_WREADY,
        m_axi_DATA_A_WDATA,
        m_axi_DATA_A_WSTRB,
        m_axi_DATA_A_WLAST,
        m_axi_DATA_A_WID,
        m_axi_DATA_A_WUSER,
        m_axi_DATA_A_ARVALID,
        m_axi_DATA_A_ARREADY,
        m_axi_DATA_A_ARADDR,
        m_axi_DATA_A_ARID,
        m_axi_DATA_A_ARLEN,
        m_axi_DATA_A_ARSIZE,
        m_axi_DATA_A_ARBURST,
        m_axi_DATA_A_ARLOCK,
        m_axi_DATA_A_ARCACHE,
        m_axi_DATA_A_ARPROT,
        m_axi_DATA_A_ARQOS,
        m_axi_DATA_A_ARREGION,
        m_axi_DATA_A_ARUSER,
        m_axi_DATA_A_RVALID,
        m_axi_DATA_A_RREADY,
        m_axi_DATA_A_RDATA,
        m_axi_DATA_A_RLAST,
        m_axi_DATA_A_RID,
        m_axi_DATA_A_RUSER,
        m_axi_DATA_A_RRESP,
        m_axi_DATA_A_BVALID,
        m_axi_DATA_A_BREADY,
        m_axi_DATA_A_BRESP,
        m_axi_DATA_A_BID,
        m_axi_DATA_A_BUSER,
        m_axi_DATA_B_AWVALID,
        m_axi_DATA_B_AWREADY,
        m_axi_DATA_B_AWADDR,
        m_axi_DATA_B_AWID,
        m_axi_DATA_B_AWLEN,
        m_axi_DATA_B_AWSIZE,
        m_axi_DATA_B_AWBURST,
        m_axi_DATA_B_AWLOCK,
        m_axi_DATA_B_AWCACHE,
        m_axi_DATA_B_AWPROT,
        m_axi_DATA_B_AWQOS,
        m_axi_DATA_B_AWREGION,
        m_axi_DATA_B_AWUSER,
        m_axi_DATA_B_WVALID,
        m_axi_DATA_B_WREADY,
        m_axi_DATA_B_WDATA,
        m_axi_DATA_B_WSTRB,
        m_axi_DATA_B_WLAST,
        m_axi_DATA_B_WID,
        m_axi_DATA_B_WUSER,
        m_axi_DATA_B_ARVALID,
        m_axi_DATA_B_ARREADY,
        m_axi_DATA_B_ARADDR,
        m_axi_DATA_B_ARID,
        m_axi_DATA_B_ARLEN,
        m_axi_DATA_B_ARSIZE,
        m_axi_DATA_B_ARBURST,
        m_axi_DATA_B_ARLOCK,
        m_axi_DATA_B_ARCACHE,
        m_axi_DATA_B_ARPROT,
        m_axi_DATA_B_ARQOS,
        m_axi_DATA_B_ARREGION,
        m_axi_DATA_B_ARUSER,
        m_axi_DATA_B_RVALID,
        m_axi_DATA_B_RREADY,
        m_axi_DATA_B_RDATA,
        m_axi_DATA_B_RLAST,
        m_axi_DATA_B_RID,
        m_axi_DATA_B_RUSER,
        m_axi_DATA_B_RRESP,
        m_axi_DATA_B_BVALID,
        m_axi_DATA_B_BREADY,
        m_axi_DATA_B_BRESP,
        m_axi_DATA_B_BID,
        m_axi_DATA_B_BUSER,
        m_axi_DATA_C_AWVALID,
        m_axi_DATA_C_AWREADY,
        m_axi_DATA_C_AWADDR,
        m_axi_DATA_C_AWID,
        m_axi_DATA_C_AWLEN,
        m_axi_DATA_C_AWSIZE,
        m_axi_DATA_C_AWBURST,
        m_axi_DATA_C_AWLOCK,
        m_axi_DATA_C_AWCACHE,
        m_axi_DATA_C_AWPROT,
        m_axi_DATA_C_AWQOS,
        m_axi_DATA_C_AWREGION,
        m_axi_DATA_C_AWUSER,
        m_axi_DATA_C_WVALID,
        m_axi_DATA_C_WREADY,
        m_axi_DATA_C_WDATA,
        m_axi_DATA_C_WSTRB,
        m_axi_DATA_C_WLAST,
        m_axi_DATA_C_WID,
        m_axi_DATA_C_WUSER,
        m_axi_DATA_C_ARVALID,
        m_axi_DATA_C_ARREADY,
        m_axi_DATA_C_ARADDR,
        m_axi_DATA_C_ARID,
        m_axi_DATA_C_ARLEN,
        m_axi_DATA_C_ARSIZE,
        m_axi_DATA_C_ARBURST,
        m_axi_DATA_C_ARLOCK,
        m_axi_DATA_C_ARCACHE,
        m_axi_DATA_C_ARPROT,
        m_axi_DATA_C_ARQOS,
        m_axi_DATA_C_ARREGION,
        m_axi_DATA_C_ARUSER,
        m_axi_DATA_C_RVALID,
        m_axi_DATA_C_RREADY,
        m_axi_DATA_C_RDATA,
        m_axi_DATA_C_RLAST,
        m_axi_DATA_C_RID,
        m_axi_DATA_C_RUSER,
        m_axi_DATA_C_RRESP,
        m_axi_DATA_C_BVALID,
        m_axi_DATA_C_BREADY,
        m_axi_DATA_C_BRESP,
        m_axi_DATA_C_BID,
        m_axi_DATA_C_BUSER,
        s_axi_CTL_AWVALID,
        s_axi_CTL_AWREADY,
        s_axi_CTL_AWADDR,
        s_axi_CTL_WVALID,
        s_axi_CTL_WREADY,
        s_axi_CTL_WDATA,
        s_axi_CTL_WSTRB,
        s_axi_CTL_ARVALID,
        s_axi_CTL_ARREADY,
        s_axi_CTL_ARADDR,
        s_axi_CTL_RVALID,
        s_axi_CTL_RREADY,
        s_axi_CTL_RDATA,
        s_axi_CTL_RRESP,
        s_axi_CTL_BVALID,
        s_axi_CTL_BREADY,
        s_axi_CTL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CTL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_A_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_A_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_A_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_A_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_A_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_A_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_A_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_A_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_A_USER_VALUE = 0;
parameter    C_M_AXI_DATA_A_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_A_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_B_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_B_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_B_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_B_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_B_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_B_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_B_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_B_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_B_USER_VALUE = 0;
parameter    C_M_AXI_DATA_B_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_B_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_C_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_C_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_C_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_C_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_C_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_C_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_C_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_C_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_C_USER_VALUE = 0;
parameter    C_M_AXI_DATA_C_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_C_CACHE_VALUE = 3;

parameter C_S_AXI_CTL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_A_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_B_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_C_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_DATA_A_AWVALID;
input   m_axi_DATA_A_AWREADY;
output  [C_M_AXI_DATA_A_ADDR_WIDTH - 1:0] m_axi_DATA_A_AWADDR;
output  [C_M_AXI_DATA_A_ID_WIDTH - 1:0] m_axi_DATA_A_AWID;
output  [7:0] m_axi_DATA_A_AWLEN;
output  [2:0] m_axi_DATA_A_AWSIZE;
output  [1:0] m_axi_DATA_A_AWBURST;
output  [1:0] m_axi_DATA_A_AWLOCK;
output  [3:0] m_axi_DATA_A_AWCACHE;
output  [2:0] m_axi_DATA_A_AWPROT;
output  [3:0] m_axi_DATA_A_AWQOS;
output  [3:0] m_axi_DATA_A_AWREGION;
output  [C_M_AXI_DATA_A_AWUSER_WIDTH - 1:0] m_axi_DATA_A_AWUSER;
output   m_axi_DATA_A_WVALID;
input   m_axi_DATA_A_WREADY;
output  [C_M_AXI_DATA_A_DATA_WIDTH - 1:0] m_axi_DATA_A_WDATA;
output  [C_M_AXI_DATA_A_WSTRB_WIDTH - 1:0] m_axi_DATA_A_WSTRB;
output   m_axi_DATA_A_WLAST;
output  [C_M_AXI_DATA_A_ID_WIDTH - 1:0] m_axi_DATA_A_WID;
output  [C_M_AXI_DATA_A_WUSER_WIDTH - 1:0] m_axi_DATA_A_WUSER;
output   m_axi_DATA_A_ARVALID;
input   m_axi_DATA_A_ARREADY;
output  [C_M_AXI_DATA_A_ADDR_WIDTH - 1:0] m_axi_DATA_A_ARADDR;
output  [C_M_AXI_DATA_A_ID_WIDTH - 1:0] m_axi_DATA_A_ARID;
output  [7:0] m_axi_DATA_A_ARLEN;
output  [2:0] m_axi_DATA_A_ARSIZE;
output  [1:0] m_axi_DATA_A_ARBURST;
output  [1:0] m_axi_DATA_A_ARLOCK;
output  [3:0] m_axi_DATA_A_ARCACHE;
output  [2:0] m_axi_DATA_A_ARPROT;
output  [3:0] m_axi_DATA_A_ARQOS;
output  [3:0] m_axi_DATA_A_ARREGION;
output  [C_M_AXI_DATA_A_ARUSER_WIDTH - 1:0] m_axi_DATA_A_ARUSER;
input   m_axi_DATA_A_RVALID;
output   m_axi_DATA_A_RREADY;
input  [C_M_AXI_DATA_A_DATA_WIDTH - 1:0] m_axi_DATA_A_RDATA;
input   m_axi_DATA_A_RLAST;
input  [C_M_AXI_DATA_A_ID_WIDTH - 1:0] m_axi_DATA_A_RID;
input  [C_M_AXI_DATA_A_RUSER_WIDTH - 1:0] m_axi_DATA_A_RUSER;
input  [1:0] m_axi_DATA_A_RRESP;
input   m_axi_DATA_A_BVALID;
output   m_axi_DATA_A_BREADY;
input  [1:0] m_axi_DATA_A_BRESP;
input  [C_M_AXI_DATA_A_ID_WIDTH - 1:0] m_axi_DATA_A_BID;
input  [C_M_AXI_DATA_A_BUSER_WIDTH - 1:0] m_axi_DATA_A_BUSER;
output   m_axi_DATA_B_AWVALID;
input   m_axi_DATA_B_AWREADY;
output  [C_M_AXI_DATA_B_ADDR_WIDTH - 1:0] m_axi_DATA_B_AWADDR;
output  [C_M_AXI_DATA_B_ID_WIDTH - 1:0] m_axi_DATA_B_AWID;
output  [7:0] m_axi_DATA_B_AWLEN;
output  [2:0] m_axi_DATA_B_AWSIZE;
output  [1:0] m_axi_DATA_B_AWBURST;
output  [1:0] m_axi_DATA_B_AWLOCK;
output  [3:0] m_axi_DATA_B_AWCACHE;
output  [2:0] m_axi_DATA_B_AWPROT;
output  [3:0] m_axi_DATA_B_AWQOS;
output  [3:0] m_axi_DATA_B_AWREGION;
output  [C_M_AXI_DATA_B_AWUSER_WIDTH - 1:0] m_axi_DATA_B_AWUSER;
output   m_axi_DATA_B_WVALID;
input   m_axi_DATA_B_WREADY;
output  [C_M_AXI_DATA_B_DATA_WIDTH - 1:0] m_axi_DATA_B_WDATA;
output  [C_M_AXI_DATA_B_WSTRB_WIDTH - 1:0] m_axi_DATA_B_WSTRB;
output   m_axi_DATA_B_WLAST;
output  [C_M_AXI_DATA_B_ID_WIDTH - 1:0] m_axi_DATA_B_WID;
output  [C_M_AXI_DATA_B_WUSER_WIDTH - 1:0] m_axi_DATA_B_WUSER;
output   m_axi_DATA_B_ARVALID;
input   m_axi_DATA_B_ARREADY;
output  [C_M_AXI_DATA_B_ADDR_WIDTH - 1:0] m_axi_DATA_B_ARADDR;
output  [C_M_AXI_DATA_B_ID_WIDTH - 1:0] m_axi_DATA_B_ARID;
output  [7:0] m_axi_DATA_B_ARLEN;
output  [2:0] m_axi_DATA_B_ARSIZE;
output  [1:0] m_axi_DATA_B_ARBURST;
output  [1:0] m_axi_DATA_B_ARLOCK;
output  [3:0] m_axi_DATA_B_ARCACHE;
output  [2:0] m_axi_DATA_B_ARPROT;
output  [3:0] m_axi_DATA_B_ARQOS;
output  [3:0] m_axi_DATA_B_ARREGION;
output  [C_M_AXI_DATA_B_ARUSER_WIDTH - 1:0] m_axi_DATA_B_ARUSER;
input   m_axi_DATA_B_RVALID;
output   m_axi_DATA_B_RREADY;
input  [C_M_AXI_DATA_B_DATA_WIDTH - 1:0] m_axi_DATA_B_RDATA;
input   m_axi_DATA_B_RLAST;
input  [C_M_AXI_DATA_B_ID_WIDTH - 1:0] m_axi_DATA_B_RID;
input  [C_M_AXI_DATA_B_RUSER_WIDTH - 1:0] m_axi_DATA_B_RUSER;
input  [1:0] m_axi_DATA_B_RRESP;
input   m_axi_DATA_B_BVALID;
output   m_axi_DATA_B_BREADY;
input  [1:0] m_axi_DATA_B_BRESP;
input  [C_M_AXI_DATA_B_ID_WIDTH - 1:0] m_axi_DATA_B_BID;
input  [C_M_AXI_DATA_B_BUSER_WIDTH - 1:0] m_axi_DATA_B_BUSER;
output   m_axi_DATA_C_AWVALID;
input   m_axi_DATA_C_AWREADY;
output  [C_M_AXI_DATA_C_ADDR_WIDTH - 1:0] m_axi_DATA_C_AWADDR;
output  [C_M_AXI_DATA_C_ID_WIDTH - 1:0] m_axi_DATA_C_AWID;
output  [7:0] m_axi_DATA_C_AWLEN;
output  [2:0] m_axi_DATA_C_AWSIZE;
output  [1:0] m_axi_DATA_C_AWBURST;
output  [1:0] m_axi_DATA_C_AWLOCK;
output  [3:0] m_axi_DATA_C_AWCACHE;
output  [2:0] m_axi_DATA_C_AWPROT;
output  [3:0] m_axi_DATA_C_AWQOS;
output  [3:0] m_axi_DATA_C_AWREGION;
output  [C_M_AXI_DATA_C_AWUSER_WIDTH - 1:0] m_axi_DATA_C_AWUSER;
output   m_axi_DATA_C_WVALID;
input   m_axi_DATA_C_WREADY;
output  [C_M_AXI_DATA_C_DATA_WIDTH - 1:0] m_axi_DATA_C_WDATA;
output  [C_M_AXI_DATA_C_WSTRB_WIDTH - 1:0] m_axi_DATA_C_WSTRB;
output   m_axi_DATA_C_WLAST;
output  [C_M_AXI_DATA_C_ID_WIDTH - 1:0] m_axi_DATA_C_WID;
output  [C_M_AXI_DATA_C_WUSER_WIDTH - 1:0] m_axi_DATA_C_WUSER;
output   m_axi_DATA_C_ARVALID;
input   m_axi_DATA_C_ARREADY;
output  [C_M_AXI_DATA_C_ADDR_WIDTH - 1:0] m_axi_DATA_C_ARADDR;
output  [C_M_AXI_DATA_C_ID_WIDTH - 1:0] m_axi_DATA_C_ARID;
output  [7:0] m_axi_DATA_C_ARLEN;
output  [2:0] m_axi_DATA_C_ARSIZE;
output  [1:0] m_axi_DATA_C_ARBURST;
output  [1:0] m_axi_DATA_C_ARLOCK;
output  [3:0] m_axi_DATA_C_ARCACHE;
output  [2:0] m_axi_DATA_C_ARPROT;
output  [3:0] m_axi_DATA_C_ARQOS;
output  [3:0] m_axi_DATA_C_ARREGION;
output  [C_M_AXI_DATA_C_ARUSER_WIDTH - 1:0] m_axi_DATA_C_ARUSER;
input   m_axi_DATA_C_RVALID;
output   m_axi_DATA_C_RREADY;
input  [C_M_AXI_DATA_C_DATA_WIDTH - 1:0] m_axi_DATA_C_RDATA;
input   m_axi_DATA_C_RLAST;
input  [C_M_AXI_DATA_C_ID_WIDTH - 1:0] m_axi_DATA_C_RID;
input  [C_M_AXI_DATA_C_RUSER_WIDTH - 1:0] m_axi_DATA_C_RUSER;
input  [1:0] m_axi_DATA_C_RRESP;
input   m_axi_DATA_C_BVALID;
output   m_axi_DATA_C_BREADY;
input  [1:0] m_axi_DATA_C_BRESP;
input  [C_M_AXI_DATA_C_ID_WIDTH - 1:0] m_axi_DATA_C_BID;
input  [C_M_AXI_DATA_C_BUSER_WIDTH - 1:0] m_axi_DATA_C_BUSER;
input   s_axi_CTL_AWVALID;
output   s_axi_CTL_AWREADY;
input  [C_S_AXI_CTL_ADDR_WIDTH - 1:0] s_axi_CTL_AWADDR;
input   s_axi_CTL_WVALID;
output   s_axi_CTL_WREADY;
input  [C_S_AXI_CTL_DATA_WIDTH - 1:0] s_axi_CTL_WDATA;
input  [C_S_AXI_CTL_WSTRB_WIDTH - 1:0] s_axi_CTL_WSTRB;
input   s_axi_CTL_ARVALID;
output   s_axi_CTL_ARREADY;
input  [C_S_AXI_CTL_ADDR_WIDTH - 1:0] s_axi_CTL_ARADDR;
output   s_axi_CTL_RVALID;
input   s_axi_CTL_RREADY;
output  [C_S_AXI_CTL_DATA_WIDTH - 1:0] s_axi_CTL_RDATA;
output  [1:0] s_axi_CTL_RRESP;
output   s_axi_CTL_BVALID;
input   s_axi_CTL_BREADY;
output  [1:0] s_axi_CTL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] a_0;
wire   [31:0] a_1;
wire   [31:0] a_2;
wire   [31:0] a_3;
wire   [31:0] a_4;
wire   [31:0] a_5;
wire   [31:0] a_6;
wire   [31:0] a_7;
wire   [31:0] b_0;
wire   [31:0] b_1;
wire   [31:0] b_2;
wire   [31:0] b_3;
wire   [31:0] b_4;
wire   [31:0] b_5;
wire   [31:0] b_6;
wire   [31:0] b_7;
wire   [31:0] c_0;
wire   [31:0] c_1;
wire   [31:0] c_2;
wire   [31:0] c_3;
wire   [31:0] c_4;
wire   [31:0] c_5;
wire   [31:0] c_6;
wire   [31:0] c_7;
reg    DATA_A_AWVALID;
wire    DATA_A_AWREADY;
reg    DATA_A_WVALID;
wire    DATA_A_WREADY;
reg    DATA_A_ARVALID;
wire    DATA_A_ARREADY;
wire    DATA_A_RVALID;
reg    DATA_A_RREADY;
wire   [7:0] DATA_A_RDATA;
wire    DATA_A_RLAST;
wire   [0:0] DATA_A_RID;
wire   [0:0] DATA_A_RUSER;
wire   [1:0] DATA_A_RRESP;
wire    DATA_A_BVALID;
reg    DATA_A_BREADY;
wire   [1:0] DATA_A_BRESP;
wire   [0:0] DATA_A_BID;
wire   [0:0] DATA_A_BUSER;
reg    DATA_B_AWVALID;
wire    DATA_B_AWREADY;
reg    DATA_B_WVALID;
wire    DATA_B_WREADY;
reg    DATA_B_ARVALID;
wire    DATA_B_ARREADY;
reg   [31:0] DATA_B_ARADDR;
reg   [0:0] DATA_B_ARID;
reg   [31:0] DATA_B_ARLEN;
reg   [2:0] DATA_B_ARSIZE;
reg   [1:0] DATA_B_ARBURST;
reg   [1:0] DATA_B_ARLOCK;
reg   [3:0] DATA_B_ARCACHE;
reg   [2:0] DATA_B_ARPROT;
reg   [3:0] DATA_B_ARQOS;
reg   [3:0] DATA_B_ARREGION;
reg   [0:0] DATA_B_ARUSER;
wire    DATA_B_RVALID;
reg    DATA_B_RREADY;
wire   [7:0] DATA_B_RDATA;
wire    DATA_B_RLAST;
wire   [0:0] DATA_B_RID;
wire   [0:0] DATA_B_RUSER;
wire   [1:0] DATA_B_RRESP;
wire    DATA_B_BVALID;
reg    DATA_B_BREADY;
wire   [1:0] DATA_B_BRESP;
wire   [0:0] DATA_B_BID;
wire   [0:0] DATA_B_BUSER;
reg    DATA_C_AWVALID;
wire    DATA_C_AWREADY;
reg   [31:0] DATA_C_AWADDR;
reg   [0:0] DATA_C_AWID;
reg   [31:0] DATA_C_AWLEN;
reg   [2:0] DATA_C_AWSIZE;
reg   [1:0] DATA_C_AWBURST;
reg   [1:0] DATA_C_AWLOCK;
reg   [3:0] DATA_C_AWCACHE;
reg   [2:0] DATA_C_AWPROT;
reg   [3:0] DATA_C_AWQOS;
reg   [3:0] DATA_C_AWREGION;
reg   [0:0] DATA_C_AWUSER;
reg    DATA_C_WVALID;
wire    DATA_C_WREADY;
reg   [7:0] DATA_C_WDATA;
reg   [0:0] DATA_C_WSTRB;
reg    DATA_C_WLAST;
reg   [0:0] DATA_C_WID;
reg   [0:0] DATA_C_WUSER;
wire    DATA_C_ARREADY;
wire    DATA_C_RVALID;
wire   [7:0] DATA_C_RDATA;
wire    DATA_C_RLAST;
wire   [0:0] DATA_C_RID;
wire   [0:0] DATA_C_RUSER;
wire   [1:0] DATA_C_RRESP;
wire    DATA_C_BVALID;
reg    DATA_C_BREADY;
wire   [1:0] DATA_C_BRESP;
wire   [0:0] DATA_C_BID;
wire   [0:0] DATA_C_BUSER;
reg   [31:0] c_7_read_reg_533;
reg   [31:0] c_6_read_reg_540;
reg   [31:0] c_5_read_reg_547;
reg   [31:0] c_4_read_reg_554;
reg   [31:0] c_3_read_reg_561;
reg   [31:0] c_2_read_reg_568;
reg   [31:0] c_1_read_reg_575;
reg   [31:0] c_0_read_reg_582;
reg   [31:0] b_7_read_reg_588;
reg   [31:0] b_6_read_reg_595;
reg   [31:0] b_5_read_reg_602;
reg   [31:0] b_4_read_reg_609;
reg   [31:0] b_3_read_reg_616;
reg   [31:0] b_2_read_reg_623;
reg   [31:0] b_1_read_reg_630;
reg   [31:0] b_0_read_reg_637;
reg   [31:0] a_7_read_reg_643;
reg   [31:0] a_6_read_reg_650;
reg   [31:0] a_5_read_reg_657;
reg   [31:0] a_4_read_reg_664;
reg   [31:0] a_3_read_reg_671;
reg   [31:0] a_2_read_reg_678;
reg   [31:0] a_1_read_reg_685;
reg   [31:0] a_0_read_reg_692;
wire    grp_Filter_fu_252_ap_start;
wire    grp_Filter_fu_252_ap_done;
wire    grp_Filter_fu_252_ap_idle;
wire    grp_Filter_fu_252_ap_ready;
wire    grp_Filter_fu_252_m_axi_A_0_AWVALID;
wire   [31:0] grp_Filter_fu_252_m_axi_A_0_AWADDR;
wire   [0:0] grp_Filter_fu_252_m_axi_A_0_AWID;
wire   [31:0] grp_Filter_fu_252_m_axi_A_0_AWLEN;
wire   [2:0] grp_Filter_fu_252_m_axi_A_0_AWSIZE;
wire   [1:0] grp_Filter_fu_252_m_axi_A_0_AWBURST;
wire   [1:0] grp_Filter_fu_252_m_axi_A_0_AWLOCK;
wire   [3:0] grp_Filter_fu_252_m_axi_A_0_AWCACHE;
wire   [2:0] grp_Filter_fu_252_m_axi_A_0_AWPROT;
wire   [3:0] grp_Filter_fu_252_m_axi_A_0_AWQOS;
wire   [3:0] grp_Filter_fu_252_m_axi_A_0_AWREGION;
wire   [0:0] grp_Filter_fu_252_m_axi_A_0_AWUSER;
wire    grp_Filter_fu_252_m_axi_A_0_WVALID;
wire   [7:0] grp_Filter_fu_252_m_axi_A_0_WDATA;
wire   [0:0] grp_Filter_fu_252_m_axi_A_0_WSTRB;
wire    grp_Filter_fu_252_m_axi_A_0_WLAST;
wire   [0:0] grp_Filter_fu_252_m_axi_A_0_WID;
wire   [0:0] grp_Filter_fu_252_m_axi_A_0_WUSER;
wire    grp_Filter_fu_252_m_axi_A_0_ARVALID;
wire   [31:0] grp_Filter_fu_252_m_axi_A_0_ARADDR;
wire   [0:0] grp_Filter_fu_252_m_axi_A_0_ARID;
wire   [31:0] grp_Filter_fu_252_m_axi_A_0_ARLEN;
wire   [2:0] grp_Filter_fu_252_m_axi_A_0_ARSIZE;
wire   [1:0] grp_Filter_fu_252_m_axi_A_0_ARBURST;
wire   [1:0] grp_Filter_fu_252_m_axi_A_0_ARLOCK;
wire   [3:0] grp_Filter_fu_252_m_axi_A_0_ARCACHE;
wire   [2:0] grp_Filter_fu_252_m_axi_A_0_ARPROT;
wire   [3:0] grp_Filter_fu_252_m_axi_A_0_ARQOS;
wire   [3:0] grp_Filter_fu_252_m_axi_A_0_ARREGION;
wire   [0:0] grp_Filter_fu_252_m_axi_A_0_ARUSER;
wire    grp_Filter_fu_252_m_axi_A_0_RREADY;
wire    grp_Filter_fu_252_m_axi_A_0_BREADY;
wire    grp_Filter_fu_252_m_axi_B_0_AWVALID;
wire   [31:0] grp_Filter_fu_252_m_axi_B_0_AWADDR;
wire   [0:0] grp_Filter_fu_252_m_axi_B_0_AWID;
wire   [31:0] grp_Filter_fu_252_m_axi_B_0_AWLEN;
wire   [2:0] grp_Filter_fu_252_m_axi_B_0_AWSIZE;
wire   [1:0] grp_Filter_fu_252_m_axi_B_0_AWBURST;
wire   [1:0] grp_Filter_fu_252_m_axi_B_0_AWLOCK;
wire   [3:0] grp_Filter_fu_252_m_axi_B_0_AWCACHE;
wire   [2:0] grp_Filter_fu_252_m_axi_B_0_AWPROT;
wire   [3:0] grp_Filter_fu_252_m_axi_B_0_AWQOS;
wire   [3:0] grp_Filter_fu_252_m_axi_B_0_AWREGION;
wire   [0:0] grp_Filter_fu_252_m_axi_B_0_AWUSER;
wire    grp_Filter_fu_252_m_axi_B_0_WVALID;
wire   [7:0] grp_Filter_fu_252_m_axi_B_0_WDATA;
wire   [0:0] grp_Filter_fu_252_m_axi_B_0_WSTRB;
wire    grp_Filter_fu_252_m_axi_B_0_WLAST;
wire   [0:0] grp_Filter_fu_252_m_axi_B_0_WID;
wire   [0:0] grp_Filter_fu_252_m_axi_B_0_WUSER;
wire    grp_Filter_fu_252_m_axi_B_0_ARVALID;
wire   [31:0] grp_Filter_fu_252_m_axi_B_0_ARADDR;
wire   [0:0] grp_Filter_fu_252_m_axi_B_0_ARID;
wire   [31:0] grp_Filter_fu_252_m_axi_B_0_ARLEN;
wire   [2:0] grp_Filter_fu_252_m_axi_B_0_ARSIZE;
wire   [1:0] grp_Filter_fu_252_m_axi_B_0_ARBURST;
wire   [1:0] grp_Filter_fu_252_m_axi_B_0_ARLOCK;
wire   [3:0] grp_Filter_fu_252_m_axi_B_0_ARCACHE;
wire   [2:0] grp_Filter_fu_252_m_axi_B_0_ARPROT;
wire   [3:0] grp_Filter_fu_252_m_axi_B_0_ARQOS;
wire   [3:0] grp_Filter_fu_252_m_axi_B_0_ARREGION;
wire   [0:0] grp_Filter_fu_252_m_axi_B_0_ARUSER;
wire    grp_Filter_fu_252_m_axi_B_0_RREADY;
wire    grp_Filter_fu_252_m_axi_B_0_BREADY;
wire    grp_Filter_fu_252_m_axi_C_0_AWVALID;
wire   [31:0] grp_Filter_fu_252_m_axi_C_0_AWADDR;
wire   [0:0] grp_Filter_fu_252_m_axi_C_0_AWID;
wire   [31:0] grp_Filter_fu_252_m_axi_C_0_AWLEN;
wire   [2:0] grp_Filter_fu_252_m_axi_C_0_AWSIZE;
wire   [1:0] grp_Filter_fu_252_m_axi_C_0_AWBURST;
wire   [1:0] grp_Filter_fu_252_m_axi_C_0_AWLOCK;
wire   [3:0] grp_Filter_fu_252_m_axi_C_0_AWCACHE;
wire   [2:0] grp_Filter_fu_252_m_axi_C_0_AWPROT;
wire   [3:0] grp_Filter_fu_252_m_axi_C_0_AWQOS;
wire   [3:0] grp_Filter_fu_252_m_axi_C_0_AWREGION;
wire   [0:0] grp_Filter_fu_252_m_axi_C_0_AWUSER;
wire    grp_Filter_fu_252_m_axi_C_0_WVALID;
wire   [7:0] grp_Filter_fu_252_m_axi_C_0_WDATA;
wire   [0:0] grp_Filter_fu_252_m_axi_C_0_WSTRB;
wire    grp_Filter_fu_252_m_axi_C_0_WLAST;
wire   [0:0] grp_Filter_fu_252_m_axi_C_0_WID;
wire   [0:0] grp_Filter_fu_252_m_axi_C_0_WUSER;
wire    grp_Filter_fu_252_m_axi_C_0_ARVALID;
wire   [31:0] grp_Filter_fu_252_m_axi_C_0_ARADDR;
wire   [0:0] grp_Filter_fu_252_m_axi_C_0_ARID;
wire   [31:0] grp_Filter_fu_252_m_axi_C_0_ARLEN;
wire   [2:0] grp_Filter_fu_252_m_axi_C_0_ARSIZE;
wire   [1:0] grp_Filter_fu_252_m_axi_C_0_ARBURST;
wire   [1:0] grp_Filter_fu_252_m_axi_C_0_ARLOCK;
wire   [3:0] grp_Filter_fu_252_m_axi_C_0_ARCACHE;
wire   [2:0] grp_Filter_fu_252_m_axi_C_0_ARPROT;
wire   [3:0] grp_Filter_fu_252_m_axi_C_0_ARQOS;
wire   [3:0] grp_Filter_fu_252_m_axi_C_0_ARREGION;
wire   [0:0] grp_Filter_fu_252_m_axi_C_0_ARUSER;
wire    grp_Filter_fu_252_m_axi_C_0_RREADY;
wire    grp_Filter_fu_252_m_axi_C_0_BREADY;
wire    grp_DWT_IR_fu_286_ap_start;
wire    grp_DWT_IR_fu_286_ap_done;
wire    grp_DWT_IR_fu_286_ap_idle;
wire    grp_DWT_IR_fu_286_ap_ready;
wire    grp_DWT_IR_fu_286_m_axi_B_0_AWVALID;
wire   [31:0] grp_DWT_IR_fu_286_m_axi_B_0_AWADDR;
wire   [0:0] grp_DWT_IR_fu_286_m_axi_B_0_AWID;
wire   [31:0] grp_DWT_IR_fu_286_m_axi_B_0_AWLEN;
wire   [2:0] grp_DWT_IR_fu_286_m_axi_B_0_AWSIZE;
wire   [1:0] grp_DWT_IR_fu_286_m_axi_B_0_AWBURST;
wire   [1:0] grp_DWT_IR_fu_286_m_axi_B_0_AWLOCK;
wire   [3:0] grp_DWT_IR_fu_286_m_axi_B_0_AWCACHE;
wire   [2:0] grp_DWT_IR_fu_286_m_axi_B_0_AWPROT;
wire   [3:0] grp_DWT_IR_fu_286_m_axi_B_0_AWQOS;
wire   [3:0] grp_DWT_IR_fu_286_m_axi_B_0_AWREGION;
wire   [0:0] grp_DWT_IR_fu_286_m_axi_B_0_AWUSER;
wire    grp_DWT_IR_fu_286_m_axi_B_0_WVALID;
wire   [7:0] grp_DWT_IR_fu_286_m_axi_B_0_WDATA;
wire   [0:0] grp_DWT_IR_fu_286_m_axi_B_0_WSTRB;
wire    grp_DWT_IR_fu_286_m_axi_B_0_WLAST;
wire   [0:0] grp_DWT_IR_fu_286_m_axi_B_0_WID;
wire   [0:0] grp_DWT_IR_fu_286_m_axi_B_0_WUSER;
wire    grp_DWT_IR_fu_286_m_axi_B_0_ARVALID;
wire   [31:0] grp_DWT_IR_fu_286_m_axi_B_0_ARADDR;
wire   [0:0] grp_DWT_IR_fu_286_m_axi_B_0_ARID;
wire   [31:0] grp_DWT_IR_fu_286_m_axi_B_0_ARLEN;
wire   [2:0] grp_DWT_IR_fu_286_m_axi_B_0_ARSIZE;
wire   [1:0] grp_DWT_IR_fu_286_m_axi_B_0_ARBURST;
wire   [1:0] grp_DWT_IR_fu_286_m_axi_B_0_ARLOCK;
wire   [3:0] grp_DWT_IR_fu_286_m_axi_B_0_ARCACHE;
wire   [2:0] grp_DWT_IR_fu_286_m_axi_B_0_ARPROT;
wire   [3:0] grp_DWT_IR_fu_286_m_axi_B_0_ARQOS;
wire   [3:0] grp_DWT_IR_fu_286_m_axi_B_0_ARREGION;
wire   [0:0] grp_DWT_IR_fu_286_m_axi_B_0_ARUSER;
wire    grp_DWT_IR_fu_286_m_axi_B_0_RREADY;
wire    grp_DWT_IR_fu_286_m_axi_B_0_BREADY;
wire    grp_DWT_color_fu_308_ap_start;
wire    grp_DWT_color_fu_308_ap_done;
wire    grp_DWT_color_fu_308_ap_idle;
wire    grp_DWT_color_fu_308_ap_ready;
wire    grp_DWT_color_fu_308_m_axi_A_0_AWVALID;
wire   [31:0] grp_DWT_color_fu_308_m_axi_A_0_AWADDR;
wire   [0:0] grp_DWT_color_fu_308_m_axi_A_0_AWID;
wire   [31:0] grp_DWT_color_fu_308_m_axi_A_0_AWLEN;
wire   [2:0] grp_DWT_color_fu_308_m_axi_A_0_AWSIZE;
wire   [1:0] grp_DWT_color_fu_308_m_axi_A_0_AWBURST;
wire   [1:0] grp_DWT_color_fu_308_m_axi_A_0_AWLOCK;
wire   [3:0] grp_DWT_color_fu_308_m_axi_A_0_AWCACHE;
wire   [2:0] grp_DWT_color_fu_308_m_axi_A_0_AWPROT;
wire   [3:0] grp_DWT_color_fu_308_m_axi_A_0_AWQOS;
wire   [3:0] grp_DWT_color_fu_308_m_axi_A_0_AWREGION;
wire   [0:0] grp_DWT_color_fu_308_m_axi_A_0_AWUSER;
wire    grp_DWT_color_fu_308_m_axi_A_0_WVALID;
wire   [7:0] grp_DWT_color_fu_308_m_axi_A_0_WDATA;
wire   [0:0] grp_DWT_color_fu_308_m_axi_A_0_WSTRB;
wire    grp_DWT_color_fu_308_m_axi_A_0_WLAST;
wire   [0:0] grp_DWT_color_fu_308_m_axi_A_0_WID;
wire   [0:0] grp_DWT_color_fu_308_m_axi_A_0_WUSER;
wire    grp_DWT_color_fu_308_m_axi_A_0_ARVALID;
wire   [31:0] grp_DWT_color_fu_308_m_axi_A_0_ARADDR;
wire   [0:0] grp_DWT_color_fu_308_m_axi_A_0_ARID;
wire   [31:0] grp_DWT_color_fu_308_m_axi_A_0_ARLEN;
wire   [2:0] grp_DWT_color_fu_308_m_axi_A_0_ARSIZE;
wire   [1:0] grp_DWT_color_fu_308_m_axi_A_0_ARBURST;
wire   [1:0] grp_DWT_color_fu_308_m_axi_A_0_ARLOCK;
wire   [3:0] grp_DWT_color_fu_308_m_axi_A_0_ARCACHE;
wire   [2:0] grp_DWT_color_fu_308_m_axi_A_0_ARPROT;
wire   [3:0] grp_DWT_color_fu_308_m_axi_A_0_ARQOS;
wire   [3:0] grp_DWT_color_fu_308_m_axi_A_0_ARREGION;
wire   [0:0] grp_DWT_color_fu_308_m_axi_A_0_ARUSER;
wire    grp_DWT_color_fu_308_m_axi_A_0_RREADY;
wire    grp_DWT_color_fu_308_m_axi_A_0_BREADY;
wire    grp_IDWT_fu_330_ap_start;
wire    grp_IDWT_fu_330_ap_done;
wire    grp_IDWT_fu_330_ap_idle;
wire    grp_IDWT_fu_330_ap_ready;
wire    grp_IDWT_fu_330_m_axi_C_0_AWVALID;
wire   [31:0] grp_IDWT_fu_330_m_axi_C_0_AWADDR;
wire   [0:0] grp_IDWT_fu_330_m_axi_C_0_AWID;
wire   [31:0] grp_IDWT_fu_330_m_axi_C_0_AWLEN;
wire   [2:0] grp_IDWT_fu_330_m_axi_C_0_AWSIZE;
wire   [1:0] grp_IDWT_fu_330_m_axi_C_0_AWBURST;
wire   [1:0] grp_IDWT_fu_330_m_axi_C_0_AWLOCK;
wire   [3:0] grp_IDWT_fu_330_m_axi_C_0_AWCACHE;
wire   [2:0] grp_IDWT_fu_330_m_axi_C_0_AWPROT;
wire   [3:0] grp_IDWT_fu_330_m_axi_C_0_AWQOS;
wire   [3:0] grp_IDWT_fu_330_m_axi_C_0_AWREGION;
wire   [0:0] grp_IDWT_fu_330_m_axi_C_0_AWUSER;
wire    grp_IDWT_fu_330_m_axi_C_0_WVALID;
wire   [7:0] grp_IDWT_fu_330_m_axi_C_0_WDATA;
wire   [0:0] grp_IDWT_fu_330_m_axi_C_0_WSTRB;
wire    grp_IDWT_fu_330_m_axi_C_0_WLAST;
wire   [0:0] grp_IDWT_fu_330_m_axi_C_0_WID;
wire   [0:0] grp_IDWT_fu_330_m_axi_C_0_WUSER;
wire    grp_IDWT_fu_330_m_axi_C_0_ARVALID;
wire   [31:0] grp_IDWT_fu_330_m_axi_C_0_ARADDR;
wire   [0:0] grp_IDWT_fu_330_m_axi_C_0_ARID;
wire   [31:0] grp_IDWT_fu_330_m_axi_C_0_ARLEN;
wire   [2:0] grp_IDWT_fu_330_m_axi_C_0_ARSIZE;
wire   [1:0] grp_IDWT_fu_330_m_axi_C_0_ARBURST;
wire   [1:0] grp_IDWT_fu_330_m_axi_C_0_ARLOCK;
wire   [3:0] grp_IDWT_fu_330_m_axi_C_0_ARCACHE;
wire   [2:0] grp_IDWT_fu_330_m_axi_C_0_ARPROT;
wire   [3:0] grp_IDWT_fu_330_m_axi_C_0_ARQOS;
wire   [3:0] grp_IDWT_fu_330_m_axi_C_0_ARREGION;
wire   [0:0] grp_IDWT_fu_330_m_axi_C_0_ARUSER;
wire    grp_IDWT_fu_330_m_axi_C_0_RREADY;
wire    grp_IDWT_fu_330_m_axi_C_0_BREADY;
reg    grp_Filter_fu_252_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_DWT_IR_fu_286_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_DWT_color_fu_308_ap_start_reg;
reg    grp_IDWT_fu_330_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg   [5:0] ap_NS_fsm;
reg    ap_block_state2_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_Filter_fu_252_ap_start_reg = 1'b0;
#0 grp_DWT_IR_fu_286_ap_start_reg = 1'b0;
#0 grp_DWT_color_fu_308_ap_start_reg = 1'b0;
#0 grp_IDWT_fu_330_ap_start_reg = 1'b0;
end

DWT_Accel_CTL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTL_DATA_WIDTH ))
DWT_Accel_CTL_s_axi_U(
    .AWVALID(s_axi_CTL_AWVALID),
    .AWREADY(s_axi_CTL_AWREADY),
    .AWADDR(s_axi_CTL_AWADDR),
    .WVALID(s_axi_CTL_WVALID),
    .WREADY(s_axi_CTL_WREADY),
    .WDATA(s_axi_CTL_WDATA),
    .WSTRB(s_axi_CTL_WSTRB),
    .ARVALID(s_axi_CTL_ARVALID),
    .ARREADY(s_axi_CTL_ARREADY),
    .ARADDR(s_axi_CTL_ARADDR),
    .RVALID(s_axi_CTL_RVALID),
    .RREADY(s_axi_CTL_RREADY),
    .RDATA(s_axi_CTL_RDATA),
    .RRESP(s_axi_CTL_RRESP),
    .BVALID(s_axi_CTL_BVALID),
    .BREADY(s_axi_CTL_BREADY),
    .BRESP(s_axi_CTL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .a_0(a_0),
    .a_1(a_1),
    .a_2(a_2),
    .a_3(a_3),
    .a_4(a_4),
    .a_5(a_5),
    .a_6(a_6),
    .a_7(a_7),
    .b_0(b_0),
    .b_1(b_1),
    .b_2(b_2),
    .b_3(b_3),
    .b_4(b_4),
    .b_5(b_5),
    .b_6(b_6),
    .b_7(b_7),
    .c_0(c_0),
    .c_1(c_1),
    .c_2(c_2),
    .c_3(c_3),
    .c_4(c_4),
    .c_5(c_5),
    .c_6(c_6),
    .c_7(c_7)
);

DWT_Accel_DATA_A_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_A_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_A_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_A_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_A_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_A_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_A_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_A_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_A_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_A_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_A_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_A_CACHE_VALUE ))
DWT_Accel_DATA_A_m_axi_U(
    .AWVALID(m_axi_DATA_A_AWVALID),
    .AWREADY(m_axi_DATA_A_AWREADY),
    .AWADDR(m_axi_DATA_A_AWADDR),
    .AWID(m_axi_DATA_A_AWID),
    .AWLEN(m_axi_DATA_A_AWLEN),
    .AWSIZE(m_axi_DATA_A_AWSIZE),
    .AWBURST(m_axi_DATA_A_AWBURST),
    .AWLOCK(m_axi_DATA_A_AWLOCK),
    .AWCACHE(m_axi_DATA_A_AWCACHE),
    .AWPROT(m_axi_DATA_A_AWPROT),
    .AWQOS(m_axi_DATA_A_AWQOS),
    .AWREGION(m_axi_DATA_A_AWREGION),
    .AWUSER(m_axi_DATA_A_AWUSER),
    .WVALID(m_axi_DATA_A_WVALID),
    .WREADY(m_axi_DATA_A_WREADY),
    .WDATA(m_axi_DATA_A_WDATA),
    .WSTRB(m_axi_DATA_A_WSTRB),
    .WLAST(m_axi_DATA_A_WLAST),
    .WID(m_axi_DATA_A_WID),
    .WUSER(m_axi_DATA_A_WUSER),
    .ARVALID(m_axi_DATA_A_ARVALID),
    .ARREADY(m_axi_DATA_A_ARREADY),
    .ARADDR(m_axi_DATA_A_ARADDR),
    .ARID(m_axi_DATA_A_ARID),
    .ARLEN(m_axi_DATA_A_ARLEN),
    .ARSIZE(m_axi_DATA_A_ARSIZE),
    .ARBURST(m_axi_DATA_A_ARBURST),
    .ARLOCK(m_axi_DATA_A_ARLOCK),
    .ARCACHE(m_axi_DATA_A_ARCACHE),
    .ARPROT(m_axi_DATA_A_ARPROT),
    .ARQOS(m_axi_DATA_A_ARQOS),
    .ARREGION(m_axi_DATA_A_ARREGION),
    .ARUSER(m_axi_DATA_A_ARUSER),
    .RVALID(m_axi_DATA_A_RVALID),
    .RREADY(m_axi_DATA_A_RREADY),
    .RDATA(m_axi_DATA_A_RDATA),
    .RLAST(m_axi_DATA_A_RLAST),
    .RID(m_axi_DATA_A_RID),
    .RUSER(m_axi_DATA_A_RUSER),
    .RRESP(m_axi_DATA_A_RRESP),
    .BVALID(m_axi_DATA_A_BVALID),
    .BREADY(m_axi_DATA_A_BREADY),
    .BRESP(m_axi_DATA_A_BRESP),
    .BID(m_axi_DATA_A_BID),
    .BUSER(m_axi_DATA_A_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_A_ARVALID),
    .I_ARREADY(DATA_A_ARREADY),
    .I_ARADDR(grp_Filter_fu_252_m_axi_A_0_ARADDR),
    .I_ARID(grp_Filter_fu_252_m_axi_A_0_ARID),
    .I_ARLEN(grp_Filter_fu_252_m_axi_A_0_ARLEN),
    .I_ARSIZE(grp_Filter_fu_252_m_axi_A_0_ARSIZE),
    .I_ARLOCK(grp_Filter_fu_252_m_axi_A_0_ARLOCK),
    .I_ARCACHE(grp_Filter_fu_252_m_axi_A_0_ARCACHE),
    .I_ARQOS(grp_Filter_fu_252_m_axi_A_0_ARQOS),
    .I_ARPROT(grp_Filter_fu_252_m_axi_A_0_ARPROT),
    .I_ARUSER(grp_Filter_fu_252_m_axi_A_0_ARUSER),
    .I_ARBURST(grp_Filter_fu_252_m_axi_A_0_ARBURST),
    .I_ARREGION(grp_Filter_fu_252_m_axi_A_0_ARREGION),
    .I_RVALID(DATA_A_RVALID),
    .I_RREADY(DATA_A_RREADY),
    .I_RDATA(DATA_A_RDATA),
    .I_RID(DATA_A_RID),
    .I_RUSER(DATA_A_RUSER),
    .I_RRESP(DATA_A_RRESP),
    .I_RLAST(DATA_A_RLAST),
    .I_AWVALID(DATA_A_AWVALID),
    .I_AWREADY(DATA_A_AWREADY),
    .I_AWADDR(grp_DWT_color_fu_308_m_axi_A_0_AWADDR),
    .I_AWID(grp_DWT_color_fu_308_m_axi_A_0_AWID),
    .I_AWLEN(grp_DWT_color_fu_308_m_axi_A_0_AWLEN),
    .I_AWSIZE(grp_DWT_color_fu_308_m_axi_A_0_AWSIZE),
    .I_AWLOCK(grp_DWT_color_fu_308_m_axi_A_0_AWLOCK),
    .I_AWCACHE(grp_DWT_color_fu_308_m_axi_A_0_AWCACHE),
    .I_AWQOS(grp_DWT_color_fu_308_m_axi_A_0_AWQOS),
    .I_AWPROT(grp_DWT_color_fu_308_m_axi_A_0_AWPROT),
    .I_AWUSER(grp_DWT_color_fu_308_m_axi_A_0_AWUSER),
    .I_AWBURST(grp_DWT_color_fu_308_m_axi_A_0_AWBURST),
    .I_AWREGION(grp_DWT_color_fu_308_m_axi_A_0_AWREGION),
    .I_WVALID(DATA_A_WVALID),
    .I_WREADY(DATA_A_WREADY),
    .I_WDATA(grp_DWT_color_fu_308_m_axi_A_0_WDATA),
    .I_WID(grp_DWT_color_fu_308_m_axi_A_0_WID),
    .I_WUSER(grp_DWT_color_fu_308_m_axi_A_0_WUSER),
    .I_WLAST(grp_DWT_color_fu_308_m_axi_A_0_WLAST),
    .I_WSTRB(grp_DWT_color_fu_308_m_axi_A_0_WSTRB),
    .I_BVALID(DATA_A_BVALID),
    .I_BREADY(DATA_A_BREADY),
    .I_BRESP(DATA_A_BRESP),
    .I_BID(DATA_A_BID),
    .I_BUSER(DATA_A_BUSER)
);

DWT_Accel_DATA_B_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_B_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_B_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_B_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_B_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_B_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_B_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_B_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_B_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_B_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_B_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_B_CACHE_VALUE ))
DWT_Accel_DATA_B_m_axi_U(
    .AWVALID(m_axi_DATA_B_AWVALID),
    .AWREADY(m_axi_DATA_B_AWREADY),
    .AWADDR(m_axi_DATA_B_AWADDR),
    .AWID(m_axi_DATA_B_AWID),
    .AWLEN(m_axi_DATA_B_AWLEN),
    .AWSIZE(m_axi_DATA_B_AWSIZE),
    .AWBURST(m_axi_DATA_B_AWBURST),
    .AWLOCK(m_axi_DATA_B_AWLOCK),
    .AWCACHE(m_axi_DATA_B_AWCACHE),
    .AWPROT(m_axi_DATA_B_AWPROT),
    .AWQOS(m_axi_DATA_B_AWQOS),
    .AWREGION(m_axi_DATA_B_AWREGION),
    .AWUSER(m_axi_DATA_B_AWUSER),
    .WVALID(m_axi_DATA_B_WVALID),
    .WREADY(m_axi_DATA_B_WREADY),
    .WDATA(m_axi_DATA_B_WDATA),
    .WSTRB(m_axi_DATA_B_WSTRB),
    .WLAST(m_axi_DATA_B_WLAST),
    .WID(m_axi_DATA_B_WID),
    .WUSER(m_axi_DATA_B_WUSER),
    .ARVALID(m_axi_DATA_B_ARVALID),
    .ARREADY(m_axi_DATA_B_ARREADY),
    .ARADDR(m_axi_DATA_B_ARADDR),
    .ARID(m_axi_DATA_B_ARID),
    .ARLEN(m_axi_DATA_B_ARLEN),
    .ARSIZE(m_axi_DATA_B_ARSIZE),
    .ARBURST(m_axi_DATA_B_ARBURST),
    .ARLOCK(m_axi_DATA_B_ARLOCK),
    .ARCACHE(m_axi_DATA_B_ARCACHE),
    .ARPROT(m_axi_DATA_B_ARPROT),
    .ARQOS(m_axi_DATA_B_ARQOS),
    .ARREGION(m_axi_DATA_B_ARREGION),
    .ARUSER(m_axi_DATA_B_ARUSER),
    .RVALID(m_axi_DATA_B_RVALID),
    .RREADY(m_axi_DATA_B_RREADY),
    .RDATA(m_axi_DATA_B_RDATA),
    .RLAST(m_axi_DATA_B_RLAST),
    .RID(m_axi_DATA_B_RID),
    .RUSER(m_axi_DATA_B_RUSER),
    .RRESP(m_axi_DATA_B_RRESP),
    .BVALID(m_axi_DATA_B_BVALID),
    .BREADY(m_axi_DATA_B_BREADY),
    .BRESP(m_axi_DATA_B_BRESP),
    .BID(m_axi_DATA_B_BID),
    .BUSER(m_axi_DATA_B_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(DATA_B_ARVALID),
    .I_ARREADY(DATA_B_ARREADY),
    .I_ARADDR(DATA_B_ARADDR),
    .I_ARID(DATA_B_ARID),
    .I_ARLEN(DATA_B_ARLEN),
    .I_ARSIZE(DATA_B_ARSIZE),
    .I_ARLOCK(DATA_B_ARLOCK),
    .I_ARCACHE(DATA_B_ARCACHE),
    .I_ARQOS(DATA_B_ARQOS),
    .I_ARPROT(DATA_B_ARPROT),
    .I_ARUSER(DATA_B_ARUSER),
    .I_ARBURST(DATA_B_ARBURST),
    .I_ARREGION(DATA_B_ARREGION),
    .I_RVALID(DATA_B_RVALID),
    .I_RREADY(DATA_B_RREADY),
    .I_RDATA(DATA_B_RDATA),
    .I_RID(DATA_B_RID),
    .I_RUSER(DATA_B_RUSER),
    .I_RRESP(DATA_B_RRESP),
    .I_RLAST(DATA_B_RLAST),
    .I_AWVALID(DATA_B_AWVALID),
    .I_AWREADY(DATA_B_AWREADY),
    .I_AWADDR(grp_DWT_IR_fu_286_m_axi_B_0_AWADDR),
    .I_AWID(grp_DWT_IR_fu_286_m_axi_B_0_AWID),
    .I_AWLEN(grp_DWT_IR_fu_286_m_axi_B_0_AWLEN),
    .I_AWSIZE(grp_DWT_IR_fu_286_m_axi_B_0_AWSIZE),
    .I_AWLOCK(grp_DWT_IR_fu_286_m_axi_B_0_AWLOCK),
    .I_AWCACHE(grp_DWT_IR_fu_286_m_axi_B_0_AWCACHE),
    .I_AWQOS(grp_DWT_IR_fu_286_m_axi_B_0_AWQOS),
    .I_AWPROT(grp_DWT_IR_fu_286_m_axi_B_0_AWPROT),
    .I_AWUSER(grp_DWT_IR_fu_286_m_axi_B_0_AWUSER),
    .I_AWBURST(grp_DWT_IR_fu_286_m_axi_B_0_AWBURST),
    .I_AWREGION(grp_DWT_IR_fu_286_m_axi_B_0_AWREGION),
    .I_WVALID(DATA_B_WVALID),
    .I_WREADY(DATA_B_WREADY),
    .I_WDATA(grp_DWT_IR_fu_286_m_axi_B_0_WDATA),
    .I_WID(grp_DWT_IR_fu_286_m_axi_B_0_WID),
    .I_WUSER(grp_DWT_IR_fu_286_m_axi_B_0_WUSER),
    .I_WLAST(grp_DWT_IR_fu_286_m_axi_B_0_WLAST),
    .I_WSTRB(grp_DWT_IR_fu_286_m_axi_B_0_WSTRB),
    .I_BVALID(DATA_B_BVALID),
    .I_BREADY(DATA_B_BREADY),
    .I_BRESP(DATA_B_BRESP),
    .I_BID(DATA_B_BID),
    .I_BUSER(DATA_B_BUSER)
);

DWT_Accel_DATA_C_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_C_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_C_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_C_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_C_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_C_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_C_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_C_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_C_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_C_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_C_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_C_CACHE_VALUE ))
DWT_Accel_DATA_C_m_axi_U(
    .AWVALID(m_axi_DATA_C_AWVALID),
    .AWREADY(m_axi_DATA_C_AWREADY),
    .AWADDR(m_axi_DATA_C_AWADDR),
    .AWID(m_axi_DATA_C_AWID),
    .AWLEN(m_axi_DATA_C_AWLEN),
    .AWSIZE(m_axi_DATA_C_AWSIZE),
    .AWBURST(m_axi_DATA_C_AWBURST),
    .AWLOCK(m_axi_DATA_C_AWLOCK),
    .AWCACHE(m_axi_DATA_C_AWCACHE),
    .AWPROT(m_axi_DATA_C_AWPROT),
    .AWQOS(m_axi_DATA_C_AWQOS),
    .AWREGION(m_axi_DATA_C_AWREGION),
    .AWUSER(m_axi_DATA_C_AWUSER),
    .WVALID(m_axi_DATA_C_WVALID),
    .WREADY(m_axi_DATA_C_WREADY),
    .WDATA(m_axi_DATA_C_WDATA),
    .WSTRB(m_axi_DATA_C_WSTRB),
    .WLAST(m_axi_DATA_C_WLAST),
    .WID(m_axi_DATA_C_WID),
    .WUSER(m_axi_DATA_C_WUSER),
    .ARVALID(m_axi_DATA_C_ARVALID),
    .ARREADY(m_axi_DATA_C_ARREADY),
    .ARADDR(m_axi_DATA_C_ARADDR),
    .ARID(m_axi_DATA_C_ARID),
    .ARLEN(m_axi_DATA_C_ARLEN),
    .ARSIZE(m_axi_DATA_C_ARSIZE),
    .ARBURST(m_axi_DATA_C_ARBURST),
    .ARLOCK(m_axi_DATA_C_ARLOCK),
    .ARCACHE(m_axi_DATA_C_ARCACHE),
    .ARPROT(m_axi_DATA_C_ARPROT),
    .ARQOS(m_axi_DATA_C_ARQOS),
    .ARREGION(m_axi_DATA_C_ARREGION),
    .ARUSER(m_axi_DATA_C_ARUSER),
    .RVALID(m_axi_DATA_C_RVALID),
    .RREADY(m_axi_DATA_C_RREADY),
    .RDATA(m_axi_DATA_C_RDATA),
    .RLAST(m_axi_DATA_C_RLAST),
    .RID(m_axi_DATA_C_RID),
    .RUSER(m_axi_DATA_C_RUSER),
    .RRESP(m_axi_DATA_C_RRESP),
    .BVALID(m_axi_DATA_C_BVALID),
    .BREADY(m_axi_DATA_C_BREADY),
    .BRESP(m_axi_DATA_C_BRESP),
    .BID(m_axi_DATA_C_BID),
    .BUSER(m_axi_DATA_C_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(DATA_C_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(DATA_C_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(DATA_C_RDATA),
    .I_RID(DATA_C_RID),
    .I_RUSER(DATA_C_RUSER),
    .I_RRESP(DATA_C_RRESP),
    .I_RLAST(DATA_C_RLAST),
    .I_AWVALID(DATA_C_AWVALID),
    .I_AWREADY(DATA_C_AWREADY),
    .I_AWADDR(DATA_C_AWADDR),
    .I_AWID(DATA_C_AWID),
    .I_AWLEN(DATA_C_AWLEN),
    .I_AWSIZE(DATA_C_AWSIZE),
    .I_AWLOCK(DATA_C_AWLOCK),
    .I_AWCACHE(DATA_C_AWCACHE),
    .I_AWQOS(DATA_C_AWQOS),
    .I_AWPROT(DATA_C_AWPROT),
    .I_AWUSER(DATA_C_AWUSER),
    .I_AWBURST(DATA_C_AWBURST),
    .I_AWREGION(DATA_C_AWREGION),
    .I_WVALID(DATA_C_WVALID),
    .I_WREADY(DATA_C_WREADY),
    .I_WDATA(DATA_C_WDATA),
    .I_WID(DATA_C_WID),
    .I_WUSER(DATA_C_WUSER),
    .I_WLAST(DATA_C_WLAST),
    .I_WSTRB(DATA_C_WSTRB),
    .I_BVALID(DATA_C_BVALID),
    .I_BREADY(DATA_C_BREADY),
    .I_BRESP(DATA_C_BRESP),
    .I_BID(DATA_C_BID),
    .I_BUSER(DATA_C_BUSER)
);

Filter grp_Filter_fu_252(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Filter_fu_252_ap_start),
    .ap_done(grp_Filter_fu_252_ap_done),
    .ap_idle(grp_Filter_fu_252_ap_idle),
    .ap_ready(grp_Filter_fu_252_ap_ready),
    .m_axi_A_0_AWVALID(grp_Filter_fu_252_m_axi_A_0_AWVALID),
    .m_axi_A_0_AWREADY(1'b0),
    .m_axi_A_0_AWADDR(grp_Filter_fu_252_m_axi_A_0_AWADDR),
    .m_axi_A_0_AWID(grp_Filter_fu_252_m_axi_A_0_AWID),
    .m_axi_A_0_AWLEN(grp_Filter_fu_252_m_axi_A_0_AWLEN),
    .m_axi_A_0_AWSIZE(grp_Filter_fu_252_m_axi_A_0_AWSIZE),
    .m_axi_A_0_AWBURST(grp_Filter_fu_252_m_axi_A_0_AWBURST),
    .m_axi_A_0_AWLOCK(grp_Filter_fu_252_m_axi_A_0_AWLOCK),
    .m_axi_A_0_AWCACHE(grp_Filter_fu_252_m_axi_A_0_AWCACHE),
    .m_axi_A_0_AWPROT(grp_Filter_fu_252_m_axi_A_0_AWPROT),
    .m_axi_A_0_AWQOS(grp_Filter_fu_252_m_axi_A_0_AWQOS),
    .m_axi_A_0_AWREGION(grp_Filter_fu_252_m_axi_A_0_AWREGION),
    .m_axi_A_0_AWUSER(grp_Filter_fu_252_m_axi_A_0_AWUSER),
    .m_axi_A_0_WVALID(grp_Filter_fu_252_m_axi_A_0_WVALID),
    .m_axi_A_0_WREADY(1'b0),
    .m_axi_A_0_WDATA(grp_Filter_fu_252_m_axi_A_0_WDATA),
    .m_axi_A_0_WSTRB(grp_Filter_fu_252_m_axi_A_0_WSTRB),
    .m_axi_A_0_WLAST(grp_Filter_fu_252_m_axi_A_0_WLAST),
    .m_axi_A_0_WID(grp_Filter_fu_252_m_axi_A_0_WID),
    .m_axi_A_0_WUSER(grp_Filter_fu_252_m_axi_A_0_WUSER),
    .m_axi_A_0_ARVALID(grp_Filter_fu_252_m_axi_A_0_ARVALID),
    .m_axi_A_0_ARREADY(DATA_A_ARREADY),
    .m_axi_A_0_ARADDR(grp_Filter_fu_252_m_axi_A_0_ARADDR),
    .m_axi_A_0_ARID(grp_Filter_fu_252_m_axi_A_0_ARID),
    .m_axi_A_0_ARLEN(grp_Filter_fu_252_m_axi_A_0_ARLEN),
    .m_axi_A_0_ARSIZE(grp_Filter_fu_252_m_axi_A_0_ARSIZE),
    .m_axi_A_0_ARBURST(grp_Filter_fu_252_m_axi_A_0_ARBURST),
    .m_axi_A_0_ARLOCK(grp_Filter_fu_252_m_axi_A_0_ARLOCK),
    .m_axi_A_0_ARCACHE(grp_Filter_fu_252_m_axi_A_0_ARCACHE),
    .m_axi_A_0_ARPROT(grp_Filter_fu_252_m_axi_A_0_ARPROT),
    .m_axi_A_0_ARQOS(grp_Filter_fu_252_m_axi_A_0_ARQOS),
    .m_axi_A_0_ARREGION(grp_Filter_fu_252_m_axi_A_0_ARREGION),
    .m_axi_A_0_ARUSER(grp_Filter_fu_252_m_axi_A_0_ARUSER),
    .m_axi_A_0_RVALID(DATA_A_RVALID),
    .m_axi_A_0_RREADY(grp_Filter_fu_252_m_axi_A_0_RREADY),
    .m_axi_A_0_RDATA(DATA_A_RDATA),
    .m_axi_A_0_RLAST(DATA_A_RLAST),
    .m_axi_A_0_RID(DATA_A_RID),
    .m_axi_A_0_RUSER(DATA_A_RUSER),
    .m_axi_A_0_RRESP(DATA_A_RRESP),
    .m_axi_A_0_BVALID(1'b0),
    .m_axi_A_0_BREADY(grp_Filter_fu_252_m_axi_A_0_BREADY),
    .m_axi_A_0_BRESP(2'd0),
    .m_axi_A_0_BID(1'd0),
    .m_axi_A_0_BUSER(1'd0),
    .A_0_offset(a_0_read_reg_692),
    .A_1_offset(a_1_read_reg_685),
    .A_2_offset(a_2_read_reg_678),
    .A_3_offset(a_3_read_reg_671),
    .A_4_offset(a_4_read_reg_664),
    .A_5_offset(a_5_read_reg_657),
    .A_6_offset(a_6_read_reg_650),
    .A_7_offset(a_7_read_reg_643),
    .m_axi_B_0_AWVALID(grp_Filter_fu_252_m_axi_B_0_AWVALID),
    .m_axi_B_0_AWREADY(1'b0),
    .m_axi_B_0_AWADDR(grp_Filter_fu_252_m_axi_B_0_AWADDR),
    .m_axi_B_0_AWID(grp_Filter_fu_252_m_axi_B_0_AWID),
    .m_axi_B_0_AWLEN(grp_Filter_fu_252_m_axi_B_0_AWLEN),
    .m_axi_B_0_AWSIZE(grp_Filter_fu_252_m_axi_B_0_AWSIZE),
    .m_axi_B_0_AWBURST(grp_Filter_fu_252_m_axi_B_0_AWBURST),
    .m_axi_B_0_AWLOCK(grp_Filter_fu_252_m_axi_B_0_AWLOCK),
    .m_axi_B_0_AWCACHE(grp_Filter_fu_252_m_axi_B_0_AWCACHE),
    .m_axi_B_0_AWPROT(grp_Filter_fu_252_m_axi_B_0_AWPROT),
    .m_axi_B_0_AWQOS(grp_Filter_fu_252_m_axi_B_0_AWQOS),
    .m_axi_B_0_AWREGION(grp_Filter_fu_252_m_axi_B_0_AWREGION),
    .m_axi_B_0_AWUSER(grp_Filter_fu_252_m_axi_B_0_AWUSER),
    .m_axi_B_0_WVALID(grp_Filter_fu_252_m_axi_B_0_WVALID),
    .m_axi_B_0_WREADY(1'b0),
    .m_axi_B_0_WDATA(grp_Filter_fu_252_m_axi_B_0_WDATA),
    .m_axi_B_0_WSTRB(grp_Filter_fu_252_m_axi_B_0_WSTRB),
    .m_axi_B_0_WLAST(grp_Filter_fu_252_m_axi_B_0_WLAST),
    .m_axi_B_0_WID(grp_Filter_fu_252_m_axi_B_0_WID),
    .m_axi_B_0_WUSER(grp_Filter_fu_252_m_axi_B_0_WUSER),
    .m_axi_B_0_ARVALID(grp_Filter_fu_252_m_axi_B_0_ARVALID),
    .m_axi_B_0_ARREADY(DATA_B_ARREADY),
    .m_axi_B_0_ARADDR(grp_Filter_fu_252_m_axi_B_0_ARADDR),
    .m_axi_B_0_ARID(grp_Filter_fu_252_m_axi_B_0_ARID),
    .m_axi_B_0_ARLEN(grp_Filter_fu_252_m_axi_B_0_ARLEN),
    .m_axi_B_0_ARSIZE(grp_Filter_fu_252_m_axi_B_0_ARSIZE),
    .m_axi_B_0_ARBURST(grp_Filter_fu_252_m_axi_B_0_ARBURST),
    .m_axi_B_0_ARLOCK(grp_Filter_fu_252_m_axi_B_0_ARLOCK),
    .m_axi_B_0_ARCACHE(grp_Filter_fu_252_m_axi_B_0_ARCACHE),
    .m_axi_B_0_ARPROT(grp_Filter_fu_252_m_axi_B_0_ARPROT),
    .m_axi_B_0_ARQOS(grp_Filter_fu_252_m_axi_B_0_ARQOS),
    .m_axi_B_0_ARREGION(grp_Filter_fu_252_m_axi_B_0_ARREGION),
    .m_axi_B_0_ARUSER(grp_Filter_fu_252_m_axi_B_0_ARUSER),
    .m_axi_B_0_RVALID(DATA_B_RVALID),
    .m_axi_B_0_RREADY(grp_Filter_fu_252_m_axi_B_0_RREADY),
    .m_axi_B_0_RDATA(DATA_B_RDATA),
    .m_axi_B_0_RLAST(DATA_B_RLAST),
    .m_axi_B_0_RID(DATA_B_RID),
    .m_axi_B_0_RUSER(DATA_B_RUSER),
    .m_axi_B_0_RRESP(DATA_B_RRESP),
    .m_axi_B_0_BVALID(1'b0),
    .m_axi_B_0_BREADY(grp_Filter_fu_252_m_axi_B_0_BREADY),
    .m_axi_B_0_BRESP(2'd0),
    .m_axi_B_0_BID(1'd0),
    .m_axi_B_0_BUSER(1'd0),
    .B_0_offset(b_0_read_reg_637),
    .B_1_offset(b_1_read_reg_630),
    .B_2_offset(b_2_read_reg_623),
    .B_3_offset(b_3_read_reg_616),
    .B_4_offset(b_4_read_reg_609),
    .B_5_offset(b_5_read_reg_602),
    .B_6_offset(b_6_read_reg_595),
    .B_7_offset(b_7_read_reg_588),
    .m_axi_C_0_AWVALID(grp_Filter_fu_252_m_axi_C_0_AWVALID),
    .m_axi_C_0_AWREADY(DATA_C_AWREADY),
    .m_axi_C_0_AWADDR(grp_Filter_fu_252_m_axi_C_0_AWADDR),
    .m_axi_C_0_AWID(grp_Filter_fu_252_m_axi_C_0_AWID),
    .m_axi_C_0_AWLEN(grp_Filter_fu_252_m_axi_C_0_AWLEN),
    .m_axi_C_0_AWSIZE(grp_Filter_fu_252_m_axi_C_0_AWSIZE),
    .m_axi_C_0_AWBURST(grp_Filter_fu_252_m_axi_C_0_AWBURST),
    .m_axi_C_0_AWLOCK(grp_Filter_fu_252_m_axi_C_0_AWLOCK),
    .m_axi_C_0_AWCACHE(grp_Filter_fu_252_m_axi_C_0_AWCACHE),
    .m_axi_C_0_AWPROT(grp_Filter_fu_252_m_axi_C_0_AWPROT),
    .m_axi_C_0_AWQOS(grp_Filter_fu_252_m_axi_C_0_AWQOS),
    .m_axi_C_0_AWREGION(grp_Filter_fu_252_m_axi_C_0_AWREGION),
    .m_axi_C_0_AWUSER(grp_Filter_fu_252_m_axi_C_0_AWUSER),
    .m_axi_C_0_WVALID(grp_Filter_fu_252_m_axi_C_0_WVALID),
    .m_axi_C_0_WREADY(DATA_C_WREADY),
    .m_axi_C_0_WDATA(grp_Filter_fu_252_m_axi_C_0_WDATA),
    .m_axi_C_0_WSTRB(grp_Filter_fu_252_m_axi_C_0_WSTRB),
    .m_axi_C_0_WLAST(grp_Filter_fu_252_m_axi_C_0_WLAST),
    .m_axi_C_0_WID(grp_Filter_fu_252_m_axi_C_0_WID),
    .m_axi_C_0_WUSER(grp_Filter_fu_252_m_axi_C_0_WUSER),
    .m_axi_C_0_ARVALID(grp_Filter_fu_252_m_axi_C_0_ARVALID),
    .m_axi_C_0_ARREADY(1'b0),
    .m_axi_C_0_ARADDR(grp_Filter_fu_252_m_axi_C_0_ARADDR),
    .m_axi_C_0_ARID(grp_Filter_fu_252_m_axi_C_0_ARID),
    .m_axi_C_0_ARLEN(grp_Filter_fu_252_m_axi_C_0_ARLEN),
    .m_axi_C_0_ARSIZE(grp_Filter_fu_252_m_axi_C_0_ARSIZE),
    .m_axi_C_0_ARBURST(grp_Filter_fu_252_m_axi_C_0_ARBURST),
    .m_axi_C_0_ARLOCK(grp_Filter_fu_252_m_axi_C_0_ARLOCK),
    .m_axi_C_0_ARCACHE(grp_Filter_fu_252_m_axi_C_0_ARCACHE),
    .m_axi_C_0_ARPROT(grp_Filter_fu_252_m_axi_C_0_ARPROT),
    .m_axi_C_0_ARQOS(grp_Filter_fu_252_m_axi_C_0_ARQOS),
    .m_axi_C_0_ARREGION(grp_Filter_fu_252_m_axi_C_0_ARREGION),
    .m_axi_C_0_ARUSER(grp_Filter_fu_252_m_axi_C_0_ARUSER),
    .m_axi_C_0_RVALID(1'b0),
    .m_axi_C_0_RREADY(grp_Filter_fu_252_m_axi_C_0_RREADY),
    .m_axi_C_0_RDATA(8'd0),
    .m_axi_C_0_RLAST(1'b0),
    .m_axi_C_0_RID(1'd0),
    .m_axi_C_0_RUSER(1'd0),
    .m_axi_C_0_RRESP(2'd0),
    .m_axi_C_0_BVALID(DATA_C_BVALID),
    .m_axi_C_0_BREADY(grp_Filter_fu_252_m_axi_C_0_BREADY),
    .m_axi_C_0_BRESP(DATA_C_BRESP),
    .m_axi_C_0_BID(DATA_C_BID),
    .m_axi_C_0_BUSER(DATA_C_BUSER),
    .C_0_offset(c_0_read_reg_582),
    .C_1_offset(c_1_read_reg_575),
    .C_2_offset(c_2_read_reg_568),
    .C_3_offset(c_3_read_reg_561),
    .C_4_offset(c_4_read_reg_554),
    .C_5_offset(c_5_read_reg_547),
    .C_6_offset(c_6_read_reg_540),
    .C_7_offset(c_7_read_reg_533)
);

DWT_IR grp_DWT_IR_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_DWT_IR_fu_286_ap_start),
    .ap_done(grp_DWT_IR_fu_286_ap_done),
    .ap_idle(grp_DWT_IR_fu_286_ap_idle),
    .ap_ready(grp_DWT_IR_fu_286_ap_ready),
    .m_axi_B_0_AWVALID(grp_DWT_IR_fu_286_m_axi_B_0_AWVALID),
    .m_axi_B_0_AWREADY(DATA_B_AWREADY),
    .m_axi_B_0_AWADDR(grp_DWT_IR_fu_286_m_axi_B_0_AWADDR),
    .m_axi_B_0_AWID(grp_DWT_IR_fu_286_m_axi_B_0_AWID),
    .m_axi_B_0_AWLEN(grp_DWT_IR_fu_286_m_axi_B_0_AWLEN),
    .m_axi_B_0_AWSIZE(grp_DWT_IR_fu_286_m_axi_B_0_AWSIZE),
    .m_axi_B_0_AWBURST(grp_DWT_IR_fu_286_m_axi_B_0_AWBURST),
    .m_axi_B_0_AWLOCK(grp_DWT_IR_fu_286_m_axi_B_0_AWLOCK),
    .m_axi_B_0_AWCACHE(grp_DWT_IR_fu_286_m_axi_B_0_AWCACHE),
    .m_axi_B_0_AWPROT(grp_DWT_IR_fu_286_m_axi_B_0_AWPROT),
    .m_axi_B_0_AWQOS(grp_DWT_IR_fu_286_m_axi_B_0_AWQOS),
    .m_axi_B_0_AWREGION(grp_DWT_IR_fu_286_m_axi_B_0_AWREGION),
    .m_axi_B_0_AWUSER(grp_DWT_IR_fu_286_m_axi_B_0_AWUSER),
    .m_axi_B_0_WVALID(grp_DWT_IR_fu_286_m_axi_B_0_WVALID),
    .m_axi_B_0_WREADY(DATA_B_WREADY),
    .m_axi_B_0_WDATA(grp_DWT_IR_fu_286_m_axi_B_0_WDATA),
    .m_axi_B_0_WSTRB(grp_DWT_IR_fu_286_m_axi_B_0_WSTRB),
    .m_axi_B_0_WLAST(grp_DWT_IR_fu_286_m_axi_B_0_WLAST),
    .m_axi_B_0_WID(grp_DWT_IR_fu_286_m_axi_B_0_WID),
    .m_axi_B_0_WUSER(grp_DWT_IR_fu_286_m_axi_B_0_WUSER),
    .m_axi_B_0_ARVALID(grp_DWT_IR_fu_286_m_axi_B_0_ARVALID),
    .m_axi_B_0_ARREADY(DATA_B_ARREADY),
    .m_axi_B_0_ARADDR(grp_DWT_IR_fu_286_m_axi_B_0_ARADDR),
    .m_axi_B_0_ARID(grp_DWT_IR_fu_286_m_axi_B_0_ARID),
    .m_axi_B_0_ARLEN(grp_DWT_IR_fu_286_m_axi_B_0_ARLEN),
    .m_axi_B_0_ARSIZE(grp_DWT_IR_fu_286_m_axi_B_0_ARSIZE),
    .m_axi_B_0_ARBURST(grp_DWT_IR_fu_286_m_axi_B_0_ARBURST),
    .m_axi_B_0_ARLOCK(grp_DWT_IR_fu_286_m_axi_B_0_ARLOCK),
    .m_axi_B_0_ARCACHE(grp_DWT_IR_fu_286_m_axi_B_0_ARCACHE),
    .m_axi_B_0_ARPROT(grp_DWT_IR_fu_286_m_axi_B_0_ARPROT),
    .m_axi_B_0_ARQOS(grp_DWT_IR_fu_286_m_axi_B_0_ARQOS),
    .m_axi_B_0_ARREGION(grp_DWT_IR_fu_286_m_axi_B_0_ARREGION),
    .m_axi_B_0_ARUSER(grp_DWT_IR_fu_286_m_axi_B_0_ARUSER),
    .m_axi_B_0_RVALID(DATA_B_RVALID),
    .m_axi_B_0_RREADY(grp_DWT_IR_fu_286_m_axi_B_0_RREADY),
    .m_axi_B_0_RDATA(DATA_B_RDATA),
    .m_axi_B_0_RLAST(DATA_B_RLAST),
    .m_axi_B_0_RID(DATA_B_RID),
    .m_axi_B_0_RUSER(DATA_B_RUSER),
    .m_axi_B_0_RRESP(DATA_B_RRESP),
    .m_axi_B_0_BVALID(DATA_B_BVALID),
    .m_axi_B_0_BREADY(grp_DWT_IR_fu_286_m_axi_B_0_BREADY),
    .m_axi_B_0_BRESP(DATA_B_BRESP),
    .m_axi_B_0_BID(DATA_B_BID),
    .m_axi_B_0_BUSER(DATA_B_BUSER),
    .B_0_offset(b_0_read_reg_637),
    .B_1_offset(b_1_read_reg_630),
    .B_2_offset(b_2_read_reg_623),
    .B_3_offset(b_3_read_reg_616),
    .B_4_offset(b_4_read_reg_609),
    .B_5_offset(b_5_read_reg_602),
    .B_6_offset(b_6_read_reg_595),
    .B_7_offset(b_7_read_reg_588)
);

DWT_color grp_DWT_color_fu_308(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_DWT_color_fu_308_ap_start),
    .ap_done(grp_DWT_color_fu_308_ap_done),
    .ap_idle(grp_DWT_color_fu_308_ap_idle),
    .ap_ready(grp_DWT_color_fu_308_ap_ready),
    .m_axi_A_0_AWVALID(grp_DWT_color_fu_308_m_axi_A_0_AWVALID),
    .m_axi_A_0_AWREADY(DATA_A_AWREADY),
    .m_axi_A_0_AWADDR(grp_DWT_color_fu_308_m_axi_A_0_AWADDR),
    .m_axi_A_0_AWID(grp_DWT_color_fu_308_m_axi_A_0_AWID),
    .m_axi_A_0_AWLEN(grp_DWT_color_fu_308_m_axi_A_0_AWLEN),
    .m_axi_A_0_AWSIZE(grp_DWT_color_fu_308_m_axi_A_0_AWSIZE),
    .m_axi_A_0_AWBURST(grp_DWT_color_fu_308_m_axi_A_0_AWBURST),
    .m_axi_A_0_AWLOCK(grp_DWT_color_fu_308_m_axi_A_0_AWLOCK),
    .m_axi_A_0_AWCACHE(grp_DWT_color_fu_308_m_axi_A_0_AWCACHE),
    .m_axi_A_0_AWPROT(grp_DWT_color_fu_308_m_axi_A_0_AWPROT),
    .m_axi_A_0_AWQOS(grp_DWT_color_fu_308_m_axi_A_0_AWQOS),
    .m_axi_A_0_AWREGION(grp_DWT_color_fu_308_m_axi_A_0_AWREGION),
    .m_axi_A_0_AWUSER(grp_DWT_color_fu_308_m_axi_A_0_AWUSER),
    .m_axi_A_0_WVALID(grp_DWT_color_fu_308_m_axi_A_0_WVALID),
    .m_axi_A_0_WREADY(DATA_A_WREADY),
    .m_axi_A_0_WDATA(grp_DWT_color_fu_308_m_axi_A_0_WDATA),
    .m_axi_A_0_WSTRB(grp_DWT_color_fu_308_m_axi_A_0_WSTRB),
    .m_axi_A_0_WLAST(grp_DWT_color_fu_308_m_axi_A_0_WLAST),
    .m_axi_A_0_WID(grp_DWT_color_fu_308_m_axi_A_0_WID),
    .m_axi_A_0_WUSER(grp_DWT_color_fu_308_m_axi_A_0_WUSER),
    .m_axi_A_0_ARVALID(grp_DWT_color_fu_308_m_axi_A_0_ARVALID),
    .m_axi_A_0_ARREADY(1'b0),
    .m_axi_A_0_ARADDR(grp_DWT_color_fu_308_m_axi_A_0_ARADDR),
    .m_axi_A_0_ARID(grp_DWT_color_fu_308_m_axi_A_0_ARID),
    .m_axi_A_0_ARLEN(grp_DWT_color_fu_308_m_axi_A_0_ARLEN),
    .m_axi_A_0_ARSIZE(grp_DWT_color_fu_308_m_axi_A_0_ARSIZE),
    .m_axi_A_0_ARBURST(grp_DWT_color_fu_308_m_axi_A_0_ARBURST),
    .m_axi_A_0_ARLOCK(grp_DWT_color_fu_308_m_axi_A_0_ARLOCK),
    .m_axi_A_0_ARCACHE(grp_DWT_color_fu_308_m_axi_A_0_ARCACHE),
    .m_axi_A_0_ARPROT(grp_DWT_color_fu_308_m_axi_A_0_ARPROT),
    .m_axi_A_0_ARQOS(grp_DWT_color_fu_308_m_axi_A_0_ARQOS),
    .m_axi_A_0_ARREGION(grp_DWT_color_fu_308_m_axi_A_0_ARREGION),
    .m_axi_A_0_ARUSER(grp_DWT_color_fu_308_m_axi_A_0_ARUSER),
    .m_axi_A_0_RVALID(1'b0),
    .m_axi_A_0_RREADY(grp_DWT_color_fu_308_m_axi_A_0_RREADY),
    .m_axi_A_0_RDATA(8'd0),
    .m_axi_A_0_RLAST(1'b0),
    .m_axi_A_0_RID(1'd0),
    .m_axi_A_0_RUSER(1'd0),
    .m_axi_A_0_RRESP(2'd0),
    .m_axi_A_0_BVALID(DATA_A_BVALID),
    .m_axi_A_0_BREADY(grp_DWT_color_fu_308_m_axi_A_0_BREADY),
    .m_axi_A_0_BRESP(DATA_A_BRESP),
    .m_axi_A_0_BID(DATA_A_BID),
    .m_axi_A_0_BUSER(DATA_A_BUSER),
    .A_0_offset(a_0_read_reg_692),
    .A_1_offset(a_1_read_reg_685),
    .A_2_offset(a_2_read_reg_678),
    .A_3_offset(a_3_read_reg_671),
    .A_4_offset(a_4_read_reg_664),
    .A_5_offset(a_5_read_reg_657),
    .A_6_offset(a_6_read_reg_650),
    .A_7_offset(a_7_read_reg_643)
);

IDWT grp_IDWT_fu_330(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_IDWT_fu_330_ap_start),
    .ap_done(grp_IDWT_fu_330_ap_done),
    .ap_idle(grp_IDWT_fu_330_ap_idle),
    .ap_ready(grp_IDWT_fu_330_ap_ready),
    .m_axi_C_0_AWVALID(grp_IDWT_fu_330_m_axi_C_0_AWVALID),
    .m_axi_C_0_AWREADY(DATA_C_AWREADY),
    .m_axi_C_0_AWADDR(grp_IDWT_fu_330_m_axi_C_0_AWADDR),
    .m_axi_C_0_AWID(grp_IDWT_fu_330_m_axi_C_0_AWID),
    .m_axi_C_0_AWLEN(grp_IDWT_fu_330_m_axi_C_0_AWLEN),
    .m_axi_C_0_AWSIZE(grp_IDWT_fu_330_m_axi_C_0_AWSIZE),
    .m_axi_C_0_AWBURST(grp_IDWT_fu_330_m_axi_C_0_AWBURST),
    .m_axi_C_0_AWLOCK(grp_IDWT_fu_330_m_axi_C_0_AWLOCK),
    .m_axi_C_0_AWCACHE(grp_IDWT_fu_330_m_axi_C_0_AWCACHE),
    .m_axi_C_0_AWPROT(grp_IDWT_fu_330_m_axi_C_0_AWPROT),
    .m_axi_C_0_AWQOS(grp_IDWT_fu_330_m_axi_C_0_AWQOS),
    .m_axi_C_0_AWREGION(grp_IDWT_fu_330_m_axi_C_0_AWREGION),
    .m_axi_C_0_AWUSER(grp_IDWT_fu_330_m_axi_C_0_AWUSER),
    .m_axi_C_0_WVALID(grp_IDWT_fu_330_m_axi_C_0_WVALID),
    .m_axi_C_0_WREADY(DATA_C_WREADY),
    .m_axi_C_0_WDATA(grp_IDWT_fu_330_m_axi_C_0_WDATA),
    .m_axi_C_0_WSTRB(grp_IDWT_fu_330_m_axi_C_0_WSTRB),
    .m_axi_C_0_WLAST(grp_IDWT_fu_330_m_axi_C_0_WLAST),
    .m_axi_C_0_WID(grp_IDWT_fu_330_m_axi_C_0_WID),
    .m_axi_C_0_WUSER(grp_IDWT_fu_330_m_axi_C_0_WUSER),
    .m_axi_C_0_ARVALID(grp_IDWT_fu_330_m_axi_C_0_ARVALID),
    .m_axi_C_0_ARREADY(1'b0),
    .m_axi_C_0_ARADDR(grp_IDWT_fu_330_m_axi_C_0_ARADDR),
    .m_axi_C_0_ARID(grp_IDWT_fu_330_m_axi_C_0_ARID),
    .m_axi_C_0_ARLEN(grp_IDWT_fu_330_m_axi_C_0_ARLEN),
    .m_axi_C_0_ARSIZE(grp_IDWT_fu_330_m_axi_C_0_ARSIZE),
    .m_axi_C_0_ARBURST(grp_IDWT_fu_330_m_axi_C_0_ARBURST),
    .m_axi_C_0_ARLOCK(grp_IDWT_fu_330_m_axi_C_0_ARLOCK),
    .m_axi_C_0_ARCACHE(grp_IDWT_fu_330_m_axi_C_0_ARCACHE),
    .m_axi_C_0_ARPROT(grp_IDWT_fu_330_m_axi_C_0_ARPROT),
    .m_axi_C_0_ARQOS(grp_IDWT_fu_330_m_axi_C_0_ARQOS),
    .m_axi_C_0_ARREGION(grp_IDWT_fu_330_m_axi_C_0_ARREGION),
    .m_axi_C_0_ARUSER(grp_IDWT_fu_330_m_axi_C_0_ARUSER),
    .m_axi_C_0_RVALID(1'b0),
    .m_axi_C_0_RREADY(grp_IDWT_fu_330_m_axi_C_0_RREADY),
    .m_axi_C_0_RDATA(8'd0),
    .m_axi_C_0_RLAST(1'b0),
    .m_axi_C_0_RID(1'd0),
    .m_axi_C_0_RUSER(1'd0),
    .m_axi_C_0_RRESP(2'd0),
    .m_axi_C_0_BVALID(DATA_C_BVALID),
    .m_axi_C_0_BREADY(grp_IDWT_fu_330_m_axi_C_0_BREADY),
    .m_axi_C_0_BRESP(DATA_C_BRESP),
    .m_axi_C_0_BID(DATA_C_BID),
    .m_axi_C_0_BUSER(DATA_C_BUSER),
    .C_0_offset(c_0_read_reg_582),
    .C_1_offset(c_1_read_reg_575),
    .C_2_offset(c_2_read_reg_568),
    .C_3_offset(c_3_read_reg_561),
    .C_4_offset(c_4_read_reg_554),
    .C_5_offset(c_5_read_reg_547),
    .C_6_offset(c_6_read_reg_540),
    .C_7_offset(c_7_read_reg_533)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_DWT_IR_fu_286_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_DWT_IR_fu_286_ap_start_reg <= 1'b1;
        end else if ((grp_DWT_IR_fu_286_ap_ready == 1'b1)) begin
            grp_DWT_IR_fu_286_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_DWT_color_fu_308_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_DWT_color_fu_308_ap_start_reg <= 1'b1;
        end else if ((grp_DWT_color_fu_308_ap_ready == 1'b1)) begin
            grp_DWT_color_fu_308_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Filter_fu_252_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_Filter_fu_252_ap_start_reg <= 1'b1;
        end else if ((grp_Filter_fu_252_ap_ready == 1'b1)) begin
            grp_Filter_fu_252_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_IDWT_fu_330_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_IDWT_fu_330_ap_start_reg <= 1'b1;
        end else if ((grp_IDWT_fu_330_ap_ready == 1'b1)) begin
            grp_IDWT_fu_330_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        a_0_read_reg_692 <= a_0;
        a_1_read_reg_685 <= a_1;
        a_2_read_reg_678 <= a_2;
        a_3_read_reg_671 <= a_3;
        a_4_read_reg_664 <= a_4;
        a_5_read_reg_657 <= a_5;
        a_6_read_reg_650 <= a_6;
        a_7_read_reg_643 <= a_7;
        b_0_read_reg_637 <= b_0;
        b_1_read_reg_630 <= b_1;
        b_2_read_reg_623 <= b_2;
        b_3_read_reg_616 <= b_3;
        b_4_read_reg_609 <= b_4;
        b_5_read_reg_602 <= b_5;
        b_6_read_reg_595 <= b_6;
        b_7_read_reg_588 <= b_7;
        c_0_read_reg_582 <= c_0;
        c_1_read_reg_575 <= c_1;
        c_2_read_reg_568 <= c_2;
        c_3_read_reg_561 <= c_3;
        c_4_read_reg_554 <= c_4;
        c_5_read_reg_547 <= c_5;
        c_6_read_reg_540 <= c_6;
        c_7_read_reg_533 <= c_7;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_A_ARVALID = grp_Filter_fu_252_m_axi_A_0_ARVALID;
    end else begin
        DATA_A_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_A_AWVALID = grp_DWT_color_fu_308_m_axi_A_0_AWVALID;
    end else begin
        DATA_A_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_A_BREADY = grp_DWT_color_fu_308_m_axi_A_0_BREADY;
    end else begin
        DATA_A_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_A_RREADY = grp_Filter_fu_252_m_axi_A_0_RREADY;
    end else begin
        DATA_A_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_A_WVALID = grp_DWT_color_fu_308_m_axi_A_0_WVALID;
    end else begin
        DATA_A_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARADDR = grp_DWT_IR_fu_286_m_axi_B_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARADDR = grp_Filter_fu_252_m_axi_B_0_ARADDR;
    end else begin
        DATA_B_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARBURST = grp_DWT_IR_fu_286_m_axi_B_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARBURST = grp_Filter_fu_252_m_axi_B_0_ARBURST;
    end else begin
        DATA_B_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARCACHE = grp_DWT_IR_fu_286_m_axi_B_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARCACHE = grp_Filter_fu_252_m_axi_B_0_ARCACHE;
    end else begin
        DATA_B_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARID = grp_DWT_IR_fu_286_m_axi_B_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARID = grp_Filter_fu_252_m_axi_B_0_ARID;
    end else begin
        DATA_B_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARLEN = grp_DWT_IR_fu_286_m_axi_B_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARLEN = grp_Filter_fu_252_m_axi_B_0_ARLEN;
    end else begin
        DATA_B_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARLOCK = grp_DWT_IR_fu_286_m_axi_B_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARLOCK = grp_Filter_fu_252_m_axi_B_0_ARLOCK;
    end else begin
        DATA_B_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARPROT = grp_DWT_IR_fu_286_m_axi_B_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARPROT = grp_Filter_fu_252_m_axi_B_0_ARPROT;
    end else begin
        DATA_B_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARQOS = grp_DWT_IR_fu_286_m_axi_B_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARQOS = grp_Filter_fu_252_m_axi_B_0_ARQOS;
    end else begin
        DATA_B_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARREGION = grp_DWT_IR_fu_286_m_axi_B_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARREGION = grp_Filter_fu_252_m_axi_B_0_ARREGION;
    end else begin
        DATA_B_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARSIZE = grp_DWT_IR_fu_286_m_axi_B_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARSIZE = grp_Filter_fu_252_m_axi_B_0_ARSIZE;
    end else begin
        DATA_B_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARUSER = grp_DWT_IR_fu_286_m_axi_B_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARUSER = grp_Filter_fu_252_m_axi_B_0_ARUSER;
    end else begin
        DATA_B_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_ARVALID = grp_DWT_IR_fu_286_m_axi_B_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_ARVALID = grp_Filter_fu_252_m_axi_B_0_ARVALID;
    end else begin
        DATA_B_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_AWVALID = grp_DWT_IR_fu_286_m_axi_B_0_AWVALID;
    end else begin
        DATA_B_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_BREADY = grp_DWT_IR_fu_286_m_axi_B_0_BREADY;
    end else begin
        DATA_B_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_RREADY = grp_DWT_IR_fu_286_m_axi_B_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_B_RREADY = grp_Filter_fu_252_m_axi_B_0_RREADY;
    end else begin
        DATA_B_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        DATA_B_WVALID = grp_DWT_IR_fu_286_m_axi_B_0_WVALID;
    end else begin
        DATA_B_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWADDR = grp_IDWT_fu_330_m_axi_C_0_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWADDR = grp_Filter_fu_252_m_axi_C_0_AWADDR;
    end else begin
        DATA_C_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWBURST = grp_IDWT_fu_330_m_axi_C_0_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWBURST = grp_Filter_fu_252_m_axi_C_0_AWBURST;
    end else begin
        DATA_C_AWBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWCACHE = grp_IDWT_fu_330_m_axi_C_0_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWCACHE = grp_Filter_fu_252_m_axi_C_0_AWCACHE;
    end else begin
        DATA_C_AWCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWID = grp_IDWT_fu_330_m_axi_C_0_AWID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWID = grp_Filter_fu_252_m_axi_C_0_AWID;
    end else begin
        DATA_C_AWID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWLEN = grp_IDWT_fu_330_m_axi_C_0_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWLEN = grp_Filter_fu_252_m_axi_C_0_AWLEN;
    end else begin
        DATA_C_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWLOCK = grp_IDWT_fu_330_m_axi_C_0_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWLOCK = grp_Filter_fu_252_m_axi_C_0_AWLOCK;
    end else begin
        DATA_C_AWLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWPROT = grp_IDWT_fu_330_m_axi_C_0_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWPROT = grp_Filter_fu_252_m_axi_C_0_AWPROT;
    end else begin
        DATA_C_AWPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWQOS = grp_IDWT_fu_330_m_axi_C_0_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWQOS = grp_Filter_fu_252_m_axi_C_0_AWQOS;
    end else begin
        DATA_C_AWQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWREGION = grp_IDWT_fu_330_m_axi_C_0_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWREGION = grp_Filter_fu_252_m_axi_C_0_AWREGION;
    end else begin
        DATA_C_AWREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWSIZE = grp_IDWT_fu_330_m_axi_C_0_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWSIZE = grp_Filter_fu_252_m_axi_C_0_AWSIZE;
    end else begin
        DATA_C_AWSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWUSER = grp_IDWT_fu_330_m_axi_C_0_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWUSER = grp_Filter_fu_252_m_axi_C_0_AWUSER;
    end else begin
        DATA_C_AWUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_AWVALID = grp_IDWT_fu_330_m_axi_C_0_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_AWVALID = grp_Filter_fu_252_m_axi_C_0_AWVALID;
    end else begin
        DATA_C_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_BREADY = grp_IDWT_fu_330_m_axi_C_0_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_BREADY = grp_Filter_fu_252_m_axi_C_0_BREADY;
    end else begin
        DATA_C_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_WDATA = grp_IDWT_fu_330_m_axi_C_0_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_WDATA = grp_Filter_fu_252_m_axi_C_0_WDATA;
    end else begin
        DATA_C_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_WID = grp_IDWT_fu_330_m_axi_C_0_WID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_WID = grp_Filter_fu_252_m_axi_C_0_WID;
    end else begin
        DATA_C_WID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_WLAST = grp_IDWT_fu_330_m_axi_C_0_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_WLAST = grp_Filter_fu_252_m_axi_C_0_WLAST;
    end else begin
        DATA_C_WLAST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_WSTRB = grp_IDWT_fu_330_m_axi_C_0_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_WSTRB = grp_Filter_fu_252_m_axi_C_0_WSTRB;
    end else begin
        DATA_C_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_WUSER = grp_IDWT_fu_330_m_axi_C_0_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_WUSER = grp_Filter_fu_252_m_axi_C_0_WUSER;
    end else begin
        DATA_C_WUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        DATA_C_WVALID = grp_IDWT_fu_330_m_axi_C_0_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        DATA_C_WVALID = grp_Filter_fu_252_m_axi_C_0_WVALID;
    end else begin
        DATA_C_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((grp_IDWT_fu_330_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_IDWT_fu_330_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_Filter_fu_252_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_IDWT_fu_330_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_DWT_color_fu_308_ap_done == 1'b0) | (grp_DWT_IR_fu_286_ap_done == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_DWT_IR_fu_286_ap_start = grp_DWT_IR_fu_286_ap_start_reg;

assign grp_DWT_color_fu_308_ap_start = grp_DWT_color_fu_308_ap_start_reg;

assign grp_Filter_fu_252_ap_start = grp_Filter_fu_252_ap_start_reg;

assign grp_IDWT_fu_330_ap_start = grp_IDWT_fu_330_ap_start_reg;

endmodule //DWT_Accel
